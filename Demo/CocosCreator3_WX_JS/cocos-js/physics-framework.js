System.register(["./coordinates-converts-utils-bf8713a9.js","./base.js","./index-6f89fc06.js","./event-enum-5a5aa40e.js","./deprecated-3.0.0-f3f53c89.js","./renderable-component-658e90bd.js","./texture-buffer-pool-d3259f64.js","./transform-utils-1f4a2037.js","./view-7d20208a.js","./screen-d46ce30a.js","./json-asset-0797cbb7.js","./camera-component-f1234106.js","./find-5191dd26.js","./factory-9595a1ce.js","./mesh-3d4ecfd0.js","./skeleton-c02c55ca.js","./index-7b16c266.js","./collision-matrix-fb9744d2.js","./terrain-asset-59d38d9d.js"],(function(e){"use strict";var o,n,i,t,s,a,l,r,p,d,c,C,m,y,u;return{setters:[function(e){o=e.bL,n=e.bM,i=e.l,t=e.eD},function(){},function(){},function(){},function(){},function(){},function(){},function(){},function(){},function(){},function(){},function(){},function(){},function(){},function(){},function(){},function(o){s=o.P,a=o.C,l=o.a,r=o.B,p=o.S,d=o.b,c=o.R,C=o.M,m=o.c,y=o.d,u=o.p;var n={};n.BoxCollider=o.B,n.BoxColliderComponent=o.B,n.CapsuleCollider=o.b,n.CapsuleColliderComponent=o.b,n.Collider=o.C,n.ColliderComponent=o.C,n.ConeCollider=o.g,n.ConstantForce=o.e,n.Constraint=o.a,n.CylinderCollider=o.c,n.CylinderColliderComponent=o.c,n.HingeConstraint=o.H,n.MeshCollider=o.M,n.MeshColliderComponent=o.M,n.PhysicMaterial=o.d,n.PhysicsMaterial=o.d,n.PhysicsRayResult=o.f,n.PhysicsSystem=o.P,n.PlaneCollider=o.i,n.PointToPointConstraint=o.j,n.RigidBody=o.R,n.RigidBodyComponent=o.R,n.SimplexCollider=o.h,n.SphereCollider=o.S,n.SphereColliderComponent=o.S,n.TerrainCollider=o.T,n.physics=o.p,e(n)},function(o){var n={};n.EAxisDirection=o.E,n.ERigidBodyType=o.a,e(n)},function(){}],execute:function(){o(s,"PhysicsSystem",[{name:"ins",newName:"instance"}]),o(s.prototype,"PhysicsSystem.prototype",[{name:"deltaTime",newName:"fixedTimeStep"},{name:"maxSubStep",newName:"maxSubSteps"}]),n(s.prototype,"PhysicsSystem.prototype",[{name:"useFixedTime"},{name:"useCollisionMatrix"},{name:"updateCollisionMatrix"},{name:"resetCollisionMatrix"},{name:"isCollisionGroup"},{name:"setCollisionGroup"}]),o(a.prototype,"Collider.prototype",[{name:"attachedRigidbody",newName:"attachedRigidBody"}]),o(a,"Collider",[{name:"EColliderType",newName:"Type"},{name:"EAxisDirection",newName:"Axis"}]),o(l,"Constraint",[{name:"EConstraintType",newName:"Type"}]),o(r.prototype,"BoxCollider.prototype",[{name:"boxShape",newName:"shape"}]),o(p.prototype,"SphereCollider.prototype",[{name:"sphereShape",newName:"shape"}]),o(d.prototype,"CapsuleCollider.prototype",[{name:"capsuleShape",newName:"shape"}]),o(c.prototype,"RigidBody.prototype",[{name:"rigidBody",newName:"body"}]),o(c,"RigidBody",[{name:"ERigidBodyType",newName:"Type"}]),n(c.prototype,"RigidBody.prototype",[{name:"fixedRotation"}]),i.RigidBodyComponent=c,t.setClassAlias(c,"cc.RigidBodyComponent"),i.ColliderComponent=a,t.setClassAlias(a,"cc.ColliderComponent"),i.BoxColliderComponent=r,t.setClassAlias(r,"cc.BoxColliderComponent"),i.SphereColliderComponent=p,t.setClassAlias(p,"cc.SphereColliderComponent"),t.setClassAlias(d,"cc.CapsuleColliderComponent"),t.setClassAlias(C,"cc.MeshColliderComponent"),t.setClassAlias(m,"cc.CylinderColliderComponent"),i.PhysicMaterial=y,t.setClassAlias(y,"cc.PhysicMaterial"),i.physics=u}}}));
