System.register([],(function(e){"use strict";return{execute:function(){e({$:function(e,t,n,i){void 0===i&&(i=!0);for(var o=t.length(e),a=0;a<o;a++){var r=t.get(e,a);r&&n.free(r)}i?t.free(e):t.clear(e)},F:void 0,M:void 0,N:vu,O:function(e,t){for(var n=Object.entries(t),i=!1,o=0;o<n.length;o++)e[n[o][0]]!==n[o][1]&&(e[n[o][0]]=n[o][1],i=!0);return i},Q:void 0,T:Eu,V:void 0,X:Al,_:y,a:d,a0:void 0,aA:void 0,aC:void 0,aE:void 0,aG:void 0,aI:void 0,aK:void 0,aM:void 0,aO:void 0,aQ:void 0,aS:void 0,aU:void 0,aW:void 0,aY:void 0,ag:void 0,ai:void 0,ak:void 0,am:void 0,ao:void 0,aq:void 0,as:void 0,au:void 0,aw:void 0,ay:void 0,b:g,b1:jn,b3:En,b5:kn,b7:Dn,bA:function(e){return Math.abs(e.x)>Math.abs(e.y)?Math.abs(e.x)>Math.abs(e.z)?e.x:e.z:Math.abs(e.y)>Math.abs(e.z)?e.y:e.z},bB:function(e,t){return Math.abs(e)>Math.abs(t)?e:t},bC:ft,bD:ht,bE:pt,bK:function(e){e>0&&(ve=e)},bL:void 0,bM:void 0,bN:void 0,bO:za,bP:Lh,bQ:Fh,bT:rn,bV:qc,bW:Mm,bY:X_,ba:Bn,bd:Xn,bf:Jn,bh:yn,bj:function(e,t){return Math.abs(e-t)<=un*Math.max(1,Math.abs(e),Math.abs(t))},bk:function(e,t,n){return n=n||un,Math.abs(e-t)<=n},bl:_n,bm:function(e){return e<0?0:e>1?1:e},bn:function(e,t,n){return e+(t-e)*n},bo:function(e){return e*ln},bp:fn,br:dn,bs:function(e,t){return Math.floor(dn(e,t))},bt:vn,bu:pn,bv:function(e,t,n){return Math.floor(pn(e,t,n))},bw:function(e){return--e,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},bx:gn,by:function(e,t){return e=gn(e,2*t),t-Math.abs(e-t)},bz:function(e,t,n){return(n-e)/(t-e)},c:C,c$:void 0,c4:Zc,cA:void 0,cB:void 0,cC:void 0,cD:void 0,cE:void 0,cF:void 0,cG:void 0,cH:void 0,cI:void 0,cJ:void 0,cK:void 0,cL:void 0,cM:void 0,cN:void 0,cO:void 0,cP:void 0,cQ:void 0,cR:void 0,cS:void 0,cT:void 0,cU:void 0,cV:void 0,cW:void 0,cX:void 0,cY:void 0,cZ:void 0,c_:void 0,cg:P,ch:M,ci:O,cj:void 0,cy:void 0,d:S,d0:void 0,d1:void 0,d2:void 0,d3:void 0,d4:void 0,d8:da,d9:va,e:p,e3:J,e4:X,e5:oe,e7:ie,e8:ee,eE:function(e,t){if(e[dm]<1)throw new Error(O(5304,e[dm]));Om(e,!0,t),Pm(e);for(var n=new Dm(e[dm]),i=e[vm],o=e[pm],a=e[gm],r=e[xm],s=e[ym],c=0;c<s.length;++c)s[c].unshift(n,i,o,a,r);return s},eF:function(e,t,n){return[1,0,0,[e],0,n?[t,-1]:[t],[0],0,[],[],[]]},eH:Uc,eL:zm,eM:Ye,eO:Lc,eP:void 0,eS:void 0,eU:We,eX:Pc,eZ:void 0,ec:pc,ee:void 0,eq:x,ez:Le,f:R,f0:Dc,f2:Te,f4:Fc,f5:wt,f6:K,f7:void 0,f9:xa,fE:void 0,fF:function(){},fH:le,fI:se,fJ:function(){},fN:function(e){return Js($s({formerlySerializedAs:e}))},fT:Ot,fU:void 0,fW:Rt,fY:void 0,fZ:re,fb:ct,fc:Je,fd:Js,fe:_h,ff:fh,fg:dh,fh:vh,fi:ph,fv:Ce,fx:pr,g:b,g0:Pt,g1:Mt,g4:Ae,g5:$,g6:at,i:U,j:F,k:G,m:B,n:V,o:H,p:j,q:q,r:W,s:k,t:ne,u:void 0,v:void 0,w:v,x:void 0});const t=e("ep",!1),n=e("et",!1),i=e("eu",!0),o=e("es",!1);var a="undefined"==typeof window?global:window,r=e("l",{_global:a});r.internal={},a.CC_BUILD=!0,a.CC_TEST=!1,a.CC_EDITOR=t,a.CC_PREVIEW=!1,a.CC_DEV=!1,a.CC_DEBUG=!1,a.CC_JSB=o,a.CC_BYTEDANCE=!1,a.CC_WECHAT=!0,a.CC_ALIPAY=!1,a.CC_XIAOMI=!1,a.CC_BAIDU=!1,a.CC_COCOSPLAY=!1,a.CC_HUAWEI=!1,a.CC_OPPO=!1,a.CC_VIVO=!1,a.CC_MINIGAME=i,a.CC_RUNTIME_BASED=n,a.CC_SUPPORT_JIT=!1;var s=e("eo","3.0.0");a.CocosEngine=r.ENGINE_VERSION=s,a.cc=r;var c="https://github.com/cocos-creator/engine/blob/3d/EngineErrorMap.md",l=null,m=console.log.bind(console),u=m,_=m,f=function(e,t){if(!e){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];console.log("ASSERT: "+h.apply(void 0,[t].concat(i)))}};function h(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return r.js.formatStr.apply(null,[e].concat(n))}function d(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return m.apply(void 0,[e].concat(n))}function v(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return u.apply(void 0,[e].concat(n))}function p(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return _.apply(void 0,[e].concat(n))}function g(e,t){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];return f.apply(void 0,[e,t].concat(i))}function x(e){if(m=u=_=f=function(){},e!==N.NONE){if(e>N.ERROR){var t=function(e){if(r.game.canvas){if(!l){var t=document.createElement("Div");t.setAttribute("id","logInfoDiv"),t.setAttribute("width","200"),t.setAttribute("height",r.game.canvas.height);var n=t.style;n.zIndex="99999",n.position="absolute",n.top=n.left="0",(l=document.createElement("textarea")).setAttribute("rows","20"),l.setAttribute("cols","30"),l.setAttribute("disabled","true");var i=l.style;i.backgroundColor="transparent",i.borderBottom="1px solid #cccccc",i.borderTopWidth=i.borderLeftWidth=i.borderRightWidth="0px",i.borderTopStyle=i.borderLeftStyle=i.borderRightStyle="none",i.padding="0px",i.margin="0px",t.appendChild(l),r.game.canvas.parentNode.appendChild(t)}l.value=l.value+e+"\r\n",l.scrollTop=l.scrollHeight}};_=function(e){for(var n=arguments.length,i=new Array(n>1?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];t("ERROR :  "+h.apply(void 0,[e].concat(i)))},f=function(e,n){if(!e){for(var i=arguments.length,o=new Array(i>2?i-2:0),a=2;a<i;a++)o[a-2]=arguments[a];t("ASSERT: "+h.apply(void 0,[n].concat(o)))}},e!==N.ERROR_FOR_WEB_PAGE&&(u=function(e){for(var n=arguments.length,i=new Array(n>1?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];t("WARN :  "+h.apply(void 0,[e].concat(i)))}),e===N.INFO_FOR_WEB_PAGE&&(m=function(e){for(var n=arguments.length,i=new Array(n>1?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];t(h.apply(void 0,[e].concat(i)))})}else console&&console.log.apply&&(console.error||(console.error=console.log),console.warn||(console.warn=console.log),_=console.error.bind?console.error.bind(console):function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return console.error.apply(console,[e].concat(n))},f=function(e,t){if(!e){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];var a=h.apply(void 0,[t].concat(i));throw new Error(a)}});e!==N.ERROR&&(u=console.warn.bind?console.warn.bind(console):function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return console.warn.apply(console,[e].concat(n))}),e===N.INFO&&(m=console.log.bind?console.log.bind(console):function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return console.log.apply(console,[e].concat(n))})}}function y(e){p(e.stack||e)}function A(e){return function(t){for(var n=e+" "+t+", please go to "+c+"#"+t+" to see details.",i=arguments.length,o=new Array(i>1?i-1:0),a=1;a<i;a++)o[a-1]=arguments[a];return 0===o.length?n:n+" Arguments: "+o.join(", ")}}var T=A("Log");function C(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];d(T.apply(void 0,[e].concat(n)))}var E=A("Warning");function S(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];v(E.apply(void 0,[e].concat(n)))}var I=A("Error");function R(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];p(I.apply(void 0,[e].concat(n)))}var N,w=A("Assert");function b(e,t){if(!e){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];g(!1,w.apply(void 0,[t].concat(i)))}}function O(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];return I.apply(void 0,[e].concat(n))}function P(){return!!r.profiler&&r.profiler.isShowingStats()}function M(e){r.profiler&&(e?r.profiler.showStats():r.profiler.hideStats(),r.game.config.showFPS=!!e)}!function(e){e[e.NONE=0]="NONE",e[e.INFO=1]="INFO",e[e.WARN=2]="WARN",e[e.ERROR=3]="ERROR",e[e.INFO_FOR_WEB_PAGE=4]="INFO_FOR_WEB_PAGE",e[e.WARN_FOR_WEB_PAGE=5]="WARN_FOR_WEB_PAGE",e[e.ERROR_FOR_WEB_PAGE=6]="ERROR_FOR_WEB_PAGE"}(N||(N=e("cj",{}))),e("h",Object.freeze({__proto__:null,log:d,warn:v,error:p,assert:g,_resetDebugSetting:x,_throw:y,logID:C,warnID:S,errorID:R,assertID:b,get DebugMode(){return N},getError:O,isDisplayStats:P,setDisplayStats:M}));var D=/(\.[^\.\/\?\\]*)(\?.*)?$/,z=/((.*)(\/|\\|\\\\))?(.*?\..*$)?/,L=/[^\.\/]+\/\.\.\//;function F(){for(var e="",t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];for(var o=0,a=n;o<a.length;o++){var r=a[o];e=(e+(""===e?"":"/")+r).replace(/(\/|\\\\)$/,"")}return e}function U(e){var t=D.exec(e);return t?t[1]:""}function B(e){if(e){var t=e.lastIndexOf(".");if(-1!==t)return e.substring(0,t)}return e}function G(e,t){var n=e.indexOf("?");n>0&&(e=e.substring(0,n));var i=/(\/|\\)([^\/\\]+)$/g.exec(e.replace(/(\/|\\)$/,""));if(!i)return e;var o=i[2];return t&&e.substring(e.length-t.length).toLowerCase()===t.toLowerCase()?o.substring(0,o.length-t.length):o}function V(e){var t=z.exec(e);return t?t[2]:""}function H(e,t){t=t||"";var n=e.indexOf("?"),i="";return n>0&&(i=e.substring(n),e=e.substring(0,n)),(n=e.lastIndexOf("."))<0?e+t+i:e.substring(0,n)+t+i}function j(e,t,n){if(0===t.indexOf("."))return H(e,t);var i=e.indexOf("?"),o="",a=n?U(e):"";return i>0&&(o=e.substring(i),e=e.substring(0,i)),i=(i=e.lastIndexOf("/"))<=0?0:i+1,e.substring(0,i)+t+a+o}function q(e){var t=e=String(e);do{t=e,e=e.replace(L,"")}while(t.length!==e.length);return e}function k(e){return e.replace(/[\/\\]$/,"")}function W(){return r.sys.os===r.sys.OS_WINDOWS?"\\":"/"}function Y(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function X(e,t,n){return t&&Y(e.prototype,t),n&&Y(e,n),e}function K(){return(K=e("f6",Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e})).apply(this,arguments)}function J(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function Q(e,t){return(Q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Z(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function $(t,n,i){return($=Z()?e("g5",Reflect.construct):e("g5",(function(e,t,n){var i=[null];i.push.apply(i,t);var o=new(Function.bind.apply(e,i));return n&&Q(o,n.prototype),o}))).apply(null,arguments)}function ee(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function te(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function ne(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e){if(e){if("string"==typeof e)return te(e,void 0);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?te(e,void 0):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0;return function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=e[Symbol.iterator]()).next.bind(n)}function ie(e,t,n,i){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(i):void 0})}function oe(e,t,n,i,o){var a={};return Object.keys(i).forEach((function(e){a[e]=i[e]})),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=n.slice().reverse().reduce((function(n,i){return i(e,t,n)||n}),a),o&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(o):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}e("bI",Object.freeze({__proto__:null,join:F,extname:U,mainFileName:B,basename:G,dirname:V,changeExtname:H,changeBasename:j,_normalize:q,stripSep:k,getSeperator:W}));var ae=e("f$",2147483647);function re(e){return(e>0)-(e<0)}function se(e){var t,n;return t=(e>65535)<<4,t|=n=((e>>>=t)>255)<<3,t|=n=((e>>>=n)>15)<<2,(t|=n=((e>>>=n)>3)<<1)|(e>>>=n)>>1}function ce(e){var t=32;return(e&=-e)&&t--,65535&e&&(t-=16),16711935&e&&(t-=8),252645135&e&&(t-=4),858993459&e&&(t-=2),1431655765&e&&(t-=1),t}function le(e){return e+=0===e,--e,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,1+(e|=e>>>16)}var me=new Array(256);!function(e){for(var t=0;t<256;++t){var n=t,i=t,o=7;for(n>>>=1;n;n>>>=1)i<<=1,i|=1&n,--o;e[t]=i<<o&255}}(me),e("a$",Object.freeze({__proto__:null,INT_BITS:32,INT_MAX:ae,INT_MIN:-1<<31,sign:re,abs:function(e){var t=e>>31;return(e^t)-t},min:function(e,t){return t^(e^t)&-(e<t)},max:function(e,t){return e^(e^t)&-(e<t)},isPow2:function(e){return!(e&e-1||!e)},log2:se,log10:function(e){return e>=1e9?9:e>=1e8?8:e>=1e7?7:e>=1e6?6:e>=1e5?5:e>=1e4?4:e>=1e3?3:e>=100?2:e>=10?1:0},popCount:function(e){return 16843009*((e=(858993459&(e-=e>>>1&1431655765))+(e>>>2&858993459))+(e>>>4)&252645135)>>>24},countTrailingZeros:ce,nextPow2:le,prevPow2:function(e){return e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,(e|=e>>>16)-(e>>>1)},parity:function(e){return e^=e>>>16,e^=e>>>8,e^=e>>>4,27030>>>(e&=15)&1},reverse:function(e){return me[255&e]<<24|me[e>>>8&255]<<16|me[e>>>16&255]<<8|me[e>>>24&255]},interleave2:function(e,t){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e&=65535)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t&=65535)|t<<8))|t<<4))|t<<2))|t<<1))<<1},deinterleave2:function(e,t){return(e=65535&((e=16711935&((e=252645135&((e=858993459&((e=e>>>t&1431655765)|e>>>1))|e>>>2))|e>>>4))|e>>>16))<<16>>16},interleave3:function(e,t,n){return e=1227133513&((e=3272356035&((e=251719695&((e=4278190335&((e&=1023)|e<<16))|e<<8))|e<<4))|e<<2),(e|=(t=1227133513&((t=3272356035&((t=251719695&((t=4278190335&((t&=1023)|t<<16))|t<<8))|t<<4))|t<<2))<<1)|(n=1227133513&((n=3272356035&((n=251719695&((n=4278190335&((n&=1023)|n<<16))|n<<8))|n<<4))|n<<2))<<2},deinterleave3:function(e,t){return(e=1023&((e=4278190335&((e=251719695&((e=3272356035&((e=e>>>t&1227133513)|e>>>2))|e>>>4))|e>>>8))|e>>>16))<<22>>22},nextCombination:function(e){var t=e|e-1;return t+1|(~t&-~t)-1>>>ce(e)+1}}));var ue,_e,fe,he,de,ve=10,pe=0,ge=new Map;fe=function(e,t,n,i,o,a){var r=ge.get(a);r&&r.logTimes>r.count&&(o("'%s' is deprecated, please use '%s' instead.",e+"."+t,n+"."+i),r.count++)},ue=e("bL",(function(e,t,n){null!=e&&n.forEach((function(n){var i=pe++;ge.set(i,{id:i,count:0,logTimes:void 0!==n.logTimes?n.logTimes:ve});var o=null!=n.target?n.target:e,a=null!=n.newName?n.newName:n.name,r=null!=n.targetName?n.targetName:t,s=o==e;if(null!=n.customFunction)e[n.name]=function(){var e;return fe(t,n.name,r,a,v,i),(e=n.customFunction).call.apply(e,[this].concat(Array.prototype.slice.call(arguments)))};else if(null!=n.customSetter||null!=n.customGetter){var c=null!=n.customSetter,l=null!=n.customGetter;c&&l?Object.defineProperty(e,n.name,{get:function(){return fe(t,n.name,r,a,v,i),n.customGetter.call(this)},set:function(e){fe(t,n.name,r,a,v,i),n.customSetter.call(this,e)},enumerable:!1}):c?Object.defineProperty(e,n.name,{set:function(e){fe(t,n.name,r,a,v,i),n.customSetter.call(this,e)},enumerable:!1}):l&&Object.defineProperty(e,n.name,{get:function(){return fe(t,n.name,r,a,v,i),n.customGetter.call(this)},enumerable:!1})}else Object.defineProperty(e,n.name,{get:function(){return fe(t,n.name,r,a,v,i),s?this[a]:o[a]},set:function(e){fe(t,n.name,r,a,v,i),s?this[a]=e:o[a]=e},enumerable:!1})}))})),de=function(e,t,n,i,o){var a=ge.get(i),r=void 0===o?"":"("+o+")";a&&a.logTimes>a.count&&(n("'%s' has been removed. "+r,e+"."+t),a.count++)},_e=e("bM",(function(e,t,n){null!=e&&n.forEach((function(n){var i=pe++;ge.set(i,{id:i,count:0,logTimes:void 0!==n.logTimes?n.logTimes:ve}),Object.defineProperty(e,n.name,{get:function(){return de(t,n.name,p,i,n.suggest)},set:function(){de(t,n.name,p,i,n.suggest)},enumerable:!1})}))})),he=function(e,t,n,i,o){var a=ge.get(i),r=void 0===o?"":"("+o+")";a&&a.logTimes>a.count&&(n("'%s' is deprecated. "+r,e+"."+t),a.count++)},e("bN",(function(e,t,n){if(null!=e){var i=function(e,t,n,i,o,a){if(e.get){var r=e.get();e.get=function(){return he(t,n,i,o,a),r.call(this)}}if(e.set){var s=Object.create(e.set);e.set=function(e){he(t,n,i,o,a),s.call(this,e)}}};n.forEach((function(n){var o=n.name,a=Object.getOwnPropertyDescriptor(e,o);if(a){var r=pe++;if(ge.set(r,{id:r,count:0,logTimes:void 0!==n.logTimes?n.logTimes:ve}),null!=a.value)if("function"==typeof a.value){var s=a.value;e[o]=function(){return he(t,o,v,r,n.suggest),s.call.apply(s,[this].concat(Array.prototype.slice.call(arguments)))}}else i(a,t,o,v,r,n.suggest);else i(a,t,o,v,r,n.suggest);Object.defineProperty(e,o,{enumerable:!1})}}))}}));var xe=e("f3",function(){function e(e){this.i=0,this.array=e}var t=e.prototype;return t.remove=function(e){var t=this.array.indexOf(e);t>=0&&this.removeAt(t)},t.removeAt=function(e){this.array.splice(e,1),e<=this.i&&--this.i},t.fastRemove=function(e){var t=this.array.indexOf(e);t>=0&&this.fastRemoveAt(t)},t.fastRemoveAt=function(e){var t=this.array;t[e]=t[t.length-1],--t.length,e<=this.i&&--this.i},t.push=function(e){this.array.push(e)},X(e,[{key:"length",get:function(){return this.array.length},set:function(e){this.array.length=e,this.i>=e&&(this.i=e-1)}}]),e}());function ye(e,t){e.splice(t,1)}function Ae(e,t){var n=e.length;t<0||t>=n||(e[t]=e[n-1],e.length=n-1)}function Te(e,t){var n=e.indexOf(t);return n>=0&&(ye(e,n),!0)}function Ce(e,t){return e.indexOf(t)>=0}var Ee=Object.freeze({__proto__:null,removeAt:ye,fastRemoveAt:Ae,remove:Te,fastRemove:function(e,t){var n=e.indexOf(t);n>=0&&(e[n]=e[e.length-1],--e.length)},removeIf:function(e,t){var n=e.findIndex(t);if(n>=0){var i=e[n];return ye(e,n),i}},verifyType:function(e,t){if(e&&e.length>0)for(var n,i=ne(e);!(n=i()).done;)if(!(n.value instanceof t))return C(1300),!1;return!0},removeArray:function(e,t){for(var n=0,i=t.length;n<i;n++)Te(e,t[n])},appendObjectsAt:function(e,t,n){return e.splice.apply(e,[n,0].concat(t)),e},contains:Ce,copy:function(e){for(var t=e.length,n=new Array(t),i=0;i<t;i+=1)n[i]=e[i];return n},MutableForwardIterator:xe}),Se=e("eA",function(){function e(e){this.id=void 0,this.prefix=void 0,this.id=0|998*Math.random(),this.prefix=e?e+".":""}return e.prototype.getNewId=function(){return this.prefix+ ++this.id},e}());Se.global=new Se("global");var Ie=new Se("TmpCId."),Re="undefined"==typeof Symbol?"__aliases__":Symbol("[[Aliases]]");function Ne(e){return"number"==typeof e||e instanceof Number}function we(e){return"string"==typeof e||e instanceof String}function be(e){for(var t in e)return!1;return!0}var Oe,Pe=(Oe={value:void 0,enumerable:!1,writable:!1,configurable:!0},function(e,t,n,i,o){Oe.value=n,Oe.writable=i,Oe.enumerable=o,Object.defineProperty(e,t,Oe),Oe.value=void 0}),Me=function(){var e={get:void 0,set:void 0,enumerable:!1};return function(t,n,i,o,a,r){void 0===a&&(a=!1),void 0===r&&(r=!1),"boolean"==typeof o&&(a=o,o=void 0),e.get=i,e.set=o,e.enumerable=a,e.configurable=r,Object.defineProperty(t,n,e),e.get=void 0,e.set=void 0}}(),De=function(){var e={get:void 0,enumerable:!1,configurable:!1};return function(t,n,i,o,a){e.get=i,e.enumerable=o,e.configurable=a,Object.defineProperty(t,n,e),e.get=void 0}}(),ze=function(){var e={set:void 0,enumerable:!1,configurable:!1};return function(t,n,i,o,a){e.set=i,e.enumerable=o,e.configurable=a,Object.defineProperty(t,n,e),e.set=void 0}}();function Le(e){var t=Object.create(null);return e&&(t["."]=1,t["/"]=1,delete t["."],delete t["/"]),t}function Fe(e){if("function"==typeof e){var t=e.prototype;if(t&&t.hasOwnProperty("__classname__")&&t.__classname__)return t.__classname__;var n="";if(e.name&&(n=e.name),e.toString){var i,o=e.toString();(i="["===o.charAt(0)?o.match(/\[\w+\s*(\w+)\]/):o.match(/function\s*(\w+)/))&&2===i.length&&(n=i[1])}return"Object"!==n?n:""}return e&&e.constructor?Fe(e.constructor):""}function Ue(e,t,n,i){var o=/([^.]+)$/,a=o.exec(t)[0],r=o.exec(n)[0];function s(){return this[r]}i?Me(e,a,s,(function(e){this[r]=e})):De(e,a,s)}function Be(e,t,n,i){for(var o in n)Ue(e,t+"."+o,n[o],i)}var Ge=/(%d)|(%s)/,Ve=/%s/;function He(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];if(0===arguments.length)return"";if(0===n.length)return""+e;var o="string"==typeof e&&Ge.test(e);if(o)for(var a,r=ne(n);!(a=r()).done;){var s=a.value,c="number"==typeof s?Ge:Ve;if(c.test(e)){var l=""+s;e=e.replace(c,l)}else e+=" "+s}else for(var m,u=ne(n);!(m=u()).done;){var _=m.value;e+=" "+_}return e}function je(){for(var e=arguments.length-1,t=new Array(e),n=0;n<e;++n)t[n]=arguments[n+1];return t}function qe(e,t){for(;e;){var n=Object.getOwnPropertyDescriptor(e,t);if(n)return n;e=Object.getPrototypeOf(e)}return null}function ke(e,t,n){var i=qe(t,e);i&&Object.defineProperty(n,e,i)}function We(e){e=e||{};for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];for(var o=0,a=n;o<a.length;o++){var r=a[o];if(r){if("object"!=typeof r){R(5402,r);continue}for(var s in r)s in e||ke(s,r,e)}}return e}function Ye(e){e=e||{};for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];for(var o=0,a=n;o<a.length;o++){var r=a[o];if(r){if("object"!=typeof r){R(5403,r);continue}for(var s in r)ke(s,r,e)}}return e}function Xe(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e.prototype=Object.create(t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),e}function Ke(e){var t=e.prototype,n=t&&Object.getPrototypeOf(t);return n&&n.constructor}function Je(e,t){if(e&&t){if("function"!=typeof e)return!1;if("function"!=typeof t)return!1;if(e===t)return!0;for(;;){if(!(e=Ke(e)))return!1;if(e===t)return!0}}return!1}function Qe(e){for(var t=0,n=Object.keys(e);t<n.length;t++)delete e[n[t]]}function Ze(e){return"string"!=typeof e||e.startsWith(Ie.prefix)}var $e=Le(!0),et=Le(!0);function tt(e,t){return function(n,i){if(i.prototype.hasOwnProperty(e)&&delete t[i.prototype[e]],Pe(i.prototype,e,n),n){var o=t[n];o&&o!==i?p("A Class already exists with the same "+e+' : "'+n+'".'):t[n]=i}}}var nt=tt("__cid__",$e),it=tt("__classname__",et);function ot(e,t){if(it(e,t),!t.prototype.hasOwnProperty("__cid__")){var n=e||Ie.getNewId();n&&nt(n,t)}}function at(e,t){var n=et[t],i=$e[t],o=!0;if(n&&n!==e&&(p('"'+t+'" has already been set as name or alias of another class.'),o=!1),i&&i!==e&&(p('"'+t+'" has already been set as id or alias of another class.'),o=!1),o){var a=e[Re];a||(a=[],e[Re]=a),a.push(t),et[t]=e,$e[t]=e}}function rt(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];for(var i=0,o=t;i<o.length;i++){var a=o[i],r=a.prototype,s=r.__cid__;s&&delete $e[s];var c=r.__classname__;c&&delete et[c];var l=r[Re];if(l)for(var m=0;m<l.length;++m){var u=l[m];delete et[u],delete $e[u]}}}function st(e){return $e[e]}function ct(e){return et[e]}function lt(e,n){var i;if(n=void 0===n||n,"function"==typeof e&&e.prototype.hasOwnProperty("__cid__"))return i=e.prototype.__cid__,!n&&t&&Ze(i)?"":i;if(e&&e.constructor){var o=e.constructor.prototype;if(o&&o.hasOwnProperty("__cid__"))return i=e.__cid__,!n&&t&&Ze(i)?"":i}return""}var mt=e("fq",function(){var e=t.prototype;function t(e,t){this.count=void 0,this._pool=void 0,this._cleanup=void 0;var n=void 0===t?e:t,i=void 0===t?null:e;this.count=0,this._pool=new Array(n),this._cleanup=i}return e.get=function(){return this._get()},e._get=function(){if(this.count>0){--this.count;var e=this._pool[this.count];return this._pool[this.count]=null,e}return null},e.put=function(e){var t=this._pool;if(this.count<t.length){if(this._cleanup&&!1===this._cleanup(e))return;t[this.count]=e,++this.count}},e.resize=function(e){e>=0&&(this._pool.length=e,this.count>e&&(this.count=e))},t}()),ut=e("eB",Ee),_t=e("eD",{IDGenerator:Se,Pool:mt,array:Ee,isNumber:Ne,isString:we,isEmptyObject:be,getPropertyDescriptor:qe,addon:We,mixin:Ye,extend:Xe,getSuper:Ke,isChildClassOf:Je,clear:Qe,value:Pe,getset:Me,get:De,set:ze,unregisterClass:rt,getClassName:Fe,setClassName:ot,setClassAlias:at,getClassByName:ct,get _registeredClassNames(){return K({},et)},set _registeredClassNames(e){Qe(et),Object.assign(et,e)},get _registeredClassIds(){return K({},$e)},set _registeredClassIds(e){Qe($e),Object.assign($e,e)},_getClassId:lt,_setClassId:nt,_getClassById:st,obsolete:Ue,obsoletes:Be,formatStr:He,shiftArguments:je,createMap:Le});function ft(e){if("__bitmask__"in e)return e;Pe(e,"__bitmask__",null,!0);for(var t=-1,n=Object.keys(e),i=0;i<n.length;i++){var o=n[i],a=e[o];if(-1===a)a=++t,e[o]=a;else if("number"==typeof a)t=a;else if("string"==typeof a&&Number.isInteger(parseFloat(o)))continue;var r=""+a;o!==r&&Pe(e,r,o)}return e}function ht(e){return"__enums__"in e?e:(Pe(e,"__enums__",null,!0),ht.update(e))}function dt(e){e.hasOwnProperty("__enums__")}function vt(e){dt(e);var t=e.__enums__||[];for(var n in t.length=0,e){var i=e[n];Number.isInteger(i)&&t.push({name:n,value:i})}return t.sort((function(e,t){return e.value-t.value})),e.__enums__=t,t}function pt(e){"__enums__"in e||Pe(e,"__enums__",null,!0)}r.js=_t,e("bG",Object.freeze({__proto__:null,array:ut,js:_t,IDGenerator:Se,Pool:mt,isNumber:Ne,isString:we,isEmptyObject:be,value:Pe,getset:Me,get:De,set:ze,createMap:Le,getClassName:Fe,obsolete:Ue,obsoletes:Be,formatStr:He,shiftArguments:je,getPropertyDescriptor:qe,addon:We,mixin:Ye,extend:Xe,getSuper:Ke,isChildClassOf:Je,clear:Qe,_idToClass:$e,_nameToClass:et,_setClassId:nt,setClassName:ot,setClassAlias:at,unregisterClass:rt,_getClassById:st,getClassByName:ct,_getClassId:lt})),ft.isBitMask=function(e){return e&&e.hasOwnProperty("__bitmask__")},ft.getList=function(e){if(e.__bitmask__)return e.__bitmask__;var t=e.__bitmask__=[];for(var n in e){var i=e[n];Number.isInteger(i)&&t.push({name:n,value:i})}return t.sort((function(e,t){return e.value-t.value})),t},r.BitMask=ft,ht.update=function(e){for(var t=-1,n=Object.keys(e),i=0;i<n.length;i++){var o=n[i],a=e[o];if(-1===a)a=++t,e[o]=a;else if("number"==typeof a)t=a;else if("string"==typeof a&&Number.isInteger(parseFloat(o)))continue;var r=""+a;o!==r&&Pe(e,r,o)}return Array.isArray(e.__enums__)&&vt(e),e},ht||(ht=e("bD",{})),ht.isEnum=function(e){return e&&e.hasOwnProperty("__enums__")},ht.getList=function(e){return dt(e),e.__enums__?e.__enums__:vt(e)},r.Enum=ht;var gt=e("bF",function(){function e(){}var t=e.prototype;return t.clone=function(){return R(100,Fe(this)+".clone"),this},t.equals=function(){return!1},t.set=function(){R(100,Fe(this)+".set")},t.toString=function(){return""+{}},e}());ot("cc.ValueType",gt),r.ValueType=gt;var xt=e("cl",{SUPPORT_TEXTURE_FORMATS:[".astc",".pkm",".pvr",".webp",".jpg",".jpeg",".bmp",".png"],KEY:{none:0,back:6,menu:18,backspace:8,tab:9,enter:13,shift:16,ctrl:17,alt:18,pause:19,capslock:20,escape:27,space:32,pageup:33,pagedown:34,end:35,home:36,left:37,up:38,right:39,down:40,select:41,insert:45,Delete:46,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,a:65,b:66,c:67,d:68,e:69,f:70,g:71,h:72,i:73,j:74,k:75,l:76,m:77,n:78,o:79,p:80,q:81,r:82,s:83,t:84,u:85,v:86,w:87,x:88,y:89,z:90,num0:96,num1:97,num2:98,num3:99,num4:100,num5:101,num6:102,num7:103,num8:104,num9:105,"*":106,"+":107,"-":109,numdel:110,"/":111,f1:112,f2:113,f3:114,f4:115,f5:116,f6:117,f7:118,f8:119,f9:120,f10:121,f11:122,f12:123,numlock:144,scrolllock:145,";":186,semicolon:186,equal:187,"=":187,",":188,comma:188,dash:189,".":190,period:190,forwardslash:191,grave:192,"[":219,openbracket:219,backslash:220,"]":221,closebracket:221,quote:222,dpadLeft:1e3,dpadRight:1001,dpadUp:1003,dpadDown:1004,dpadCenter:1005},RAD:Math.PI/180,DEG:180/Math.PI,REPEAT_FOREVER:Number.MAX_VALUE-1,FLT_EPSILON:1.192092896e-7,ORIENTATION_PORTRAIT:1,ORIENTATION_LANDSCAPE:2,ORIENTATION_AUTO:3,ENABLE_TILEDMAP_CULLING:!0,TOUCH_TIMEOUT:5e3,ENABLE_TRANSPARENT_CANVAS:!1,ENABLE_WEBGL_ANTIALIAS:!0,CLEANUP_IMAGE_CACHE:!1,ENABLE_MULTI_TOUCH:!0,MAX_LABEL_CANVAS_POOL_SIZE:20});r.macro=xt;for(var yt=/^(?:cc|dragonBones|sp|ccsg)\..+/,At=new Array(123),Tt=0;Tt<123;++Tt)At[Tt]=64;for(var Ct=0;Ct<64;++Ct)At["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charCodeAt(Ct)]=Ct;var Et=At;function St(e,t,n){function i(e,t,n,i){var o=Object.getOwnPropertyDescriptor(e,t);if(o)o.get&&(e[n]=o.get),o.set&&i&&(e[i]=o.set);else{var a=e[n];Me(e,t,a,e[i])}}for(var o,a=e.prototype,r=0;r<t.length;r++){var s=(o=t[r])[0].toUpperCase()+o.slice(1);i(a,o,"get"+s,"set"+s)}for(o in n){var c=n[o];i(a,o,c[0],c[1])}}function It(e,t,n,i){var o=e[t];o?Array.isArray(o)?i?(o.push(o[0]),o[0]=n):o.push(n):e[t]=i?[n,o]:[o,n]:e[t]=n}function Rt(e,t){if("function"==typeof e.contains)return e.contains(t);if("function"==typeof e.compareDocumentPosition)return!!(16&e.compareDocumentPosition(t));var n=t.parentNode;if(n)do{if(n===e)return!0;n=n.parentNode}while(null!==n);return!1}function Nt(e){return"object"==typeof window&&"function"==typeof Node?e instanceof Node:e&&"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName}function wt(e,t,n){e&&setTimeout((function(){e(t,n)}),0)}function bt(e){return!(!e||e.constructor!==Object)&&be(e)}function Ot(e,t,n){if(t>n){var i=t;t=n,n=i}return e<t?t:e<n?e:n}function Pt(e){return e*xt.RAD}function Mt(e){return e*xt.DEG}function Dt(e,t){var n=t?Object.create(t):{};return Pe(e,"__attrs__",n),n}function zt(e){if("function"!=typeof e)return Dt(e,Ft(e.constructor));for(var t,n=r.Class.getInheritanceChain(e),i=n.length-1;i>=0;i--){var o=n[i];o.hasOwnProperty("__attrs__")&&o.__attrs__||Dt(o,(t=n[i+1])&&t.__attrs__)}return Dt(e,(t=n[0])&&t.__attrs__),e.__attrs__}function Lt(e,t){var n=Ft(e),i=t+"$_$",o={};for(var a in n)a.startsWith(i)&&(o[a.slice(i.length)]=n[a]);return o}function Ft(e){return e.hasOwnProperty("__attrs__")&&e.__attrs__||zt(e)}function Ut(e,t,n,i){Ft(e)[t+"$_$"+n]=i}r.misc={BUILTIN_CLASSID_RE:yt,BASE64_VALUES:Et,propertyDefine:St,pushToMap:It,contains:Rt,isDomNode:Nt,callInNextTick:wt,isPlainEmptyObj_DEV:bt,clampf:Ot,degreesToRadians:Pt,radiansToDegrees:Mt},e("bH",Object.freeze({__proto__:null,BUILTIN_CLASSID_RE:yt,BASE64_VALUES:Et,propertyDefine:St,pushToMap:It,contains:Rt,isDomNode:Nt,callInNextTick:wt,tryCatchFunctor_EDITOR:function(e){return Function("target","try {\n  target."+e+"();\n}\ncatch (e) {\n  cc._throw(e);\n}")},isPlainEmptyObj_DEV:bt,clampf:Ot,degreesToRadians:Pt,radiansToDegrees:Mt}));var Bt=function(){function e(e,t){this.name=void 0,this.default=void 0,this.name=e,this.default=t}return e.prototype.toString=function(){return this.name},e}(),Gt=e("bZ",new Bt("Integer",0));r.Integer=Gt,r.CCInteger=Gt;var Vt=e("b_",new Bt("Float",0));r.Float=Vt,r.CCFloat=Vt;var Ht=e("b$",new Bt("Boolean",!1));r.Boolean=Ht,r.CCBoolean=Ht;var jt=e("c0",new Bt("String",""));function qt(e,t){return function(n,i){var o='"'+Fe(n)+"."+i+'"',a=Lt(n,i),r=a.type;if(r===Gt||r===Vt?r="Number":r!==jt&&r!==Ht||(r=""+r),r===e){if(a.hasOwnProperty("default")){var s=a.default;if(void 0!==s&&!Array.isArray(s)&&!bt(s)){var c=typeof s,l=e.toLowerCase();if(c===l)if("object"===l){if(!s||s instanceof a.ctor)return;S(3605,o,Fe(a.ctor))}else"Number"!==e&&S(3606,t,o,e);else{if("function"===c)return;e===jt.default&&null==s?S(3607,o):S(3611,t,o,c)}delete a.type}}}else S(3604,o)}}r.String=jt,r.CCString=jt;var kt=Object.freeze({__proto__:null,DELIMETER:"$_$",createAttrsSingle:Dt,createAttrs:zt,attr:Lt,getClassAttrs:Ft,setClassAttr:Ut,PrimitiveType:Bt,CCInteger:Gt,CCFloat:Vt,CCBoolean:Ht,CCString:jt,getTypeChecker_ET:qt,getObjTypeChecker_ET:function(e){return function(t,n){qt("Object","type")(t,n);var i=Ft(t)[n+"$_$default"],o=r.Class.getDefault(i);if(!Array.isArray(o)&&Je(e,r.ValueType)){var a=Fe(e),s=He('No need to specify the "type" of "%s.%s" because %s is a child class of ValueType.',Fe(t),n,a);i?d(s):S(3612,s,a,Fe(t),n,a)}}}}),Wt={default:{},serializable:{},editorOnly:{},formerlySerializedAs:{}};function Yt(e,t,n,i){if(!e.get&&!e.set&&e.hasOwnProperty("default")){var o="_N$"+t;e.get=function(){return this[o]},e.set=function(e){var t=this[o];this[o]=e,n.call(this,t)};var a={};for(var r in i[o]=a,Wt){var s=Wt[r];e.hasOwnProperty(r)&&(a[r]=e[r],s.canUsedInGet||delete e[r])}}}function Xt(e,t,n,i){if(Array.isArray(t)){if(!(t.length>0))return R(5508,n,i);e.type=t=t[0]}"function"==typeof t&&(t===String?e.type=r.String:t===Boolean?e.type=r.Boolean:t===Number&&(e.type=r.Float))}function Kt(e,t,n){var i=e?{_short:!0}:{_short:!0,default:t};return n&&(i.type=n),i}function Jt(e,t){if(!e||e.constructor!==Object){if(Array.isArray(e)&&e.length>0)return Kt(t,[],e);if("function"==typeof e){var n=e;return Kt(t,Je(n,r.ValueType)?new n:null,n)}return Kt(t,e instanceof Bt?e.default:e)}return null}var Qt=[];function Zt(){return Qt[Qt.length-1]}r._RF={push:function(e,t,n,i){void 0===n&&(n=t,t=""),Qt.push({uuid:t,script:n,module:e,exports:e.exports,beh:null,importMeta:i})},pop:function(){var e=Qt.pop(),t=e.module,n=t.exports;if(n===e.exports){for(var i in n)return;t.exports=n=e.cls}},peek:Zt};var $t={datas:null,push:function(e){if(this.datas)this.datas.push(e);else{this.datas=[e];var t=this;setTimeout((function(){t.init()}),0)}},init:function(){var e=this.datas;if(e){for(var t=0;t<e.length;++t){var n=e[t],i=n.cls,o=n.props;"function"==typeof o&&(o=o());var a=Fe(i);o?an(i,a,o,i.$super,n.mixins):R(3633,a)}this.datas=null}}};function en(e,t,n,i){!function(e,t){!function(e,t){e.indexOf(t)<0&&e.push(t)}(e.__props__,t)}(e,n),cn(e,i,t,n)}function tn(e,t,n,i){var o=i.get;i.set,o&&(cn(e,i,t,n),Ut(e,n,"serializable",!1))}function nn(e){return"function"==typeof e?e():e}function on(e,t,n){for(var i in t)e.hasOwnProperty(i)||n&&!n(i)||Object.defineProperty(e,i,qe(t,i))}function an(e,t,n,i,o){if(e.__props__=[],i&&i.__props__&&(e.__props__=i.__props__.slice()),o)for(var a=0;a<o.length;++a){var r=o[a];r.__props__&&(e.__props__=e.__props__.concat(r.__props__.filter((function(t){return e.__props__.indexOf(t)<0}))))}if(n)for(var s in function(e,t){for(var n in e){var i=e[n],o=Jt(i,!1);if(o&&(i=e[n]=o),i){var a=i.notify;a&&Yt(i,n,a,e),"type"in i&&Xt(i,i.type,t,n)}}}(n,t),n){var c=n[s];c.get||c.set?tn(e,t,s,c):en(e,t,s,c)}var l=Ft(e);e.__values__=e.__props__.filter((function(e){return!1!==l[e+"$_$serializable"]}))}function rn(e){var t=e.name,n=e.extends,i=e.mixins,o=function(e,t,n,i){var o=r.Component,a=Zt();if(a&&Je(t,o)){if(Je(a.cls,o))return R(3615),null;e=e||a.script}var s=function(e,t,n,i){var o=i.ctor,a=[o],r=o;Pe(r,"__ctors__",a.length>0?a:null,!0);var s=r.prototype;if(t&&(r.$super=t),n){for(var c=n.length-1;c>=0;c--){var l=n[c];on(s,l.prototype),rn._isCCClass(l)&&on(Ft(r),Ft(l))}s.constructor=r}return ot(e,r),r}(e,t,n,i);if(a)if(Je(t,o)){var c=a.uuid;c&&nt(c,s),a.cls=s}else Je(a.cls,o)||(a.cls=s);return s}(t,n,i,e);t||(t=r.js.getClassName(o)),o._sealed=!0,n&&(n._sealed=!1);var a=e.properties;"function"==typeof a||n&&null===n.__props__||i&&i.some((function(e){return null===e.__props__}))?($t.push({cls:o,props:a,mixins:i}),o.__props__=o.__values__=null):an(o,t,a,n,e.mixins);var s=e.editor;return s&&Je(n,r.Component)&&r.Component._registerEditorProps(o,s),o}rn._isCCClass=function(e){var t;return null==e||null===(t=e.hasOwnProperty)||void 0===t?void 0:t.call(e,"__ctors__")},rn.fastDefine=function(e,t,n){ot(e,t);for(var i=t.__props__=t.__values__=Object.keys(n),o=Ft(t),a=0;a<i.length;a++){var r=i[a];o[r+"$_$visible"]=!1,o[r+"$_$default"]=n[r]}},rn.Attr=kt,rn.attr=Lt,rn.getInheritanceChain=function(e){for(var t=[];e=Ke(e);)e!==Object&&t.push(e);return t};var sn={Integer:"Number",Float:"Number",Boolean:"Boolean",String:"String"};function cn(e,t,n,i){var o=null,a="";function r(){return a=i+"$_$",o=Ft(e)}"type"in t&&void 0===t.type&&S(3660,i,n);var s=t.type;s&&(sn[s]?(o||r())[a+"type"]=s:"Object"===s||("object"==typeof s?ht.isEnum(s)?((o||r())[a+"type"]="Enum",o[a+"enumList"]=ht.getList(s)):ft.isBitMask(s)&&((o||r())[a+"type"]="BitMask",o[a+"bitmaskList"]=ft.getList(s)):"function"==typeof s&&((o||r())[a+"type"]="Object",o[a+"ctor"]=s))),"default"in t&&((o||r())[a+"default"]=t.default);var c,l=function(e,n){if(e in t){var i=t[e];typeof i===n&&((o||r())[a+e]=i)}};t.editorOnly&&((o||r())[a+"editorOnly"]=!0),t.__noImplicit?(o||r())[a+"serializable"]=null!==(c=t.serializable)&&void 0!==c&&c:!1===t.serializable&&((o||r())[a+"serializable"]=!1),l("formerlySerializedAs","string");var m=t.range;m&&Array.isArray(m)&&m.length>=2&&((o||r())[a+"min"]=m[0],o[a+"max"]=m[1],m.length>2&&(o[a+"step"]=m[2])),l("min","number"),l("max","number"),l("step","number")}rn.isArray=function(e){return e=nn(e),Array.isArray(e)},rn.getDefault=nn,rn.escapeForJS=function(e){return JSON.stringify(e).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")},rn.IDENTIFIER_RE=/^[A-Za-z_$][0-9A-Za-z_$]*$/,rn.getNewValueTypeCode=!1,r.Class=rn;var ln=Math.PI/180,mn=180/Math.PI,un=e("bi",1e-6);function _n(e,t,n){if(t>n){var i=t;t=n,n=i}return e<t?t:e>n?n:e}function fn(e){return e*mn}var hn=e("bq",Math.random);function dn(e,t){return Math.random()*(t-e)+e}function vn(e){return(e=(9301*e+49297)%233280)/233280}function pn(e,t,n){return vn(e)*(n-t)+t}function gn(e,t){return e-Math.floor(e/t)*t}var xn=e("bg",function(e){function t(t,n,i,o){var a;return(a=e.call(this)||this)._val=0,"string"==typeof t?a.fromHEX(t):void 0!==n?a.set(t,n,i,o):a.set(t),a}J(t,e),t.clone=function(e){var n=new t;return e._val?n._val=e._val:n._val=(e.a<<24>>>0)+(e.b<<16)+(e.g<<8)+e.r,n},t.copy=function(e,t){return e.r=t.r,e.g=t.g,e.b=t.b,e.a=t.a,e},t.set=function(e,t,n,i,o){return e.r=t,e.g=n,e.b=i,e.a=o,e},t.fromHEX=function(e,t){return t=0===t.indexOf("#")?t.substring(1):t,e.r=parseInt(t.substr(0,2),16)||0,e.g=parseInt(t.substr(2,2),16)||0,e.b=parseInt(t.substr(4,2),16)||0,e.a=parseInt(t.substr(6,2),16)||255,e._val=(e.a<<24>>>0)+(e.b<<16)+(e.g<<8)+e.r,e},t.add=function(e,t,n){return e.r=t.r+n.r,e.g=t.g+n.g,e.b=t.b+n.b,e.a=t.a+n.a,e},t.subtract=function(e,t,n){return e.r=t.r-n.r,e.g=t.g-n.g,e.b=t.b-n.b,e.a=t.a-n.a,e},t.multiply=function(e,t,n){return e.r=t.r*n.r,e.g=t.g*n.g,e.b=t.b*n.b,e.a=t.a*n.a,e},t.divide=function(e,t,n){return e.r=t.r/n.r,e.g=t.g/n.g,e.b=t.b/n.b,e.a=t.a/n.a,e},t.scale=function(e,t,n){return e.r=t.r*n,e.g=t.g*n,e.b=t.b*n,e.a=t.a*n,e},t.lerp=function(e,t,n,i){var o=t.r,a=t.g,r=t.b,s=t.a;return o+=(n.r-o)*i,a+=(n.g-a)*i,r+=(n.b-r)*i,s+=(n.a-s)*i,e._val=Math.floor((s<<24>>>0)+(r<<16)+(a<<8)+o),e},t.toArray=function(e,n,i){void 0===i&&(i=0);var o=n instanceof t||n.a>1?1/255:1;return e[i+0]=n.r*o,e[i+1]=n.g*o,e[i+2]=n.b*o,e[i+3]=n.a*o,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),t.r=255*e[n+0],t.g=255*e[n+1],t.b=255*e[n+2],t.a=255*e[n+3],t},t.strictEquals=function(e,t){return e.r===t.r&&e.g===t.g&&e.b===t.b&&e.a===t.a},t.equals=function(e,t,n){return void 0===n&&(n=un),Math.abs(e.r-t.r)<=n*Math.max(1,Math.abs(e.r),Math.abs(t.r))&&Math.abs(e.g-t.g)<=n*Math.max(1,Math.abs(e.g),Math.abs(t.g))&&Math.abs(e.b-t.b)<=n*Math.max(1,Math.abs(e.b),Math.abs(t.b))&&Math.abs(e.a-t.a)<=n*Math.max(1,Math.abs(e.a),Math.abs(t.a))},t.hex=function(e){return(255*e.r<<24|255*e.g<<16|255*e.b<<8|255*e.a)>>>0},X(t,[{key:"r",get:function(){return 255&this._val},set:function(e){e=~~_n(e,0,255),this._val=(4294967040&this._val|e)>>>0}},{key:"g",get:function(){return(65280&this._val)>>8},set:function(e){e=~~_n(e,0,255),this._val=(4294902015&this._val|e<<8)>>>0}},{key:"b",get:function(){return(16711680&this._val)>>16},set:function(e){e=~~_n(e,0,255),this._val=(4278255615&this._val|e<<16)>>>0}},{key:"a",get:function(){return(4278190080&this._val)>>>24},set:function(e){e=~~_n(e,0,255),this._val=(16777215&this._val|e<<24)>>>0}},{key:"x",get:function(){return this.r*(1/255)},set:function(e){this.r=255*e}},{key:"y",get:function(){return this.g*(1/255)},set:function(e){this.g=255*e}},{key:"z",get:function(){return this.b*(1/255)},set:function(e){this.b=255*e}},{key:"w",get:function(){return this.a*(1/255)},set:function(e){this.a=255*e}}]);var n=t.prototype;return n.clone=function(){var e=new t;return e._val=this._val,e},n.equals=function(e){return e&&this._val===e._val},n.lerp=function(e,t){var n=this.r,i=this.g,o=this.b,a=this.a;return n+=(e.r-n)*t,i+=(e.g-i)*t,o+=(e.b-o)*t,a+=(e.a-a)*t,this._val=Math.floor((a<<24>>>0)+(o<<16)+(i<<8)+n),this},n.toString=function(){return"rgba("+this.r.toFixed()+", "+this.g.toFixed()+", "+this.b.toFixed()+", "+this.a.toFixed()+")"},n.toCSS=function(e){return void 0===e&&(e="rgba"),"rgba"===e?"rgba("+this.r+","+this.g+","+this.b+","+(this.a*(1/255)).toFixed(2)+")":"rgb"===e?"rgb("+this.r+","+this.g+","+this.b+")":"#"+this.toHEX(e)},n.fromHEX=function(e){e=0===e.indexOf("#")?e.substring(1):e;var t=parseInt(e.substr(0,2),16)||0,n=parseInt(e.substr(2,2),16)||0,i=parseInt(e.substr(4,2),16)||0,o=parseInt(e.substr(6,2),16)||255;return this._val=(o<<24>>>0)+(i<<16)+(n<<8)+(0|t),this},n.toHEX=function(e){void 0===e&&(e="#rrggbb");var t=[(this.r<16?"0":"")+this.r.toString(16),(this.g<16?"0":"")+this.g.toString(16),(this.b<16?"0":"")+this.b.toString(16)];return"#rgb"===e?(t[0]=t[0][0],t[1]=t[1][0],t[2]=t[2][0]):"#rrggbbaa"===e&&t.push((this.a<16?"0":"")+this.a.toString(16)),t.join("")},n.toRGBValue=function(){return 16777215&this._val},n.fromHSV=function(e,t,n){var i=0,o=0,a=0;if(0===t)i=o=a=n;else if(0===n)i=o=a=0;else{1===e&&(e=0),e*=6;var r=Math.floor(e),s=e-r,c=n*(1-t),l=n*(1-t*s),m=n*(1-t*(1-s));switch(r){case 0:i=n,o=m,a=c;break;case 1:i=l,o=n,a=c;break;case 2:i=c,o=n,a=m;break;case 3:i=c,o=l,a=n;break;case 4:i=m,o=c,a=n;break;case 5:i=n,o=c,a=l}}return i*=255,o*=255,a*=255,this._val=(this.a<<24>>>0)+(a<<16)+(o<<8)+(0|i),this},n.toHSV=function(){var e=this.r*(1/255),t=this.g*(1/255),n=this.b*(1/255),i={h:0,s:0,v:0},o=Math.max(e,t,n),a=Math.min(e,t,n),r=0;return i.v=o,i.s=o?(o-a)/o:0,i.s?(r=o-a,i.h=e===o?(t-n)/r:t===o?2+(n-e)/r:4+(e-t)/r,i.h/=6,i.h<0&&(i.h+=1)):i.h=0,i},n.set=function(e,t,n,i){return"object"==typeof e?null!=e._val?this._val=e._val:(t=e.g||0,n=e.b||0,i="number"==typeof e.a?e.a:255,e=e.r||0,this._val=(i<<24>>>0)+(n<<16)+(t<<8)+(0|e)):(e=e||0,t=t||0,n=n||0,i="number"==typeof i?i:255,this._val=(i<<24>>>0)+(n<<16)+(t<<8)+(0|e)),this},n.multiply=function(e){var t=(255&this._val)*e.r>>8,n=(65280&this._val)*e.g>>8,i=(16711680&this._val)*e.b>>8,o=((4278190080&this._val)>>>8)*e.a;return this._val=4278190080&o|16711680&i|65280&n|255&t,this},n._set_r_unsafe=function(e){return this._val=(4294967040&this._val|e)>>>0,this},n._set_g_unsafe=function(e){return this._val=(4294902015&this._val|e<<8)>>>0,this},n._set_b_unsafe=function(e){return this._val=(4278255615&this._val|e<<16)>>>0,this},n._set_a_unsafe=function(e){return this._val=(16777215&this._val|e<<24)>>>0,this},t}(gt));function yn(e,t,n,i){return new xn(e,t,n,i)}xn.WHITE=Object.freeze(new xn(255,255,255,255)),xn.GRAY=Object.freeze(new xn(127,127,127,255)),xn.BLACK=Object.freeze(new xn(0,0,0,255)),xn.TRANSPARENT=Object.freeze(new xn(0,0,0,0)),xn.RED=Object.freeze(new xn(255,0,0,255)),xn.GREEN=Object.freeze(new xn(0,255,0,255)),xn.BLUE=Object.freeze(new xn(0,0,255,255)),xn.CYAN=Object.freeze(new xn(0,255,255,255)),xn.MAGENTA=Object.freeze(new xn(255,0,255,255)),xn.YELLOW=Object.freeze(new xn(255,255,0,255)),rn.fastDefine("cc.Color",xn,{r:0,g:0,b:0,a:255}),r.Color=xn,r.color=yn;var An=e("b2",function(e){function t(t,n,i){var o;return o=e.call(this)||this,t&&"object"==typeof t?(o.x=t.x,o.y=t.y,o.z=t.z):(o.x=t||0,o.y=n||0,o.z=i||0),o}J(t,e),t.zero=function(e){return e.x=0,e.y=0,e.z=0,e},t.clone=function(e){return new t(e.x,e.y,e.z)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e},t.set=function(e,t,n,i){return e.x=t,e.y=n,e.z=i,e},t.add=function(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e.z=t.z+n.z,e},t.subtract=function(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e.z=t.z-n.z,e},t.multiply=function(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e.z=t.z*n.z,e},t.divide=function(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e.z=t.z/n.z,e},t.ceil=function(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e.z=Math.ceil(t.z),e},t.floor=function(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e.z=Math.floor(t.z),e},t.min=function(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e.z=Math.min(t.z,n.z),e},t.max=function(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e.z=Math.max(t.z,n.z),e},t.round=function(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e.z=Math.round(t.z),e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e},t.distance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z;return Math.sqrt(n*n+i*i+o*o)},t.squaredDistance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z;return n*n+i*i+o*o},t.len=function(e){var t=e.x,n=e.y,i=e.z;return Math.sqrt(t*t+n*n+i*i)},t.lengthSqr=function(e){var t=e.x,n=e.y,i=e.z;return t*t+n*n+i*i},t.negate=function(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e},t.invert=function(e,t){return e.x=1/t.x,e.y=1/t.y,e.z=1/t.z,e},t.invertSafe=function(e,t){var n=t.x,i=t.y,o=t.z;return Math.abs(n)<un?e.x=0:e.x=1/n,Math.abs(i)<un?e.y=0:e.y=1/i,Math.abs(o)<un?e.z=0:e.z=1/o,e},t.normalize=function(e,t){var n=t.x,i=t.y,o=t.z,a=n*n+i*i+o*o;return a>0&&(a=1/Math.sqrt(a),e.x=n*a,e.y=i*a,e.z=o*a),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z},t.cross=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=n.x,s=n.y,c=n.z;return e.x=o*c-a*s,e.y=a*r-i*c,e.z=i*s-o*r,e},t.lerp=function(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e},t.random=function(e,t){t=t||1;var n=2*hn()*Math.PI,i=2*hn()-1,o=Math.sqrt(1-i*i);return e.x=o*Math.cos(n)*t,e.y=o*Math.sin(n)*t,e.z=i*t,e},t.transformMat4=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=n.m03*i+n.m07*o+n.m11*a+n.m15;return r=r?Math.abs(1/r):1,e.x=(n.m00*i+n.m04*o+n.m08*a+n.m12)*r,e.y=(n.m01*i+n.m05*o+n.m09*a+n.m13)*r,e.z=(n.m02*i+n.m06*o+n.m10*a+n.m14)*r,e},t.transformMat4Normal=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=n.m03*i+n.m07*o+n.m11*a;return r=r?Math.abs(1/r):1,e.x=(n.m00*i+n.m04*o+n.m08*a)*r,e.y=(n.m01*i+n.m05*o+n.m09*a)*r,e.z=(n.m02*i+n.m06*o+n.m10*a)*r,e},t.transformMat3=function(e,t,n){var i=t.x,o=t.y,a=t.z;return e.x=i*n.m00+o*n.m03+a*n.m06,e.y=i*n.m01+o*n.m04+a*n.m07,e.z=i*n.m02+o*n.m05+a*n.m08,e},t.transformAffine=function(e,t,n){var i=t.x,o=t.y,a=t.z;return e.x=n.m00*i+n.m04*o+n.m08*a+n.m12,e.y=n.m01*i+n.m05*o+n.m09*a+n.m13,e.x=n.m02*i+n.m06*o+n.m10*a+n.m14,e},t.transformQuat=function(e,t,n){var i=n.w*t.x+n.y*t.z-n.z*t.y,o=n.w*t.y+n.z*t.x-n.x*t.z,a=n.w*t.z+n.x*t.y-n.y*t.x,r=-n.x*t.x-n.y*t.y-n.z*t.z;return e.x=i*n.w+r*-n.x+o*-n.z-a*-n.y,e.y=o*n.w+r*-n.y+a*-n.x-i*-n.z,e.z=a*n.w+r*-n.z+i*-n.y-o*-n.x,e},t.transformRTS=function(e,t,n,i,o){var a=t.x*o.x,r=t.y*o.y,s=t.z*o.z,c=n.w*a+n.y*s-n.z*r,l=n.w*r+n.z*a-n.x*s,m=n.w*s+n.x*r-n.y*a,u=-n.x*a-n.y*r-n.z*s;return e.x=c*n.w+u*-n.x+l*-n.z-m*-n.y+i.x,e.y=l*n.w+u*-n.y+m*-n.x-c*-n.z+i.y,e.z=m*n.w+u*-n.z+c*-n.y-l*-n.x+i.z,e},t.transformInverseRTS=function(e,t,n,i,o){var a=t.x-i.x,r=t.y-i.y,s=t.z-i.z,c=n.w*a-n.y*s+n.z*r,l=n.w*r-n.z*a+n.x*s,m=n.w*s-n.x*r+n.y*a,u=n.x*a+n.y*r+n.z*s;return e.x=(c*n.w+u*n.x+l*n.z-m*n.y)/o.x,e.y=(l*n.w+u*n.y+m*n.x-c*n.z)/o.y,e.z=(m*n.w+u*n.z+c*n.y-l*n.x)/o.z,e},t.rotateX=function(e,t,n,i){var o=t.x-n.x,a=t.y-n.y,r=t.z-n.z,s=Math.cos(i),c=Math.sin(i),l=o,m=a*s-r*c,u=a*c+r*s;return e.x=l+n.x,e.y=m+n.y,e.z=u+n.z,e},t.rotateY=function(e,t,n,i){var o=t.x-n.x,a=t.y-n.y,r=t.z-n.z,s=Math.cos(i),c=Math.sin(i),l=r*c+o*s,m=a,u=r*s-o*c;return e.x=l+n.x,e.y=m+n.y,e.z=u+n.z,e},t.rotateZ=function(e,t,n,i){var o=t.x-n.x,a=t.y-n.y,r=t.z-n.z,s=Math.cos(i),c=Math.sin(i),l=o*s-a*c,m=o*c+a*s,u=r;return e.x=l+n.x,e.y=m+n.y,e.z=u+n.z,e},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z},t.equals=function(e,t,n){void 0===n&&(n=un);var i=e.x,o=e.y,a=e.z,r=t.x,s=t.y,c=t.z;return Math.abs(i-r)<=n*Math.max(1,Math.abs(i),Math.abs(r))&&Math.abs(o-s)<=n*Math.max(1,Math.abs(o),Math.abs(s))&&Math.abs(a-c)<=n*Math.max(1,Math.abs(a),Math.abs(c))},t.angle=function(e,n){t.normalize(Tn,e),t.normalize(Cn,n);var i=t.dot(Tn,Cn);return i>1?0:i<-1?Math.PI:Math.acos(i)},t.projectOnPlane=function(e,n,i){return t.subtract(e,n,t.project(e,n,i))},t.project=function(e,n,i){var o=t.lengthSqr(i);return o<1e-6?t.set(e,0,0,0):t.multiplyScalar(e,i,t.dot(n,i)/o)};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.z)},n.set=function(e,t,n){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z):(this.x=e||0,this.y=t||0,this.z=n||0),this},n.equals=function(e,t){return void 0===t&&(t=un),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))&&Math.abs(this.z-e.z)<=t*Math.max(1,Math.abs(this.z),Math.abs(e.z))},n.equals3f=function(e,t,n,i){return void 0===i&&(i=un),Math.abs(this.x-e)<=i*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=i*Math.max(1,Math.abs(this.y),Math.abs(t))&&Math.abs(this.z-n)<=i*Math.max(1,Math.abs(this.z),Math.abs(n))},n.strictEquals=function(e){return this.x===e.x&&this.y===e.y&&this.z===e.z},n.strictEquals3f=function(e,t,n){return this.x===e&&this.y===t&&this.z===n},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+", "+this.z.toFixed(2)+")"},n.lerp=function(e,t){return this.x+=t*(e.x-this.x),this.y+=t*(e.y-this.y),this.z+=t*(e.z-this.z),this},n.add=function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},n.add3f=function(e,t,n){return this.x+=e,this.y+=t,this.z+=n,this},n.subtract=function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},n.subtract3f=function(e,t,n){return this.x-=e,this.y-=t,this.z-=n,this},n.multiplyScalar=function(e){return"object"==typeof e&&console.warn("should use Vec3.multiply for vector * vector operation"),this.x*=e,this.y*=e,this.z*=e,this},n.multiply=function(e){return"object"!=typeof e&&console.warn("should use Vec3.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this.z*=e.z,this},n.multiply3f=function(e,t,n){return this.x*=e,this.y*=t,this.z*=n,this},n.divide=function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},n.divide3f=function(e,t,n){return this.x/=e,this.y/=t,this.z/=n,this},n.negative=function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},n.clampf=function(e,t){return this.x=_n(this.x,e.x,t.x),this.y=_n(this.y,e.y,t.y),this.z=_n(this.z,e.z,t.z),this},n.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z},n.cross=function(e){var t=this.x,n=this.y,i=this.z,o=e.x,a=e.y,r=e.z;return this.x=n*r-i*a,this.y=i*o-t*r,this.z=t*a-n*o,this},n.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},n.lengthSqr=function(){return this.x*this.x+this.y*this.y+this.z*this.z},n.normalize=function(){var e=this.x,t=this.y,n=this.z,i=e*e+t*t+n*n;return i>0&&(i=1/Math.sqrt(i),this.x=e*i,this.y=t*i,this.z=n*i),this},n.transformMat4=function(e){var t=this.x,n=this.y,i=this.z,o=e.m03*t+e.m07*n+e.m11*i+e.m15;return o=o?1/o:1,this.x=(e.m00*t+e.m04*n+e.m08*i+e.m12)*o,this.y=(e.m01*t+e.m05*n+e.m09*i+e.m13)*o,this.z=(e.m02*t+e.m06*n+e.m10*i+e.m14)*o,this},t}(gt));An.UNIT_X=Object.freeze(new An(1,0,0)),An.UNIT_Y=Object.freeze(new An(0,1,0)),An.UNIT_Z=Object.freeze(new An(0,0,1)),An.RIGHT=Object.freeze(new An(1,0,0)),An.UP=Object.freeze(new An(0,1,0)),An.FORWARD=Object.freeze(new An(0,0,-1)),An.ZERO=Object.freeze(new An(0,0,0)),An.ONE=Object.freeze(new An(1,1,1)),An.NEG_ONE=Object.freeze(new An(-1,-1,-1));var Tn=new An,Cn=new An;function En(e,t,n){return new An(e,t,n)}rn.fastDefine("cc.Vec3",An,{x:0,y:0,z:0}),r.Vec3=An,r.v3=En;var Sn=e("b8",function(e){function t(t,n,i,o,a,r,s,c,l){var m;return void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=1),void 0===r&&(r=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=1),m=e.call(this)||this,"object"==typeof t?(m.m00=t.m00,m.m01=t.m01,m.m02=t.m02,m.m03=t.m03,m.m04=t.m04,m.m05=t.m05,m.m06=t.m06,m.m07=t.m07,m.m08=t.m08):(m.m00=t,m.m01=n,m.m02=i,m.m03=o,m.m04=a,m.m05=r,m.m06=s,m.m07=c,m.m08=l),m}J(t,e),t.clone=function(e){return new t(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08)},t.copy=function(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e},t.set=function(e,t,n,i,o,a,r,s,c,l){return e.m00=t,e.m01=n,e.m02=i,e.m03=o,e.m04=a,e.m05=r,e.m06=s,e.m07=c,e.m08=l,e},t.identity=function(e){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=1,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e},t.transpose=function(e,t){if(e===t){var n=t.m01,i=t.m02,o=t.m05;e.m01=t.m03,e.m02=t.m06,e.m03=n,e.m05=t.m07,e.m06=i,e.m07=o}else e.m00=t.m00,e.m01=t.m03,e.m02=t.m06,e.m03=t.m01,e.m04=t.m04,e.m05=t.m07,e.m06=t.m02,e.m07=t.m05,e.m08=t.m08;return e},t.invert=function(e,t){var n=t.m00,i=t.m01,o=t.m02,a=t.m03,r=t.m04,s=t.m05,c=t.m06,l=t.m07,m=t.m08,u=m*r-s*l,_=-m*a+s*c,f=l*a-r*c,h=n*u+i*_+o*f;return 0===h?(e.m00=0,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=0,e.m06=0,e.m07=0,e.m08=0,e):(h=1/h,e.m00=u*h,e.m01=(-m*i+o*l)*h,e.m02=(s*i-o*r)*h,e.m03=_*h,e.m04=(m*n-o*c)*h,e.m05=(-s*n+o*a)*h,e.m06=f*h,e.m07=(-l*n+i*c)*h,e.m08=(r*n-i*a)*h,e)},t.determinant=function(e){var t=e.m00,n=e.m01,i=e.m02,o=e.m03,a=e.m04,r=e.m05,s=e.m06,c=e.m07,l=e.m08;return t*(l*a-r*c)+n*(-l*o+r*s)+i*(c*o-a*s)},t.multiply=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,s=t.m04,c=t.m05,l=t.m06,m=t.m07,u=t.m08,_=n.m00,f=n.m01,h=n.m02,d=n.m03,v=n.m04,p=n.m05,g=n.m06,x=n.m07,y=n.m08;return e.m00=_*i+f*r+h*l,e.m01=_*o+f*s+h*m,e.m02=_*a+f*c+h*u,e.m03=d*i+v*r+p*l,e.m04=d*o+v*s+p*m,e.m05=d*a+v*c+p*u,e.m06=g*i+x*r+y*l,e.m07=g*o+x*s+y*m,e.m08=g*a+x*c+y*u,e},t.multiplyMat4=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,s=t.m04,c=t.m05,l=t.m06,m=t.m07,u=t.m08,_=n.m00,f=n.m01,h=n.m02,d=n.m04,v=n.m05,p=n.m06,g=n.m08,x=n.m09,y=n.m10;return e.m00=_*i+f*r+h*l,e.m01=_*o+f*s+h*m,e.m02=_*a+f*c+h*u,e.m03=d*i+v*r+p*l,e.m04=d*o+v*s+p*m,e.m05=d*a+v*c+p*u,e.m06=g*i+x*r+y*l,e.m07=g*o+x*s+y*m,e.m08=g*a+x*c+y*u,e},t.transform=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,s=t.m04,c=t.m05,l=t.m06,m=t.m07,u=t.m08,_=n.x,f=n.y;return e.m00=i,e.m01=o,e.m02=a,e.m03=r,e.m04=s,e.m05=c,e.m06=_*i+f*r+l,e.m07=_*o+f*s+m,e.m08=_*a+f*c+u,e},t.scale=function(e,t,n){var i=n.x,o=n.y;return e.m00=i*t.m00,e.m01=i*t.m01,e.m02=i*t.m02,e.m03=o*t.m03,e.m04=o*t.m04,e.m05=o*t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e},t.rotate=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,s=t.m04,c=t.m05,l=t.m06,m=t.m07,u=t.m08,_=Math.sin(n),f=Math.cos(n);return e.m00=f*i+_*r,e.m01=f*o+_*s,e.m02=f*a+_*c,e.m03=f*r-_*i,e.m04=f*s-_*o,e.m05=f*c-_*a,e.m06=l,e.m07=m,e.m08=u,e},t.fromMat4=function(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m04,e.m04=t.m05,e.m05=t.m06,e.m06=t.m08,e.m07=t.m09,e.m08=t.m10,e},t.fromViewUp=function(e,n,i){return An.lengthSqr(n)<un*un?(t.identity(e),e):(i=i||An.UNIT_Y,An.normalize(In,An.cross(In,i,n)),An.lengthSqr(In)<un*un?(t.identity(e),e):(An.cross(Rn,n,In),t.set(e,In.x,In.y,In.z,Rn.x,Rn.y,Rn.z,n.x,n.y,n.z),e))},t.fromTranslation=function(e,t){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=1,e.m05=0,e.m06=t.x,e.m07=t.y,e.m08=1,e},t.fromScaling=function(e,t){return e.m00=t.x,e.m01=0,e.m02=0,e.m03=0,e.m04=t.y,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e},t.fromRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=n,e.m02=0,e.m03=-n,e.m04=i,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e},t.fromQuat=function(e,t){var n=t.x,i=t.y,o=t.z,a=t.w,r=n+n,s=i+i,c=o+o,l=n*r,m=i*r,u=i*s,_=o*r,f=o*s,h=o*c,d=a*r,v=a*s,p=a*c;return e.m00=1-u-h,e.m03=m-p,e.m06=_+v,e.m01=m+p,e.m04=1-l-h,e.m07=f-d,e.m02=_-v,e.m05=f+d,e.m08=1-l-u,e},t.inverseTransposeMat4=function(e,t){var n=t.m00,i=t.m01,o=t.m02,a=t.m03,r=t.m04,s=t.m05,c=t.m06,l=t.m07,m=t.m08,u=t.m09,_=t.m10,f=t.m11,h=t.m12,d=t.m13,v=t.m14,p=t.m15,g=n*s-i*r,x=n*c-o*r,y=n*l-a*r,A=i*c-o*s,T=i*l-a*s,C=o*l-a*c,E=m*d-u*h,S=m*v-_*h,I=m*p-f*h,R=u*v-_*d,N=u*p-f*d,w=_*p-f*v,b=g*w-x*N+y*R+A*I-T*S+C*E;return b?(b=1/b,e.m00=(s*w-c*N+l*R)*b,e.m01=(c*I-r*w-l*S)*b,e.m02=(r*N-s*I+l*E)*b,e.m03=(o*N-i*w-a*R)*b,e.m04=(n*w-o*I+a*S)*b,e.m05=(i*I-n*N-a*E)*b,e.m06=(d*C-v*T+p*A)*b,e.m07=(v*y-h*C-p*x)*b,e.m08=(h*T-d*y+p*g)*b,e):null},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.m00,e[n+1]=t.m01,e[n+2]=t.m02,e[n+3]=t.m03,e[n+4]=t.m04,e[n+5]=t.m05,e[n+6]=t.m06,e[n+7]=t.m07,e[n+8]=t.m08,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.m00=t[n+0],e.m01=t[n+1],e.m02=t[n+2],e.m03=t[n+3],e.m04=t[n+4],e.m05=t[n+5],e.m06=t[n+6],e.m07=t[n+7],e.m08=t[n+8],e},t.add=function(e,t,n){return e.m00=t.m00+n.m00,e.m01=t.m01+n.m01,e.m02=t.m02+n.m02,e.m03=t.m03+n.m03,e.m04=t.m04+n.m04,e.m05=t.m05+n.m05,e.m06=t.m06+n.m06,e.m07=t.m07+n.m07,e.m08=t.m08+n.m08,e},t.subtract=function(e,t,n){return e.m00=t.m00-n.m00,e.m01=t.m01-n.m01,e.m02=t.m02-n.m02,e.m03=t.m03-n.m03,e.m04=t.m04-n.m04,e.m05=t.m05-n.m05,e.m06=t.m06-n.m06,e.m07=t.m07-n.m07,e.m08=t.m08-n.m08,e},t.multiplyScalar=function(e,t,n){return e.m00=t.m00*n,e.m01=t.m01*n,e.m02=t.m02*n,e.m03=t.m03*n,e.m04=t.m04*n,e.m05=t.m05*n,e.m06=t.m06*n,e.m07=t.m07*n,e.m08=t.m08*n,e},t.multiplyScalarAndAdd=function(e,t,n,i){return e.m00=n.m00*i+t.m00,e.m01=n.m01*i+t.m01,e.m02=n.m02*i+t.m02,e.m03=n.m03*i+t.m03,e.m04=n.m04*i+t.m04,e.m05=n.m05*i+t.m05,e.m06=n.m06*i+t.m06,e.m07=n.m07*i+t.m07,e.m08=n.m08*i+t.m08,e},t.strictEquals=function(e,t){return e.m00===t.m00&&e.m01===t.m01&&e.m02===t.m02&&e.m03===t.m03&&e.m04===t.m04&&e.m05===t.m05&&e.m06===t.m06&&e.m07===t.m07&&e.m08===t.m08},t.equals=function(e,t,n){return void 0===n&&(n=un),Math.abs(e.m00-t.m00)<=n*Math.max(1,Math.abs(e.m00),Math.abs(t.m00))&&Math.abs(e.m01-t.m01)<=n*Math.max(1,Math.abs(e.m01),Math.abs(t.m01))&&Math.abs(e.m02-t.m02)<=n*Math.max(1,Math.abs(e.m02),Math.abs(t.m02))&&Math.abs(e.m03-t.m03)<=n*Math.max(1,Math.abs(e.m03),Math.abs(t.m03))&&Math.abs(e.m04-t.m04)<=n*Math.max(1,Math.abs(e.m04),Math.abs(t.m04))&&Math.abs(e.m05-t.m05)<=n*Math.max(1,Math.abs(e.m05),Math.abs(t.m05))&&Math.abs(e.m06-t.m06)<=n*Math.max(1,Math.abs(e.m06),Math.abs(t.m06))&&Math.abs(e.m07-t.m07)<=n*Math.max(1,Math.abs(e.m07),Math.abs(t.m07))&&Math.abs(e.m08-t.m08)<=n*Math.max(1,Math.abs(e.m08),Math.abs(t.m08))};var n=t.prototype;return n.clone=function(){var e=this;return new t(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08)},n.set=function(e,t,n,i,o,a,r,s,c){return void 0===e&&(e=1),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=1),void 0===a&&(a=0),void 0===r&&(r=0),void 0===s&&(s=0),void 0===c&&(c=1),"object"==typeof e?(this.m00=e.m00,this.m01=e.m01,this.m02=e.m02,this.m03=e.m03,this.m04=e.m04,this.m05=e.m05,this.m06=e.m06,this.m07=e.m07,this.m08=e.m08):(this.m00=e,this.m01=t,this.m02=n,this.m03=i,this.m04=o,this.m05=a,this.m06=r,this.m07=s,this.m08=c),this},n.equals=function(e,t){return void 0===t&&(t=un),Math.abs(this.m00-e.m00)<=t*Math.max(1,Math.abs(this.m00),Math.abs(e.m00))&&Math.abs(this.m01-e.m01)<=t*Math.max(1,Math.abs(this.m01),Math.abs(e.m01))&&Math.abs(this.m02-e.m02)<=t*Math.max(1,Math.abs(this.m02),Math.abs(e.m02))&&Math.abs(this.m03-e.m03)<=t*Math.max(1,Math.abs(this.m03),Math.abs(e.m03))&&Math.abs(this.m04-e.m04)<=t*Math.max(1,Math.abs(this.m04),Math.abs(e.m04))&&Math.abs(this.m05-e.m05)<=t*Math.max(1,Math.abs(this.m05),Math.abs(e.m05))&&Math.abs(this.m06-e.m06)<=t*Math.max(1,Math.abs(this.m06),Math.abs(e.m06))&&Math.abs(this.m07-e.m07)<=t*Math.max(1,Math.abs(this.m07),Math.abs(e.m07))&&Math.abs(this.m08-e.m08)<=t*Math.max(1,Math.abs(this.m08),Math.abs(e.m08))},n.strictEquals=function(e){return this.m00===e.m00&&this.m01===e.m01&&this.m02===e.m02&&this.m03===e.m03&&this.m04===e.m04&&this.m05===e.m05&&this.m06===e.m06&&this.m07===e.m07&&this.m08===e.m08},n.toString=function(){var e=this;return"[\n"+e.m00+", "+e.m01+", "+e.m02+",\n"+e.m03+",\n"+e.m04+", "+e.m05+",\n"+e.m06+", "+e.m07+",\n"+e.m08+"\n]"},n.identity=function(){return this.m00=1,this.m01=0,this.m02=0,this.m03=0,this.m04=1,this.m05=0,this.m06=0,this.m07=0,this.m08=1,this},n.transpose=function(){var e=this.m01,t=this.m02,n=this.m05;return this.m01=this.m03,this.m02=this.m06,this.m03=e,this.m05=this.m07,this.m06=t,this.m07=n,this},n.invert=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,a=this.m05,r=this.m06,s=this.m07,c=this.m08,l=c*o-a*s,m=-c*i+a*r,u=s*i-o*r,_=e*l+t*m+n*u;return 0===_?(this.set(0,0,0,0,0,0,0,0,0),this):(_=1/_,this.m00=l*_,this.m01=(-c*t+n*s)*_,this.m02=(a*t-n*o)*_,this.m03=m*_,this.m04=(c*e-n*r)*_,this.m05=(-a*e+n*i)*_,this.m06=u*_,this.m07=(-s*e+t*r)*_,this.m08=(o*e-t*i)*_,this)},n.determinant=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,a=this.m05,r=this.m06,s=this.m07,c=this.m08;return e*(c*o-a*s)+t*(-c*i+a*r)+n*(s*i-o*r)},n.add=function(e){return this.m00+=e.m00,this.m01+=e.m01,this.m02+=e.m02,this.m03+=e.m03,this.m04+=e.m04,this.m05+=e.m05,this.m06+=e.m06,this.m07+=e.m07,this.m08+=e.m08,this},n.subtract=function(e){return this.m00-=e.m00,this.m01-=e.m01,this.m02-=e.m02,this.m03-=e.m03,this.m04-=e.m04,this.m05-=e.m05,this.m06-=e.m06,this.m07-=e.m07,this.m08-=e.m08,this},n.multiply=function(e){var t=this.m00,n=this.m01,i=this.m02,o=this.m03,a=this.m04,r=this.m05,s=this.m06,c=this.m07,l=this.m08,m=e.m00,u=e.m01,_=e.m02,f=e.m03,h=e.m04,d=e.m05,v=e.m06,p=e.m07,g=e.m08;return this.m00=m*t+u*o+_*s,this.m01=m*n+u*a+_*c,this.m02=m*i+u*r+_*l,this.m03=f*t+h*o+d*s,this.m04=f*n+h*a+d*c,this.m05=f*i+h*r+d*l,this.m06=v*t+p*o+g*s,this.m07=v*n+p*a+g*c,this.m08=v*i+p*r+g*l,this},n.multiplyScalar=function(e){return this.m00*=e,this.m01*=e,this.m02*=e,this.m03*=e,this.m04*=e,this.m05*=e,this.m06*=e,this.m07*=e,this.m08*=e,this},n.scale=function(e){var t=e.x,n=e.y;return this.m00=t*this.m00,this.m01=t*this.m01,this.m02=t*this.m02,this.m03=n*this.m03,this.m04=n*this.m04,this.m05=n*this.m05,this.m06=this.m06,this.m07=this.m07,this.m08=this.m08,this},n.rotate=function(e){var t=this.m00,n=this.m01,i=this.m02,o=this.m03,a=this.m04,r=this.m05,s=this.m06,c=this.m07,l=this.m08,m=Math.sin(e),u=Math.cos(e);return this.m00=u*t+m*o,this.m01=u*n+m*a,this.m02=u*i+m*r,this.m03=u*o-m*t,this.m04=u*a-m*n,this.m05=u*r-m*i,this.m06=s,this.m07=c,this.m08=l,this},n.fromQuat=function(e){var t=e.x,n=e.y,i=e.z,o=e.w,a=t+t,r=n+n,s=i+i,c=t*a,l=n*a,m=n*r,u=i*a,_=i*r,f=i*s,h=o*a,d=o*r,v=o*s;return this.m00=1-m-f,this.m03=l-v,this.m06=u+d,this.m01=l+v,this.m04=1-c-f,this.m07=_-h,this.m02=u-d,this.m05=_+h,this.m08=1-c-m,this},t}(gt));Sn.IDENTITY=Object.freeze(new Sn);var In=new An,Rn=new An;rn.fastDefine("cc.Mat3",Sn,{m00:1,m01:0,m02:0,m03:0,m04:1,m05:0,m06:0,m07:0,m08:1}),r.Mat3=Sn;var Nn=e("b6",function(e){function t(t,n,i,o){var a;return a=e.call(this)||this,t&&"object"==typeof t?(a.x=t.x,a.y=t.y,a.z=t.z,a.w=t.w):(a.x=t||0,a.y=n||0,a.z=i||0,a.w=null!=o?o:1),a}J(t,e),t.clone=function(e){return new t(e.x,e.y,e.z,e.w)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e},t.set=function(e,t,n,i,o){return e.x=t,e.y=n,e.z=i,e.w=o,e},t.identity=function(e){return e.x=0,e.y=0,e.z=0,e.w=1,e},t.rotationTo=function(e,n,i){var o=An.dot(n,i);return o<-.999999?(An.cross(On,An.UNIT_X,n),On.length()<1e-6&&An.cross(On,An.UNIT_Y,n),An.normalize(On,On),t.fromAxisAngle(e,On,Math.PI),e):o>.999999?(e.x=0,e.y=0,e.z=0,e.w=1,e):(An.cross(On,n,i),e.x=On.x,e.y=On.y,e.z=On.z,e.w=1+o,t.normalize(e,e))},t.getAxisAngle=function(e,t){var n=2*Math.acos(t.w),i=Math.sin(n/2);return 0!==i?(e.x=t.x/i,e.y=t.y/i,e.z=t.z/i):(e.x=1,e.y=0,e.z=0),n},t.multiply=function(e,t,n){var i=t.x*n.w+t.w*n.x+t.y*n.z-t.z*n.y,o=t.y*n.w+t.w*n.y+t.z*n.x-t.x*n.z,a=t.z*n.w+t.w*n.z+t.x*n.y-t.y*n.x,r=t.w*n.w-t.x*n.x-t.y*n.y-t.z*n.z;return e.x=i,e.y=o,e.z=a,e.w=r,e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e.w=t.w+n.w*i,e},t.rotateX=function(e,t,n){n*=.5;var i=Math.sin(n),o=Math.cos(n),a=t.x,r=t.y,s=t.z,c=t.w;return e.x=a*o+c*i,e.y=r*o+s*i,e.z=s*o-r*i,e.w=c*o-a*i,e},t.rotateY=function(e,t,n){n*=.5;var i=Math.sin(n),o=Math.cos(n),a=t.x,r=t.y,s=t.z,c=t.w;return e.x=a*o-s*i,e.y=r*o+c*i,e.z=s*o+a*i,e.w=c*o-r*i,e},t.rotateZ=function(e,t,n){n*=.5;var i=Math.sin(n),o=Math.cos(n),a=t.x,r=t.y,s=t.z,c=t.w;return e.x=a*o+r*i,e.y=r*o-a*i,e.z=s*o+c*i,e.w=c*o-s*i,e},t.rotateAround=function(e,n,i,o){return t.invert(wn,n),An.transformQuat(On,i,wn),t.fromAxisAngle(wn,On,o),t.multiply(e,n,wn),e},t.rotateAroundLocal=function(e,n,i,o){return t.fromAxisAngle(wn,i,o),t.multiply(e,n,wn),e},t.calculateW=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=Math.sqrt(Math.abs(1-t.x*t.x-t.y*t.y-t.z*t.z)),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w},t.lerp=function(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e.w=t.w+i*(n.w-t.w),e},t.slerp=function(e,t,n,i){var o=0,a=0,r=n.x,s=n.y,c=n.z,l=n.w,m=t.x*n.x+t.y*n.y+t.z*n.z+t.w*n.w;if(m<0&&(m=-m,r=-r,s=-s,c=-c,l=-l),1-m>1e-6){var u=Math.acos(m),_=Math.sin(u);o=Math.sin((1-i)*u)/_,a=Math.sin(i*u)/_}else o=1-i,a=i;return e.x=o*t.x+a*r,e.y=o*t.y+a*s,e.z=o*t.z+a*c,e.w=o*t.w+a*l,e},t.sqlerp=function(e,n,i,o,a,r){return t.slerp(wn,n,a,r),t.slerp(bn,i,o,r),t.slerp(e,wn,bn,2*r*(1-r)),e},t.invert=function(e,t){var n=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w,i=n?1/n:0;return e.x=-t.x*i,e.y=-t.y*i,e.z=-t.z*i,e.w=t.w*i,e},t.conjugate=function(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e.w=t.w,e},t.len=function(e){return Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w)},t.lengthSqr=function(e){return e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w},t.normalize=function(e,t){var n=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w;return n>0&&(n=1/Math.sqrt(n),e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n),e},t.fromAxes=function(e,n,i,o){return Sn.set(Pn,n.x,n.y,n.z,i.x,i.y,i.z,o.x,o.y,o.z),t.normalize(e,t.fromMat3(e,Pn))},t.fromViewUp=function(e,n,i){return Sn.fromViewUp(Pn,n,i),t.normalize(e,t.fromMat3(e,Pn))},t.fromAxisAngle=function(e,t,n){n*=.5;var i=Math.sin(n);return e.x=i*t.x,e.y=i*t.y,e.z=i*t.z,e.w=Math.cos(n),e},t.fromMat3=function(e,t){var n=t.m00,i=t.m03,o=t.m06,a=t.m01,r=t.m04,s=t.m07,c=t.m02,l=t.m05,m=t.m08,u=n+r+m;if(u>0){var _=.5/Math.sqrt(u+1);e.w=.25/_,e.x=(l-s)*_,e.y=(o-c)*_,e.z=(a-i)*_}else if(n>r&&n>m){var f=2*Math.sqrt(1+n-r-m);e.w=(l-s)/f,e.x=.25*f,e.y=(i+a)/f,e.z=(o+c)/f}else if(r>m){var h=2*Math.sqrt(1+r-n-m);e.w=(o-c)/h,e.x=(i+a)/h,e.y=.25*h,e.z=(s+l)/h}else{var d=2*Math.sqrt(1+m-n-r);e.w=(a-i)/d,e.x=(o+c)/d,e.y=(s+l)/d,e.z=.25*d}return e},t.fromEuler=function(e,t,n,i){t*=Mn,n*=Mn,i*=Mn;var o=Math.sin(t),a=Math.cos(t),r=Math.sin(n),s=Math.cos(n),c=Math.sin(i),l=Math.cos(i);return e.x=o*s*l+a*r*c,e.y=a*r*l+o*s*c,e.z=a*s*c-o*r*l,e.w=a*s*l-o*r*c,e},t.fromAngleZ=function(e,t){return t*=Mn,e.x=e.y=0,e.z=Math.sin(t),e.w=Math.cos(t),e},t.toAxisX=function(e,t){var n=2*t.y,i=2*t.z;return e.x=1-n*t.y-i*t.z,e.y=n*t.x+i*t.w,e.z=i*t.x+n*t.w,e},t.toAxisY=function(e,t){var n=2*t.x,i=2*t.y,o=2*t.z;return e.x=i*t.x-o*t.w,e.y=1-n*t.x-o*t.z,e.z=o*t.y+n*t.w,e},t.toAxisZ=function(e,t){var n=2*t.x,i=2*t.y,o=2*t.z;return e.x=o*t.x-i*t.w,e.y=o*t.y-n*t.w,e.z=1-n*t.x-i*t.y,e},t.toEuler=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=t.w,s=0,c=0,l=0,m=i*o+a*r;if(m>.499999)s=0,c=fn(2*Math.atan2(i,r)),l=90;else if(m<-.499999)s=0,c=-fn(2*Math.atan2(i,r)),l=-90;else{var u=i*i,_=o*o,f=a*a;s=fn(Math.atan2(2*i*r-2*o*a,1-2*u-2*f)),c=fn(Math.atan2(2*o*r-2*i*a,1-2*_-2*f)),l=fn(Math.asin(2*m)),n&&(s=-180*Math.sign(s+1e-6)+s,c=-180*Math.sign(c+1e-6)+c,l=180*Math.sign(l+1e-6)-l)}return e.x=s,e.y=c,e.z=l,e},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e[n+3]=t.w,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e.w=t[n+3],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w},t.equals=function(e,t,n){return void 0===n&&(n=un),Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))&&Math.abs(e.z-t.z)<=n*Math.max(1,Math.abs(e.z),Math.abs(t.z))&&Math.abs(e.w-t.w)<=n*Math.max(1,Math.abs(e.w),Math.abs(t.w))};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.z,this.w)},n.set=function(e,t,n,i){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w):(this.x=e||0,this.y=t||0,this.z=n||0,this.w=null!=i?i:1),this},n.equals=function(e,t){return void 0===t&&(t=un),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))&&Math.abs(this.z-e.z)<=t*Math.max(1,Math.abs(this.z),Math.abs(e.z))&&Math.abs(this.w-e.w)<=t*Math.max(1,Math.abs(this.w),Math.abs(e.w))},n.strictEquals=function(e){return e&&this.x===e.x&&this.y===e.y&&this.z===e.z&&this.w===e.w},n.getEulerAngles=function(e){return t.toEuler(e,this)},n.lerp=function(e,t){return this.x+=t*(e.x-this.x),this.y+=t*(e.y-this.y),this.z+=t*(e.z-this.z),this.w+=t*(e.w-this.w),this},n.slerp=function(e,n){return t.slerp(this,this,e,n)},n.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},n.lengthSqr=function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},t}(gt));Nn.IDENTITY=Object.freeze(new Nn);var wn=new Nn,bn=new Nn,On=new An,Pn=new Sn,Mn=.5*Math.PI/180;function Dn(e,t,n,i){return void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),new Nn(e,t,n,i)}rn.fastDefine("cc.Quat",Nn,{x:0,y:0,z:0,w:1}),r.Quat=Nn,r.quat=Dn;var zn=e("ew",Object.freeze([Object.freeze([1,0,0,1]),Object.freeze([0,1,-1,0]),Object.freeze([-1,0,0,-1]),Object.freeze([0,-1,1,0])])),Ln=e("b9",function(e){function t(t,n,i,o,a,r,s,c,l,m,u,_,f,h,d,v){var p;return void 0===t&&(t=1),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=1),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=0),void 0===m&&(m=0),void 0===u&&(u=1),void 0===_&&(_=0),void 0===f&&(f=0),void 0===h&&(h=0),void 0===d&&(d=0),void 0===v&&(v=1),(p=e.call(this)||this).m00=void 0,p.m01=void 0,p.m02=void 0,p.m03=void 0,p.m04=void 0,p.m05=void 0,p.m06=void 0,p.m07=void 0,p.m08=void 0,p.m09=void 0,p.m10=void 0,p.m11=void 0,p.m12=void 0,p.m13=void 0,p.m14=void 0,p.m15=void 0,"object"==typeof t?(p.m00=t.m00,p.m01=t.m01,p.m02=t.m02,p.m03=t.m03,p.m04=t.m04,p.m05=t.m05,p.m06=t.m06,p.m07=t.m07,p.m08=t.m08,p.m09=t.m09,p.m10=t.m10,p.m11=t.m11,p.m12=t.m12,p.m13=t.m13,p.m14=t.m14,p.m15=t.m15):(p.m00=t,p.m01=n,p.m02=i,p.m03=o,p.m04=a,p.m05=r,p.m06=s,p.m07=c,p.m08=l,p.m09=m,p.m10=u,p.m11=_,p.m12=f,p.m13=h,p.m14=d,p.m15=v),p}J(t,e),t.clone=function(e){return new t(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08,e.m09,e.m10,e.m11,e.m12,e.m13,e.m14,e.m15)},t.copy=function(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15,e},t.set=function(e,t,n,i,o,a,r,s,c,l,m,u,_,f,h,d,v){return e.m00=t,e.m01=n,e.m02=i,e.m03=o,e.m04=a,e.m05=r,e.m06=s,e.m07=c,e.m08=l,e.m09=m,e.m10=u,e.m11=_,e.m12=f,e.m13=h,e.m14=d,e.m15=v,e},t.identity=function(e){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.transpose=function(e,t){if(e===t){var n=t.m01,i=t.m02,o=t.m03,a=t.m06,r=t.m07,s=t.m11;e.m01=t.m04,e.m02=t.m08,e.m03=t.m12,e.m04=n,e.m06=t.m09,e.m07=t.m13,e.m08=i,e.m09=a,e.m11=t.m14,e.m12=o,e.m13=r,e.m14=s}else e.m00=t.m00,e.m01=t.m04,e.m02=t.m08,e.m03=t.m12,e.m04=t.m01,e.m05=t.m05,e.m06=t.m09,e.m07=t.m13,e.m08=t.m02,e.m09=t.m06,e.m10=t.m10,e.m11=t.m14,e.m12=t.m03,e.m13=t.m07,e.m14=t.m11,e.m15=t.m15;return e},t.invert=function(e,t){var n=t.m00,i=t.m01,o=t.m02,a=t.m03,r=t.m04,s=t.m05,c=t.m06,l=t.m07,m=t.m08,u=t.m09,_=t.m10,f=t.m11,h=t.m12,d=t.m13,v=t.m14,p=t.m15,g=n*s-i*r,x=n*c-o*r,y=n*l-a*r,A=i*c-o*s,T=i*l-a*s,C=o*l-a*c,E=m*d-u*h,S=m*v-_*h,I=m*p-f*h,R=u*v-_*d,N=u*p-f*d,w=_*p-f*v,b=g*w-x*N+y*R+A*I-T*S+C*E;return 0===b?(e.m00=0,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=0,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=0,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=0,e):(b=1/b,e.m00=(s*w-c*N+l*R)*b,e.m01=(o*N-i*w-a*R)*b,e.m02=(d*C-v*T+p*A)*b,e.m03=(_*T-u*C-f*A)*b,e.m04=(c*I-r*w-l*S)*b,e.m05=(n*w-o*I+a*S)*b,e.m06=(v*y-h*C-p*x)*b,e.m07=(m*C-_*y+f*x)*b,e.m08=(r*N-s*I+l*E)*b,e.m09=(i*I-n*N-a*E)*b,e.m10=(h*T-d*y+p*g)*b,e.m11=(u*y-m*T-f*g)*b,e.m12=(s*S-r*R-c*E)*b,e.m13=(n*R-i*S+o*E)*b,e.m14=(d*x-h*A-v*g)*b,e.m15=(m*A-u*x+_*g)*b,e)},t.determinant=function(e){var t=e.m00,n=e.m01,i=e.m02,o=e.m03,a=e.m04,r=e.m05,s=e.m06,c=e.m07,l=e.m08,m=e.m09,u=e.m10,_=e.m11,f=e.m12,h=e.m13,d=e.m14,v=e.m15;return(t*r-n*a)*(u*v-_*d)-(t*s-i*a)*(m*v-_*h)+(t*c-o*a)*(m*d-u*h)+(n*s-i*r)*(l*v-_*f)-(n*c-o*r)*(l*d-u*f)+(i*c-o*s)*(l*h-m*f)},t.multiply=function(e,t,n){var i=t.m00,o=t.m01,a=t.m02,r=t.m03,s=t.m04,c=t.m05,l=t.m06,m=t.m07,u=t.m08,_=t.m09,f=t.m10,h=t.m11,d=t.m12,v=t.m13,p=t.m14,g=t.m15,x=n.m00,y=n.m01,A=n.m02,T=n.m03;return e.m00=x*i+y*s+A*u+T*d,e.m01=x*o+y*c+A*_+T*v,e.m02=x*a+y*l+A*f+T*p,e.m03=x*r+y*m+A*h+T*g,x=n.m04,y=n.m05,A=n.m06,T=n.m07,e.m04=x*i+y*s+A*u+T*d,e.m05=x*o+y*c+A*_+T*v,e.m06=x*a+y*l+A*f+T*p,e.m07=x*r+y*m+A*h+T*g,x=n.m08,y=n.m09,A=n.m10,T=n.m11,e.m08=x*i+y*s+A*u+T*d,e.m09=x*o+y*c+A*_+T*v,e.m10=x*a+y*l+A*f+T*p,e.m11=x*r+y*m+A*h+T*g,x=n.m12,y=n.m13,A=n.m14,T=n.m15,e.m12=x*i+y*s+A*u+T*d,e.m13=x*o+y*c+A*_+T*v,e.m14=x*a+y*l+A*f+T*p,e.m15=x*r+y*m+A*h+T*g,e},t.transform=function(e,t,n){var i=n.x,o=n.y,a=n.z;if(t===e)e.m12=t.m00*i+t.m04*o+t.m08*a+t.m12,e.m13=t.m01*i+t.m05*o+t.m09*a+t.m13,e.m14=t.m02*i+t.m06*o+t.m10*a+t.m14,e.m15=t.m03*i+t.m07*o+t.m11*a+t.m15;else{var r=t.m00,s=t.m01,c=t.m02,l=t.m03,m=t.m04,u=t.m05,_=t.m06,f=t.m07,h=t.m08,d=t.m09,v=t.m10,p=t.m11;t.m12,t.m13,t.m14,t.m15,e.m00=r,e.m01=s,e.m02=c,e.m03=l,e.m04=m,e.m05=u,e.m06=_,e.m07=f,e.m08=h,e.m09=d,e.m10=v,e.m11=p,e.m12=r*i+m*o+h*a+t.m12,e.m13=s*i+u*o+d*a+t.m13,e.m14=c*i+_*o+v*a+t.m14,e.m15=l*i+f*o+p*a+t.m15}return e},t.translate=function(e,t,n){return console.warn("function changed"),t===e?(e.m12+=n.x,e.m13+=n.y,e.m14+=n.z):(e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12+=n.x,e.m13+=n.y,e.m14+=n.z,e.m15=t.m15),e},t.scale=function(e,t,n){var i=n.x,o=n.y,a=n.z;return e.m00=t.m00*i,e.m01=t.m01*i,e.m02=t.m02*i,e.m03=t.m03*i,e.m04=t.m04*o,e.m05=t.m05*o,e.m06=t.m06*o,e.m07=t.m07*o,e.m08=t.m08*a,e.m09=t.m09*a,e.m10=t.m10*a,e.m11=t.m11*a,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15,e},t.rotate=function(e,t,n,i){var o=i.x,a=i.y,r=i.z,s=Math.sqrt(o*o+a*a+r*r);if(Math.abs(s)<un)return null;o*=s=1/s,a*=s,r*=s;var c=Math.sin(n),l=Math.cos(n),m=1-l,u=t.m00,_=t.m01,f=t.m02,h=t.m03,d=t.m04,v=t.m05,p=t.m06,g=t.m07,x=t.m08,y=t.m09,A=t.m10,T=t.m11,C=o*o*m+l,E=a*o*m+r*c,S=r*o*m-a*c,I=o*a*m-r*c,R=a*a*m+l,N=r*a*m+o*c,w=o*r*m+a*c,b=a*r*m-o*c,O=r*r*m+l;return e.m00=u*C+d*E+x*S,e.m01=_*C+v*E+y*S,e.m02=f*C+p*E+A*S,e.m03=h*C+g*E+T*S,e.m04=u*I+d*R+x*N,e.m05=_*I+v*R+y*N,e.m06=f*I+p*R+A*N,e.m07=h*I+g*R+T*N,e.m08=u*w+d*b+x*O,e.m09=_*w+v*b+y*O,e.m10=f*w+p*b+A*O,e.m11=h*w+g*b+T*O,t!==e&&(e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e},t.rotateX=function(e,t,n){var i=Math.sin(n),o=Math.cos(n),a=t.m04,r=t.m05,s=t.m06,c=t.m07,l=t.m08,m=t.m09,u=t.m10,_=t.m11;return t!==e&&(e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m04=a*o+l*i,e.m05=r*o+m*i,e.m06=s*o+u*i,e.m07=c*o+_*i,e.m08=l*o-a*i,e.m09=m*o-r*i,e.m10=u*o-s*i,e.m11=_*o-c*i,e},t.rotateY=function(e,t,n){var i=Math.sin(n),o=Math.cos(n),a=t.m00,r=t.m01,s=t.m02,c=t.m03,l=t.m08,m=t.m09,u=t.m10,_=t.m11;return t!==e&&(e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m00=a*o-l*i,e.m01=r*o-m*i,e.m02=s*o-u*i,e.m03=c*o-_*i,e.m08=a*i+l*o,e.m09=r*i+m*o,e.m10=s*i+u*o,e.m11=c*i+_*o,e},t.rotateZ=function(e,t,n){var i=Math.sin(n),o=Math.cos(n),a=t.m00,r=t.m01,s=t.m02,c=t.m03,l=t.m04,m=t.m05,u=t.m06,_=t.m07;return t!==e&&(e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m00=a*o+l*i,e.m01=r*o+m*i,e.m02=s*o+u*i,e.m03=c*o+_*i,e.m04=l*o-a*i,e.m05=m*o-r*i,e.m06=u*o-s*i,e.m07=_*o-c*i,e},t.fromTranslation=function(e,t){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=t.x,e.m13=t.y,e.m14=t.z,e.m15=1,e},t.fromScaling=function(e,t){return e.m00=t.x,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=t.y,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=t.z,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromRotation=function(e,t,n){var i=n.x,o=n.y,a=n.z,r=Math.sqrt(i*i+o*o+a*a);if(Math.abs(r)<un)return null;i*=r=1/r,o*=r,a*=r;var s=Math.sin(t),c=Math.cos(t),l=1-c;return e.m00=i*i*l+c,e.m01=o*i*l+a*s,e.m02=a*i*l-o*s,e.m03=0,e.m04=i*o*l-a*s,e.m05=o*o*l+c,e.m06=a*o*l+i*s,e.m07=0,e.m08=i*a*l+o*s,e.m09=o*a*l-i*s,e.m10=a*a*l+c,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromXRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=i,e.m06=n,e.m07=0,e.m08=0,e.m09=-n,e.m10=i,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromYRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=0,e.m02=-n,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=n,e.m09=0,e.m10=i,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromZRotation=function(e,t){var n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=n,e.m02=0,e.m03=0,e.m04=-n,e.m05=i,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.fromRT=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=t.w,s=i+i,c=o+o,l=a+a,m=i*s,u=i*c,_=i*l,f=o*c,h=o*l,d=a*l,v=r*s,p=r*c,g=r*l;return e.m00=1-(f+d),e.m01=u+g,e.m02=_-p,e.m03=0,e.m04=u-g,e.m05=1-(m+d),e.m06=h+v,e.m07=0,e.m08=_+p,e.m09=h-v,e.m10=1-(m+f),e.m11=0,e.m12=n.x,e.m13=n.y,e.m14=n.z,e.m15=1,e},t.getTranslation=function(e,t){return e.x=t.m12,e.y=t.m13,e.z=t.m14,e},t.getScaling=function(e,t){var n=Un.m00=t.m00,i=Un.m01=t.m01,o=Un.m02=t.m02,a=Un.m03=t.m04,r=Un.m04=t.m05,s=Un.m05=t.m06,c=Un.m06=t.m08,l=Un.m07=t.m09,m=Un.m08=t.m10;return e.x=Math.sqrt(n*n+i*i+o*o),e.y=Math.sqrt(a*a+r*r+s*s),e.z=Math.sqrt(c*c+l*l+m*m),Sn.determinant(Un)<0&&(e.x*=-1),e},t.getRotation=function(e,t){var n=t.m00+t.m05+t.m10,i=0;return n>0?(i=2*Math.sqrt(n+1),e.w=.25*i,e.x=(t.m06-t.m09)/i,e.y=(t.m08-t.m02)/i,e.z=(t.m01-t.m04)/i):t.m00>t.m05&&t.m00>t.m10?(i=2*Math.sqrt(1+t.m00-t.m05-t.m10),e.w=(t.m06-t.m09)/i,e.x=.25*i,e.y=(t.m01+t.m04)/i,e.z=(t.m08+t.m02)/i):t.m05>t.m10?(i=2*Math.sqrt(1+t.m05-t.m00-t.m10),e.w=(t.m08-t.m02)/i,e.x=(t.m01+t.m04)/i,e.y=.25*i,e.z=(t.m06+t.m09)/i):(i=2*Math.sqrt(1+t.m10-t.m00-t.m05),e.w=(t.m01-t.m04)/i,e.x=(t.m08+t.m02)/i,e.y=(t.m06+t.m09)/i,e.z=.25*i),e},t.toRTS=function(e,t,n,i){i.x=An.set(Fn,e.m00,e.m01,e.m02).length(),Un.m00=e.m00/i.x,Un.m01=e.m01/i.x,Un.m02=e.m02/i.x,i.y=An.set(Fn,e.m04,e.m05,e.m06).length(),Un.m03=e.m04/i.y,Un.m04=e.m05/i.y,Un.m05=e.m06/i.y,i.z=An.set(Fn,e.m08,e.m09,e.m10).length(),Un.m06=e.m08/i.z,Un.m07=e.m09/i.z,Un.m08=e.m10/i.z,Sn.determinant(Un)<0&&(i.x*=-1,Un.m00*=-1,Un.m01*=-1,Un.m02*=-1),Nn.fromMat3(t,Un),An.set(n,e.m12,e.m13,e.m14)},t.fromRTS=function(e,t,n,i){var o=t.x,a=t.y,r=t.z,s=t.w,c=o+o,l=a+a,m=r+r,u=o*c,_=o*l,f=o*m,h=a*l,d=a*m,v=r*m,p=s*c,g=s*l,x=s*m,y=i.x,A=i.y,T=i.z;return e.m00=(1-(h+v))*y,e.m01=(_+x)*y,e.m02=(f-g)*y,e.m03=0,e.m04=(_-x)*A,e.m05=(1-(u+v))*A,e.m06=(d+p)*A,e.m07=0,e.m08=(f+g)*T,e.m09=(d-p)*T,e.m10=(1-(u+h))*T,e.m11=0,e.m12=n.x,e.m13=n.y,e.m14=n.z,e.m15=1,e},t.fromRTSOrigin=function(e,t,n,i,o){var a=t.x,r=t.y,s=t.z,c=t.w,l=a+a,m=r+r,u=s+s,_=a*l,f=a*m,h=a*u,d=r*m,v=r*u,p=s*u,g=c*l,x=c*m,y=c*u,A=i.x,T=i.y,C=i.z,E=o.x,S=o.y,I=o.z;return e.m00=(1-(d+p))*A,e.m01=(f+y)*A,e.m02=(h-x)*A,e.m03=0,e.m04=(f-y)*T,e.m05=(1-(_+p))*T,e.m06=(v+g)*T,e.m07=0,e.m08=(h+x)*C,e.m09=(v-g)*C,e.m10=(1-(_+d))*C,e.m11=0,e.m12=n.x+E-(e.m00*E+e.m04*S+e.m08*I),e.m13=n.y+S-(e.m01*E+e.m05*S+e.m09*I),e.m14=n.z+I-(e.m02*E+e.m06*S+e.m10*I),e.m15=1,e},t.fromQuat=function(e,t){var n=t.x,i=t.y,o=t.z,a=t.w,r=n+n,s=i+i,c=o+o,l=n*r,m=i*r,u=i*s,_=o*r,f=o*s,h=o*c,d=a*r,v=a*s,p=a*c;return e.m00=1-u-h,e.m01=m+p,e.m02=_-v,e.m03=0,e.m04=m-p,e.m05=1-l-h,e.m06=f+d,e.m07=0,e.m08=_+v,e.m09=f-d,e.m10=1-l-u,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e},t.frustum=function(e,t,n,i,o,a,r){var s=1/(n-t),c=1/(o-i),l=1/(a-r);return e.m00=2*a*s,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=2*a*c,e.m06=0,e.m07=0,e.m08=(n+t)*s,e.m09=(o+i)*c,e.m10=(r+a)*l,e.m11=-1,e.m12=0,e.m13=0,e.m14=r*a*2*l,e.m15=0,e},t.perspective=function(e,t,n,i,o,a,r,s,c){void 0===a&&(a=!0),void 0===r&&(r=-1),void 0===s&&(s=1),void 0===c&&(c=0);var l=1/Math.tan(t/2),m=1/(i-o),u=a?l/n:l,_=(a?l:l*n)*s,f=zn[c];return e.m00=u*f[0],e.m01=u*f[1],e.m02=0,e.m03=0,e.m04=_*f[2],e.m05=_*f[3],e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=(o-r*i)*m,e.m11=-1,e.m12=0,e.m13=0,e.m14=o*i*m*(1-r),e.m15=0,e},t.ortho=function(e,t,n,i,o,a,r,s,c,l){void 0===s&&(s=-1),void 0===c&&(c=1),void 0===l&&(l=0);var m=1/(t-n),u=1/(i-o)*c,_=1/(a-r),f=-2*m,h=-2*u,d=(t+n)*m,v=(o+i)*u,p=zn[l];return e.m00=f*p[0],e.m01=f*p[1],e.m02=0,e.m03=0,e.m04=h*p[2],e.m05=h*p[3],e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=_*(1-s),e.m11=0,e.m12=d*p[0]+v*p[2],e.m13=d*p[1]+v*p[3],e.m14=(a-s*r)*_,e.m15=1,e},t.lookAt=function(e,t,n,i){var o=t.x,a=t.y,r=t.z,s=i.x,c=i.y,l=i.z,m=o-n.x,u=a-n.y,_=r-n.z,f=1/Math.sqrt(m*m+u*u+_*_),h=c*(_*=f)-l*(u*=f),d=l*(m*=f)-s*_,v=s*u-c*m,p=u*(v*=f=1/Math.sqrt(h*h+d*d+v*v))-_*(d*=f),g=_*(h*=f)-m*v,x=m*d-u*h;return e.m00=h,e.m01=p,e.m02=m,e.m03=0,e.m04=d,e.m05=g,e.m06=u,e.m07=0,e.m08=v,e.m09=x,e.m10=_,e.m11=0,e.m12=-(h*o+d*a+v*r),e.m13=-(p*o+g*a+x*r),e.m14=-(m*o+u*a+_*r),e.m15=1,e},t.inverseTranspose=function(e,t){var n=t.m00,i=t.m01,o=t.m02,a=t.m03,r=t.m04,s=t.m05,c=t.m06,l=t.m07,m=t.m08,u=t.m09,_=t.m10,f=t.m11,h=t.m12,d=t.m13,v=t.m14,p=t.m15,g=n*s-i*r,x=n*c-o*r,y=n*l-a*r,A=i*c-o*s,T=i*l-a*s,C=o*l-a*c,E=m*d-u*h,S=m*v-_*h,I=m*p-f*h,R=u*v-_*d,N=u*p-f*d,w=_*p-f*v,b=g*w-x*N+y*R+A*I-T*S+C*E;return b?(b=1/b,e.m00=(s*w-c*N+l*R)*b,e.m01=(c*I-r*w-l*S)*b,e.m02=(r*N-s*I+l*E)*b,e.m03=0,e.m04=(o*N-i*w-a*R)*b,e.m05=(n*w-o*I+a*S)*b,e.m06=(i*I-n*N-a*E)*b,e.m07=0,e.m08=(d*C-v*T+p*A)*b,e.m09=(v*y-h*C-p*x)*b,e.m10=(h*T-d*y+p*g)*b,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e):null},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.m00,e[n+1]=t.m01,e[n+2]=t.m02,e[n+3]=t.m03,e[n+4]=t.m04,e[n+5]=t.m05,e[n+6]=t.m06,e[n+7]=t.m07,e[n+8]=t.m08,e[n+9]=t.m09,e[n+10]=t.m10,e[n+11]=t.m11,e[n+12]=t.m12,e[n+13]=t.m13,e[n+14]=t.m14,e[n+15]=t.m15,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.m00=t[n+0],e.m01=t[n+1],e.m02=t[n+2],e.m03=t[n+3],e.m04=t[n+4],e.m05=t[n+5],e.m06=t[n+6],e.m07=t[n+7],e.m08=t[n+8],e.m09=t[n+9],e.m10=t[n+10],e.m11=t[n+11],e.m12=t[n+12],e.m13=t[n+13],e.m14=t[n+14],e.m15=t[n+15],e},t.add=function(e,t,n){return e.m00=t.m00+n.m00,e.m01=t.m01+n.m01,e.m02=t.m02+n.m02,e.m03=t.m03+n.m03,e.m04=t.m04+n.m04,e.m05=t.m05+n.m05,e.m06=t.m06+n.m06,e.m07=t.m07+n.m07,e.m08=t.m08+n.m08,e.m09=t.m09+n.m09,e.m10=t.m10+n.m10,e.m11=t.m11+n.m11,e.m12=t.m12+n.m12,e.m13=t.m13+n.m13,e.m14=t.m14+n.m14,e.m15=t.m15+n.m15,e},t.subtract=function(e,t,n){return e.m00=t.m00-n.m00,e.m01=t.m01-n.m01,e.m02=t.m02-n.m02,e.m03=t.m03-n.m03,e.m04=t.m04-n.m04,e.m05=t.m05-n.m05,e.m06=t.m06-n.m06,e.m07=t.m07-n.m07,e.m08=t.m08-n.m08,e.m09=t.m09-n.m09,e.m10=t.m10-n.m10,e.m11=t.m11-n.m11,e.m12=t.m12-n.m12,e.m13=t.m13-n.m13,e.m14=t.m14-n.m14,e.m15=t.m15-n.m15,e},t.multiplyScalar=function(e,t,n){return e.m00=t.m00*n,e.m01=t.m01*n,e.m02=t.m02*n,e.m03=t.m03*n,e.m04=t.m04*n,e.m05=t.m05*n,e.m06=t.m06*n,e.m07=t.m07*n,e.m08=t.m08*n,e.m09=t.m09*n,e.m10=t.m10*n,e.m11=t.m11*n,e.m12=t.m12*n,e.m13=t.m13*n,e.m14=t.m14*n,e.m15=t.m15*n,e},t.multiplyScalarAndAdd=function(e,t,n,i){return e.m00=t.m00+n.m00*i,e.m01=t.m01+n.m01*i,e.m02=t.m02+n.m02*i,e.m03=t.m03+n.m03*i,e.m04=t.m04+n.m04*i,e.m05=t.m05+n.m05*i,e.m06=t.m06+n.m06*i,e.m07=t.m07+n.m07*i,e.m08=t.m08+n.m08*i,e.m09=t.m09+n.m09*i,e.m10=t.m10+n.m10*i,e.m11=t.m11+n.m11*i,e.m12=t.m12+n.m12*i,e.m13=t.m13+n.m13*i,e.m14=t.m14+n.m14*i,e.m15=t.m15+n.m15*i,e},t.strictEquals=function(e,t){return e.m00===t.m00&&e.m01===t.m01&&e.m02===t.m02&&e.m03===t.m03&&e.m04===t.m04&&e.m05===t.m05&&e.m06===t.m06&&e.m07===t.m07&&e.m08===t.m08&&e.m09===t.m09&&e.m10===t.m10&&e.m11===t.m11&&e.m12===t.m12&&e.m13===t.m13&&e.m14===t.m14&&e.m15===t.m15},t.equals=function(e,t,n){return void 0===n&&(n=un),Math.abs(e.m00-t.m00)<=n*Math.max(1,Math.abs(e.m00),Math.abs(t.m00))&&Math.abs(e.m01-t.m01)<=n*Math.max(1,Math.abs(e.m01),Math.abs(t.m01))&&Math.abs(e.m02-t.m02)<=n*Math.max(1,Math.abs(e.m02),Math.abs(t.m02))&&Math.abs(e.m03-t.m03)<=n*Math.max(1,Math.abs(e.m03),Math.abs(t.m03))&&Math.abs(e.m04-t.m04)<=n*Math.max(1,Math.abs(e.m04),Math.abs(t.m04))&&Math.abs(e.m05-t.m05)<=n*Math.max(1,Math.abs(e.m05),Math.abs(t.m05))&&Math.abs(e.m06-t.m06)<=n*Math.max(1,Math.abs(e.m06),Math.abs(t.m06))&&Math.abs(e.m07-t.m07)<=n*Math.max(1,Math.abs(e.m07),Math.abs(t.m07))&&Math.abs(e.m08-t.m08)<=n*Math.max(1,Math.abs(e.m08),Math.abs(t.m08))&&Math.abs(e.m09-t.m09)<=n*Math.max(1,Math.abs(e.m09),Math.abs(t.m09))&&Math.abs(e.m10-t.m10)<=n*Math.max(1,Math.abs(e.m10),Math.abs(t.m10))&&Math.abs(e.m11-t.m11)<=n*Math.max(1,Math.abs(e.m11),Math.abs(t.m11))&&Math.abs(e.m12-t.m12)<=n*Math.max(1,Math.abs(e.m12),Math.abs(t.m12))&&Math.abs(e.m13-t.m13)<=n*Math.max(1,Math.abs(e.m13),Math.abs(t.m13))&&Math.abs(e.m14-t.m14)<=n*Math.max(1,Math.abs(e.m14),Math.abs(t.m14))&&Math.abs(e.m15-t.m15)<=n*Math.max(1,Math.abs(e.m15),Math.abs(t.m15))};var n=t.prototype;return n.clone=function(){return new t(this.m00,this.m01,this.m02,this.m03,this.m04,this.m05,this.m06,this.m07,this.m08,this.m09,this.m10,this.m11,this.m12,this.m13,this.m14,this.m15)},n.set=function(e,t,n,i,o,a,r,s,c,l,m,u,_,f,h,d){return void 0===e&&(e=1),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=1),void 0===r&&(r=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=0),void 0===m&&(m=1),void 0===u&&(u=0),void 0===_&&(_=0),void 0===f&&(f=0),void 0===h&&(h=0),void 0===d&&(d=1),"object"==typeof e?(this.m01=e.m01,this.m02=e.m02,this.m03=e.m03,this.m04=e.m04,this.m05=e.m05,this.m06=e.m06,this.m07=e.m07,this.m08=e.m08,this.m09=e.m09,this.m10=e.m10,this.m11=e.m11,this.m12=e.m12,this.m13=e.m13,this.m14=e.m14,this.m15=e.m15,this.m00=e.m00):(this.m01=t,this.m02=n,this.m03=i,this.m04=o,this.m05=a,this.m06=r,this.m07=s,this.m08=c,this.m09=l,this.m10=m,this.m11=u,this.m12=_,this.m13=f,this.m14=h,this.m15=d,this.m00=e),this},n.equals=function(e,t){return void 0===t&&(t=un),Math.abs(this.m00-e.m00)<=t*Math.max(1,Math.abs(this.m00),Math.abs(e.m00))&&Math.abs(this.m01-e.m01)<=t*Math.max(1,Math.abs(this.m01),Math.abs(e.m01))&&Math.abs(this.m02-e.m02)<=t*Math.max(1,Math.abs(this.m02),Math.abs(e.m02))&&Math.abs(this.m03-e.m03)<=t*Math.max(1,Math.abs(this.m03),Math.abs(e.m03))&&Math.abs(this.m04-e.m04)<=t*Math.max(1,Math.abs(this.m04),Math.abs(e.m04))&&Math.abs(this.m05-e.m05)<=t*Math.max(1,Math.abs(this.m05),Math.abs(e.m05))&&Math.abs(this.m06-e.m06)<=t*Math.max(1,Math.abs(this.m06),Math.abs(e.m06))&&Math.abs(this.m07-e.m07)<=t*Math.max(1,Math.abs(this.m07),Math.abs(e.m07))&&Math.abs(this.m08-e.m08)<=t*Math.max(1,Math.abs(this.m08),Math.abs(e.m08))&&Math.abs(this.m09-e.m09)<=t*Math.max(1,Math.abs(this.m09),Math.abs(e.m09))&&Math.abs(this.m10-e.m10)<=t*Math.max(1,Math.abs(this.m10),Math.abs(e.m10))&&Math.abs(this.m11-e.m11)<=t*Math.max(1,Math.abs(this.m11),Math.abs(e.m11))&&Math.abs(this.m12-e.m12)<=t*Math.max(1,Math.abs(this.m12),Math.abs(e.m12))&&Math.abs(this.m13-e.m13)<=t*Math.max(1,Math.abs(this.m13),Math.abs(e.m13))&&Math.abs(this.m14-e.m14)<=t*Math.max(1,Math.abs(this.m14),Math.abs(e.m14))&&Math.abs(this.m15-e.m15)<=t*Math.max(1,Math.abs(this.m15),Math.abs(e.m15))},n.strictEquals=function(e){return this.m00===e.m00&&this.m01===e.m01&&this.m02===e.m02&&this.m03===e.m03&&this.m04===e.m04&&this.m05===e.m05&&this.m06===e.m06&&this.m07===e.m07&&this.m08===e.m08&&this.m09===e.m09&&this.m10===e.m10&&this.m11===e.m11&&this.m12===e.m12&&this.m13===e.m13&&this.m14===e.m14&&this.m15===e.m15},n.toString=function(){return"[\n"+this.m00+", "+this.m01+", "+this.m02+", "+this.m03+",\n"+this.m04+", "+this.m05+", "+this.m06+", "+this.m07+",\n"+this.m08+", "+this.m09+", "+this.m10+", "+this.m11+",\n"+this.m12+", "+this.m13+", "+this.m14+", "+this.m15+"\n]"},n.identity=function(){return this.m00=1,this.m01=0,this.m02=0,this.m03=0,this.m04=0,this.m05=1,this.m06=0,this.m07=0,this.m08=0,this.m09=0,this.m10=1,this.m11=0,this.m12=0,this.m13=0,this.m14=0,this.m15=1,this},n.zero=function(){return this.m00=0,this.m01=0,this.m02=0,this.m03=0,this.m04=0,this.m05=0,this.m06=0,this.m07=0,this.m08=0,this.m09=0,this.m10=0,this.m11=0,this.m12=0,this.m13=0,this.m14=0,this.m15=0,this},n.transpose=function(){var e=this.m01,t=this.m02,n=this.m03,i=this.m06,o=this.m07,a=this.m11;return this.m01=this.m04,this.m02=this.m08,this.m03=this.m12,this.m04=e,this.m06=this.m09,this.m07=this.m13,this.m08=t,this.m09=i,this.m11=this.m14,this.m12=n,this.m13=o,this.m14=a,this},n.invert=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,a=this.m05,r=this.m06,s=this.m07,c=this.m08,l=this.m09,m=this.m10,u=this.m11,_=this.m12,f=this.m13,h=this.m14,d=this.m15,v=e*a-t*o,p=e*r-n*o,g=e*s-i*o,x=t*r-n*a,y=t*s-i*a,A=n*s-i*r,T=c*f-l*_,C=c*h-m*_,E=c*d-u*_,S=l*h-m*f,I=l*d-u*f,R=m*d-u*h,N=v*R-p*I+g*S+x*E-y*C+A*T;return 0===N?(this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this):(N=1/N,this.m00=(a*R-r*I+s*S)*N,this.m01=(n*I-t*R-i*S)*N,this.m02=(f*A-h*y+d*x)*N,this.m03=(m*y-l*A-u*x)*N,this.m04=(r*E-o*R-s*C)*N,this.m05=(e*R-n*E+i*C)*N,this.m06=(h*g-_*A-d*p)*N,this.m07=(c*A-m*g+u*p)*N,this.m08=(o*I-a*E+s*T)*N,this.m09=(t*E-e*I-i*T)*N,this.m10=(_*y-f*g+d*v)*N,this.m11=(l*g-c*y-u*v)*N,this.m12=(a*C-o*S-r*T)*N,this.m13=(e*S-t*C+n*T)*N,this.m14=(f*p-_*x-h*v)*N,this.m15=(c*x-l*p+m*v)*N,this)},n.determinant=function(){var e=this.m00,t=this.m01,n=this.m02,i=this.m03,o=this.m04,a=this.m05,r=this.m06,s=this.m07,c=this.m08,l=this.m09,m=this.m10,u=this.m11,_=this.m12,f=this.m13,h=this.m14,d=this.m15;return(e*a-t*o)*(m*d-u*h)-(e*r-n*o)*(l*d-u*f)+(e*s-i*o)*(l*h-m*f)+(t*r-n*a)*(c*d-u*_)-(t*s-i*a)*(c*h-m*_)+(n*s-i*r)*(c*f-l*_)},n.add=function(e){return this.m00+=e.m00,this.m01+=e.m01,this.m02+=e.m02,this.m03+=e.m03,this.m04+=e.m04,this.m05+=e.m05,this.m06+=e.m06,this.m07+=e.m07,this.m08+=e.m08,this.m09+=e.m09,this.m10+=e.m10,this.m11+=e.m11,this.m12+=e.m12,this.m13+=e.m13,this.m14+=e.m14,this.m15+=e.m15,this},n.subtract=function(e){return this.m00-=e.m00,this.m01-=e.m01,this.m02-=e.m02,this.m03-=e.m03,this.m04-=e.m04,this.m05-=e.m05,this.m06-=e.m06,this.m07-=e.m07,this.m08-=e.m08,this.m09-=e.m09,this.m10-=e.m10,this.m11-=e.m11,this.m12-=e.m12,this.m13-=e.m13,this.m14-=e.m14,this.m15-=e.m15,this},n.multiply=function(e){var t=this.m00,n=this.m01,i=this.m02,o=this.m03,a=this.m04,r=this.m05,s=this.m06,c=this.m07,l=this.m08,m=this.m09,u=this.m10,_=this.m11,f=this.m12,h=this.m13,d=this.m14,v=this.m15,p=e.m00,g=e.m01,x=e.m02,y=e.m03;return this.m00=p*t+g*a+x*l+y*f,this.m01=p*n+g*r+x*m+y*h,this.m02=p*i+g*s+x*u+y*d,this.m03=p*o+g*c+x*_+y*v,p=e.m04,g=e.m05,x=e.m06,y=e.m07,this.m04=p*t+g*a+x*l+y*f,this.m05=p*n+g*r+x*m+y*h,this.m06=p*i+g*s+x*u+y*d,this.m07=p*o+g*c+x*_+y*v,p=e.m08,g=e.m09,x=e.m10,y=e.m11,this.m08=p*t+g*a+x*l+y*f,this.m09=p*n+g*r+x*m+y*h,this.m10=p*i+g*s+x*u+y*d,this.m11=p*o+g*c+x*_+y*v,p=e.m12,g=e.m13,x=e.m14,y=e.m15,this.m12=p*t+g*a+x*l+y*f,this.m13=p*n+g*r+x*m+y*h,this.m14=p*i+g*s+x*u+y*d,this.m15=p*o+g*c+x*_+y*v,this},n.multiplyScalar=function(e){return this.m00*=e,this.m01*=e,this.m02*=e,this.m03*=e,this.m04*=e,this.m05*=e,this.m06*=e,this.m07*=e,this.m08*=e,this.m09*=e,this.m10*=e,this.m11*=e,this.m12*=e,this.m13*=e,this.m14*=e,this.m15*=e,this},n.translate=function(e){return console.warn("function changed"),this.m12+=e.x,this.m13+=e.y,this.m14+=e.z,this},n.scale=function(e){var t=e.x,n=e.y,i=e.z;return this.m00*=t,this.m01*=t,this.m02*=t,this.m03*=t,this.m04*=n,this.m05*=n,this.m06*=n,this.m07*=n,this.m08*=i,this.m09*=i,this.m10*=i,this.m11*=i,this},n.rotate=function(e,t){var n=t.x,i=t.y,o=t.z,a=Math.sqrt(n*n+i*i+o*o);if(Math.abs(a)<un)return null;n*=a=1/a,i*=a,o*=a;var r=Math.sin(e),s=Math.cos(e),c=1-s,l=this.m00,m=this.m01,u=this.m02,_=this.m03,f=this.m04,h=this.m05,d=this.m06,v=this.m07,p=this.m08,g=this.m09,x=this.m10,y=this.m11,A=n*n*c+s,T=i*n*c+o*r,C=o*n*c-i*r,E=n*i*c-o*r,S=i*i*c+s,I=o*i*c+n*r,R=n*o*c+i*r,N=i*o*c-n*r,w=o*o*c+s;return this.m00=l*A+f*T+p*C,this.m01=m*A+h*T+g*C,this.m02=u*A+d*T+x*C,this.m03=_*A+v*T+y*C,this.m04=l*E+f*S+p*I,this.m05=m*E+h*S+g*I,this.m06=u*E+d*S+x*I,this.m07=_*E+v*S+y*I,this.m08=l*R+f*N+p*w,this.m09=m*R+h*N+g*w,this.m10=u*R+d*N+x*w,this.m11=_*R+v*N+y*w,this},n.getTranslation=function(e){return e.x=this.m12,e.y=this.m13,e.z=this.m14,e},n.getScale=function(e){var t=Un.m00=this.m00,n=Un.m01=this.m01,i=Un.m02=this.m02,o=Un.m03=this.m04,a=Un.m04=this.m05,r=Un.m05=this.m06,s=Un.m06=this.m08,c=Un.m07=this.m09,l=Un.m08=this.m10;return e.x=Math.sqrt(t*t+n*n+i*i),e.y=Math.sqrt(o*o+a*a+r*r),e.z=Math.sqrt(s*s+c*c+l*l),Sn.determinant(Un)<0&&(e.x*=-1),e},n.getRotation=function(e){var t=this.m00+this.m05+this.m10,n=0;return t>0?(n=2*Math.sqrt(t+1),e.w=.25*n,e.x=(this.m06-this.m09)/n,e.y=(this.m08-this.m02)/n,e.z=(this.m01-this.m04)/n):this.m00>this.m05&&this.m00>this.m10?(n=2*Math.sqrt(1+this.m00-this.m05-this.m10),e.w=(this.m06-this.m09)/n,e.x=.25*n,e.y=(this.m01+this.m04)/n,e.z=(this.m08+this.m02)/n):this.m05>this.m10?(n=2*Math.sqrt(1+this.m05-this.m00-this.m10),e.w=(this.m08-this.m02)/n,e.x=(this.m01+this.m04)/n,e.y=.25*n,e.z=(this.m06+this.m09)/n):(n=2*Math.sqrt(1+this.m10-this.m00-this.m05),e.w=(this.m01-this.m04)/n,e.x=(this.m08+this.m02)/n,e.y=(this.m06+this.m09)/n,e.z=.25*n),e},n.fromRTS=function(e,t,n){var i=e.x,o=e.y,a=e.z,r=e.w,s=i+i,c=o+o,l=a+a,m=i*s,u=i*c,_=i*l,f=o*c,h=o*l,d=a*l,v=r*s,p=r*c,g=r*l,x=n.x,y=n.y,A=n.z;return this.m00=(1-(f+d))*x,this.m01=(u+g)*x,this.m02=(_-p)*x,this.m03=0,this.m04=(u-g)*y,this.m05=(1-(m+d))*y,this.m06=(h+v)*y,this.m07=0,this.m08=(_+p)*A,this.m09=(h-v)*A,this.m10=(1-(m+f))*A,this.m11=0,this.m12=t.x,this.m13=t.y,this.m14=t.z,this.m15=1,this},n.fromQuat=function(e){var t=e.x,n=e.y,i=e.z,o=e.w,a=t+t,r=n+n,s=i+i,c=t*a,l=n*a,m=n*r,u=i*a,_=i*r,f=i*s,h=o*a,d=o*r,v=o*s;return this.m00=1-m-f,this.m01=l+v,this.m02=u-d,this.m03=0,this.m04=l-v,this.m05=1-c-f,this.m06=_+h,this.m07=0,this.m08=u+d,this.m09=_-h,this.m10=1-c-m,this.m11=0,this.m12=0,this.m13=0,this.m14=0,this.m15=1,this},t}(gt));Ln.IDENTITY=Object.freeze(new Ln);var Fn=new An,Un=new Sn;function Bn(e,t,n,i,o,a,r,s,c,l,m,u,_,f,h,d){return new Ln(e,t,n,i,o,a,r,s,c,l,m,u,_,f,h,d)}rn.fastDefine("cc.Mat4",Ln,{m00:1,m01:0,m02:0,m03:0,m04:0,m05:1,m06:0,m07:0,m08:0,m09:0,m10:1,m11:0,m12:0,m13:0,m14:0,m15:1}),r.Mat4=Ln,r.mat4=Bn;var Gn=e("b0",function(e){function t(t,n){var i;return i=e.call(this)||this,t&&"object"==typeof t?(i.x=t.x,i.y=t.y):(i.x=t||0,i.y=n||0),i}J(t,e),t.clone=function(e){return new t(e.x,e.y)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e},t.set=function(e,t,n){return e.x=t,e.y=n,e},t.add=function(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e},t.subtract=function(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e},t.multiply=function(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e},t.divide=function(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e},t.ceil=function(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e},t.floor=function(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e},t.min=function(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e},t.max=function(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e},t.round=function(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e},t.distance=function(e,t){var n=t.x-e.x,i=t.y-e.y;return Math.sqrt(n*n+i*i)},t.squaredDistance=function(e,t){var n=t.x-e.x,i=t.y-e.y;return n*n+i*i},t.len=function(e){var t=e.x,n=e.y;return Math.sqrt(t*t+n*n)},t.lengthSqr=function(e){var t=e.x,n=e.y;return t*t+n*n},t.negate=function(e,t){return e.x=-t.x,e.y=-t.y,e},t.inverse=function(e,t){return e.x=1/t.x,e.y=1/t.y,e},t.inverseSafe=function(e,t){var n=t.x,i=t.y;return Math.abs(n)<un?e.x=0:e.x=1/n,Math.abs(i)<un?e.y=0:e.y=1/i,e},t.normalize=function(e,t){var n=t.x,i=t.y,o=n*n+i*i;return o>0&&(o=1/Math.sqrt(o),e.x=n*o,e.y=i*o),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y},t.cross=function(e,t,n){return e.x=e.y=0,e.z=t.x*n.y-t.y*n.x,e},t.lerp=function(e,t,n,i){var o=t.x,a=t.y;return e.x=o+i*(n.x-o),e.y=a+i*(n.y-a),e},t.random=function(e,t){t=t||1;var n=2*hn()*Math.PI;return e.x=Math.cos(n)*t,e.y=Math.sin(n)*t,e},t.transformMat3=function(e,t,n){var i=t.x,o=t.y;return e.x=n.m00*i+n.m03*o+n.m06,e.y=n.m01*i+n.m04*o+n.m07,e},t.transformMat4=function(e,t,n){var i=t.x,o=t.y;return e.x=n.m00*i+n.m04*o+n.m12,e.y=n.m01*i+n.m05*o+n.m13,e},t.str=function(e){return"Vec2("+e.x+", "+e.y+")"},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y},t.equals=function(e,t,n){return void 0===n&&(n=un),Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))},t.angle=function(e,n){t.normalize(Vn,e),t.normalize(Hn,n);var i=t.dot(Vn,Hn);return i>1?0:i<-1?Math.PI:Math.acos(i)};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y)},n.set=function(e,t){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y):(this.x=e||0,this.y=t||0),this},n.equals=function(e,t){return void 0===t&&(t=un),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))},n.equals2f=function(e,t,n){return void 0===n&&(n=un),Math.abs(this.x-e)<=n*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=n*Math.max(1,Math.abs(this.y),Math.abs(t))},n.strictEquals=function(e){return e&&this.x===e.x&&this.y===e.y},n.strictEquals2f=function(e,t){return this.x===e&&this.y===t},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+")"},n.lerp=function(e,t){var n=this.x,i=this.y;return this.x=n+t*(e.x-n),this.y=i+t*(e.y-i),this},n.clampf=function(e,t){return this.x=_n(this.x,e.x,t.x),this.y=_n(this.y,e.y,t.y),this},n.add=function(e){return this.x+=e.x,this.y+=e.y,this},n.add2f=function(e,t){return this.x+=e,this.y+=t,this},n.subtract=function(e){return this.x-=e.x,this.y-=e.y,this},n.subtract2f=function(e,t){return this.x-=e,this.y-=t,this},n.multiplyScalar=function(e){return"object"==typeof e&&console.warn("should use Vec2.multiply for vector * vector operation"),this.x*=e,this.y*=e,this},n.multiply=function(e){return"object"!=typeof e&&console.warn("should use Vec2.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this},n.multiply2f=function(e,t){return this.x*=e,this.y*=t,this},n.divide=function(e){return this.x/=e.x,this.y/=e.y,this},n.divide2f=function(e,t){return this.x/=e,this.y/=t,this},n.negative=function(){return this.x=-this.x,this.y=-this.y,this},n.dot=function(e){return this.x*e.x+this.y*e.y},n.cross=function(e){return this.x*e.y-this.y*e.x},n.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},n.lengthSqr=function(){return this.x*this.x+this.y*this.y},n.normalize=function(){var e=this.x,t=this.y,n=e*e+t*t;return n>0&&(n=1/Math.sqrt(n),this.x*=n,this.y*=n),this},n.angle=function(e){var t=this.lengthSqr(),n=e.lengthSqr();if(0===t||0===n)return console.warn("Can't get angle between zero vector"),0;var i=this.dot(e)/Math.sqrt(t*n);return i=_n(i,-1,1),Math.acos(i)},n.signAngle=function(e){var t=this.angle(e);return this.cross(e)<0?-t:t},n.rotate=function(e){var t=this.x,n=this.y,i=Math.sin(e),o=Math.cos(e);return this.x=o*t-i*n,this.y=i*t+o*n,this},n.project=function(e){var t=this.dot(e)/e.dot(e);return this.x=e.x*t,this.y=e.y*t,this},n.transformMat4=function(e){var t=this.x,n=this.y;return this.x=e.m00*t+e.m04*n+e.m12,this.y=e.m01*t+e.m05*n+e.m13,this},t}(gt));Gn.ZERO=Object.freeze(new Gn(0,0)),Gn.ONE=Object.freeze(new Gn(1,1)),Gn.NEG_ONE=Object.freeze(new Gn(-1,-1)),Gn.UNIT_X=Object.freeze(new Gn(1,0)),Gn.UNIT_Y=Object.freeze(new Gn(0,1));var Vn=new Gn,Hn=new Gn;function jn(e,t){return new Gn(e,t)}rn.fastDefine("cc.Vec2",Gn,{x:0,y:0}),r.Vec2=Gn,r.v2=jn;var qn=e("b4",function(e){function t(t,n,i,o){var a;return a=e.call(this)||this,t&&"object"==typeof t?(a.x=t.x,a.y=t.y,a.z=t.z,a.w=t.w):(a.x=t||0,a.y=n||0,a.z=i||0,a.w=o||0),a}J(t,e),t.clone=function(e){return new t(e.x,e.y,e.z,e.w)},t.copy=function(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e},t.set=function(e,t,n,i,o){return e.x=t,e.y=n,e.z=i,e.w=o,e},t.add=function(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e.z=t.z+n.z,e.w=t.w+n.w,e},t.subtract=function(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e.z=t.z-n.z,e.w=t.w-n.w,e},t.multiply=function(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e.z=t.z*n.z,e.w=t.w*n.w,e},t.divide=function(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e.z=t.z/n.z,e.w=t.w/n.w,e},t.ceil=function(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e.z=Math.ceil(t.z),e.w=Math.ceil(t.w),e},t.floor=function(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e.z=Math.floor(t.z),e.w=Math.floor(t.w),e},t.min=function(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e.z=Math.min(t.z,n.z),e.w=Math.min(t.w,n.w),e},t.max=function(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e.z=Math.max(t.z,n.z),e.w=Math.max(t.w,n.w),e},t.round=function(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e.z=Math.round(t.z),e.w=Math.round(t.w),e},t.multiplyScalar=function(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n,e},t.scaleAndAdd=function(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e.w=t.w+n.w*i,e},t.distance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z,a=t.w-e.w;return Math.sqrt(n*n+i*i+o*o+a*a)},t.squaredDistance=function(e,t){var n=t.x-e.x,i=t.y-e.y,o=t.z-e.z,a=t.w-e.w;return n*n+i*i+o*o+a*a},t.len=function(e){var t=e.x,n=e.y,i=e.z,o=e.w;return Math.sqrt(t*t+n*n+i*i+o*o)},t.lengthSqr=function(e){var t=e.x,n=e.y,i=e.z,o=e.w;return t*t+n*n+i*i+o*o},t.negate=function(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e.w=-t.w,e},t.inverse=function(e,t){return e.x=1/t.x,e.y=1/t.y,e.z=1/t.z,e.w=1/t.w,e},t.inverseSafe=function(e,t){var n=t.x,i=t.y,o=t.z,a=t.w;return Math.abs(n)<un?e.x=0:e.x=1/n,Math.abs(i)<un?e.y=0:e.y=1/i,Math.abs(o)<un?e.z=0:e.z=1/o,Math.abs(a)<un?e.w=0:e.w=1/a,e},t.normalize=function(e,t){var n=t.x,i=t.y,o=t.z,a=t.w,r=n*n+i*i+o*o+a*a;return r>0&&(r=1/Math.sqrt(r),e.x=n*r,e.y=i*r,e.z=o*r,e.w=a*r),e},t.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w},t.lerp=function(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e.w=t.w+i*(n.w-t.w),e},t.random=function(e,t){t=t||1;var n=2*hn()*Math.PI,i=2*hn()-1,o=Math.sqrt(1-i*i);return e.x=o*Math.cos(n)*t,e.y=o*Math.sin(n)*t,e.z=i*t,e.w=0,e},t.transformMat4=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=t.w;return e.x=n.m00*i+n.m04*o+n.m08*a+n.m12*r,e.y=n.m01*i+n.m05*o+n.m09*a+n.m13*r,e.z=n.m02*i+n.m06*o+n.m10*a+n.m14*r,e.w=n.m03*i+n.m07*o+n.m11*a+n.m15*r,e},t.transformAffine=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=t.w;return e.x=n.m00*i+n.m01*o+n.m02*a+n.m03*r,e.y=n.m04*i+n.m05*o+n.m06*a+n.m07*r,e.x=n.m08*i+n.m09*o+n.m10*a+n.m11*r,e.w=t.w,e},t.transformQuat=function(e,t,n){var i=t.x,o=t.y,a=t.z,r=n.x,s=n.y,c=n.z,l=n.w,m=l*i+s*a-c*o,u=l*o+c*i-r*a,_=l*a+r*o-s*i,f=-r*i-s*o-c*a;return e.x=m*l+f*-r+u*-c-_*-s,e.y=u*l+f*-s+_*-r-m*-c,e.z=_*l+f*-c+m*-s-u*-r,e.w=t.w,e},t.toArray=function(e,t,n){return void 0===n&&(n=0),e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e[n+3]=t.w,e},t.fromArray=function(e,t,n){return void 0===n&&(n=0),e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e.w=t[n+3],e},t.strictEquals=function(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w},t.equals=function(e,t,n){return void 0===n&&(n=un),Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))&&Math.abs(e.z-t.z)<=n*Math.max(1,Math.abs(e.z),Math.abs(t.z))&&Math.abs(e.w-t.w)<=n*Math.max(1,Math.abs(e.w),Math.abs(t.w))};var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.z,this.w)},n.set=function(e,t,n,i){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w):(this.x=e||0,this.y=t||0,this.z=n||0,this.w=i||0),this},n.equals=function(e,t){return void 0===t&&(t=un),Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))&&Math.abs(this.z-e.z)<=t*Math.max(1,Math.abs(this.z),Math.abs(e.z))&&Math.abs(this.w-e.w)<=t*Math.max(1,Math.abs(this.w),Math.abs(e.w))},n.equals4f=function(e,t,n,i,o){return void 0===o&&(o=un),Math.abs(this.x-e)<=o*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=o*Math.max(1,Math.abs(this.y),Math.abs(t))&&Math.abs(this.z-n)<=o*Math.max(1,Math.abs(this.z),Math.abs(n))&&Math.abs(this.w-i)<=o*Math.max(1,Math.abs(this.w),Math.abs(i))},n.strictEquals=function(e){return this.x===e.x&&this.y===e.y&&this.z===e.z&&this.w===e.w},n.strictEquals4f=function(e,t,n,i){return this.x===e&&this.y===t&&this.z===n&&this.w===i},n.lerp=function(e,t){var n=this.x,i=this.y,o=this.z,a=this.w;return this.x=n+t*(e.x-n),this.y=i+t*(e.y-i),this.z=o+t*(e.z-o),this.w=a+t*(e.w-a),this},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+", "+this.z.toFixed(2)+", "+this.w.toFixed(2)+")"},n.clampf=function(e,t){return this.x=_n(this.x,e.x,t.x),this.y=_n(this.y,e.y,t.y),this.z=_n(this.z,e.z,t.z),this.w=_n(this.w,e.w,t.w),this},n.add=function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this},n.add4f=function(e,t,n,i){return this.x+=e,this.y+=t,this.z+=n,this.w+=i,this},n.subtract=function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this},n.subtract4f=function(e,t,n,i){return this.x-=e,this.y-=t,this.z-=n,this.w-=i,this},n.multiplyScalar=function(e){return"object"==typeof e&&console.warn("should use Vec4.multiply for vector * vector operation"),this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},n.multiply=function(e){return"object"!=typeof e&&console.warn("should use Vec4.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this},n.multiply4f=function(e,t,n,i){return this.x*=e,this.y*=t,this.z*=n,this.w*=i,this},n.divide=function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this},n.divide4f=function(e,t,n,i){return this.x/=e,this.y/=t,this.z/=n,this.w/=i,this},n.negative=function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},n.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},n.cross=function(e){var t=this.x,n=this.y,i=this.z,o=e.x,a=e.y,r=e.z;return this.x=n*r-i*a,this.y=i*o-t*r,this.z=t*a-n*o,this},n.length=function(){var e=this.x,t=this.y,n=this.z,i=this.w;return Math.sqrt(e*e+t*t+n*n+i*i)},n.lengthSqr=function(){var e=this.x,t=this.y,n=this.z,i=this.w;return e*e+t*t+n*n+i*i},n.normalize=function(){var e=this.x,t=this.y,n=this.z,i=this.w,o=e*e+t*t+n*n+i*i;return o>0&&(o=1/Math.sqrt(o),this.x=e*o,this.y=t*o,this.z=n*o,this.w=i*o),this},n.transformMat4=function(e){var t=this.x,n=this.y,i=this.z,o=this.w;return this.x=e.m00*t+e.m04*n+e.m08*i+e.m12*o,this.y=e.m01*t+e.m05*n+e.m09*i+e.m13*o,this.z=e.m02*t+e.m06*n+e.m10*i+e.m14*o,this.w=e.m03*t+e.m07*n+e.m11*i+e.m15*o,this},t}(gt));function kn(e,t,n,i){return new qn(e,t,n,i)}qn.ZERO=Object.freeze(new qn(0,0,0,0)),qn.ONE=Object.freeze(new qn(1,1,1,1)),qn.NEG_ONE=Object.freeze(new qn(-1,-1,-1,-1)),rn.fastDefine("cc.Vec4",qn,{x:0,y:0,z:0,w:0}),r.Vec4=qn,r.v4=kn,ue(Gn,"Vec2",[{name:"sub",newName:"subtract",target:Gn,targetName:"Vec2"},{name:"mul",newName:"multiply",target:Gn,targetName:"Vec2"},{name:"div",newName:"divide",target:Gn,targetName:"Vec2"},{name:"dist",newName:"distance",target:Gn,targetName:"Vec2"},{name:"sqrDist",newName:"squaredDistance",target:Gn,targetName:"Vec2"},{name:"mag",newName:"len",target:Gn,targetName:"Vec2"},{name:"sqrMag",newName:"lengthSqr",target:Gn,targetName:"Vec2"},{name:"scale",newName:"multiplyScalar",target:Gn,targetName:"Vec2"},{name:"exactEquals",newName:"strictEquals",target:Gn,targetName:"Vec2"}]),ue(Gn.prototype,"Vec2",[{name:"mag",newName:"length",target:Gn.prototype,targetName:"Vec2"},{name:"magSqr",newName:"lengthSqr",target:Gn.prototype,targetName:"Vec2"},{name:"scale",newName:"multiplyScalar",target:Gn.prototype,targetName:"Vec2"},{name:"exactEquals",newName:"strictEquals",target:Gn.prototype,targetName:"Vec2"}]),ue(An,"Vec3",[{name:"sub",newName:"subtract",target:An,targetName:"Vec3"},{name:"mul",newName:"multiply",target:An,targetName:"Vec3"},{name:"div",newName:"divide",target:An,targetName:"Vec3"},{name:"dist",newName:"distance",target:An,targetName:"Vec3"},{name:"sqrDist",newName:"squaredDistance",target:An,targetName:"Vec3"},{name:"mag",newName:"len",target:An,targetName:"Vec3"},{name:"sqrMag",newName:"lengthSqr",target:An,targetName:"Vec3"},{name:"scale",newName:"multiplyScalar",target:An,targetName:"Vec3"},{name:"exactEquals",newName:"strictEquals",target:An,targetName:"Vec3"}]),ue(An.prototype,"Vec3",[{name:"mag",newName:"length",target:An.prototype,targetName:"Vec3"},{name:"magSqr",newName:"lengthSqr",target:An.prototype,targetName:"Vec3"},{name:"scale",newName:"multiplyScalar",target:An.prototype,targetName:"Vec3"},{name:"exactEquals",newName:"strictEquals",target:An.prototype,targetName:"Vec3"}]),ue(qn,"Vec4",[{name:"sub",newName:"subtract",target:qn,targetName:"Vec4"},{name:"mul",newName:"multiply",target:qn,targetName:"Vec4"},{name:"div",newName:"divide",target:qn,targetName:"Vec4"},{name:"dist",newName:"distance",target:qn,targetName:"Vec4"},{name:"sqrDist",newName:"squaredDistance",target:qn,targetName:"Vec4"},{name:"mag",newName:"len",target:qn,targetName:"Vec4"},{name:"sqrMag",newName:"lengthSqr",target:qn,targetName:"Vec4"},{name:"scale",newName:"multiplyScalar",target:qn,targetName:"Vec4"},{name:"exactEquals",newName:"strictEquals",target:qn,targetName:"Vec4"}]),ue(qn.prototype,"Vec4",[{name:"mag",newName:"length",target:qn.prototype,targetName:"Vec4"},{name:"magSqr",newName:"lengthSqr",target:qn.prototype,targetName:"Vec4"},{name:"scale",newName:"multiplyScalar",target:qn.prototype,targetName:"Vec4"},{name:"exactEquals",newName:"strictEquals",target:qn.prototype,targetName:"Vec4"}]),ue(Nn,"Quat",[{name:"mag",newName:"len",target:Nn,targetName:"Quat"},{name:"mul",newName:"multiply",target:Nn,targetName:"Quat"},{name:"sqrMag",newName:"lengthSqr",target:Nn,targetName:"Quat"},{name:"scale",newName:"multiplyScalar",target:Nn,targetName:"Quat"},{name:"exactEquals",newName:"strictEquals",target:Nn,targetName:"Quat"}]),ue(Nn.prototype,"Quat",[{name:"scale",newName:"multiplyScalar",target:Nn.prototype,targetName:"Quat"},{name:"exactEquals",newName:"strictEquals",target:Nn.prototype,targetName:"Quat"}]),ue(xn,"Color",[{name:"sub",newName:"subtract",target:xn,targetName:"Color"},{name:"mul",newName:"multiply",target:xn,targetName:"Color"},{name:"div",newName:"divide",target:xn,targetName:"Color"},{name:"exactEquals",newName:"strictEquals",target:xn,targetName:"Color"},{name:"fromHex",newName:"fromHEX",customFunction:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var i=t[1].toString(16);return r.Color.fromHEX(t[0],i)}}]),ue(Sn,"Mat3",[{name:"sub",newName:"subtract",target:Sn,targetName:"Mat3"},{name:"mul",newName:"multiply",target:Sn,targetName:"Mat3"},{name:"exactEquals",newName:"strictEquals",target:Sn,targetName:"Mat3"},{name:"transfrom",newName:"transform",target:Sn,targetName:"Mat3"}]),ue(Sn.prototype,"Mat3",[{name:"sub",newName:"subtract",target:Sn.prototype,targetName:"Mat3"},{name:"mul",newName:"multiply",target:Sn.prototype,targetName:"Mat3"},{name:"mulScalar",newName:"multiplyScalar",target:Sn.prototype,targetName:"Mat3"},{name:"exactEquals",newName:"strictEquals",target:Sn.prototype,targetName:"Mat3"}]),ue(Ln,"Mat4",[{name:"sub",newName:"subtract",target:Ln,targetName:"Mat4"},{name:"mul",newName:"multiply",target:Ln,targetName:"Mat4"},{name:"exactEquals",newName:"strictEquals",target:Ln,targetName:"Mat4"}]),ue(Ln.prototype,"Mat4",[{name:"sub",newName:"subtract",target:Ln.prototype,targetName:"Mat4"},{name:"mul",newName:"multiply",target:Ln.prototype,targetName:"Mat4"},{name:"mulScalar",newName:"multiplyScalar",target:Ln.prototype,targetName:"Mat4"},{name:"exactEquals",newName:"strictEquals",target:Ln.prototype,targetName:"Mat4"}]);var Wn=e("bb",function(){function e(e,t,n,i,o,a){void 0===e&&(e=1),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),void 0===o&&(o=0),void 0===a&&(a=0),this.a=e,this.b=t,this.c=n,this.d=i,this.tx=o,this.ty=a}return e.identity=function(){return new e},e.clone=function(t){return new e(t.a,t.b,t.c,t.d,t.tx,t.ty)},e.concat=function(e,t,n){var i=t.a,o=t.b,a=t.c,r=t.d,s=t.tx,c=t.ty;e.a=i*n.a+o*n.c,e.b=i*n.b+o*n.d,e.c=a*n.a+r*n.c,e.d=a*n.b+r*n.d,e.tx=s*n.a+c*n.c+n.tx,e.ty=s*n.b+c*n.d+n.ty},e.invert=function(e,t){var n=1/(t.a*t.d-t.b*t.c);e.a=n*t.d,e.b=-n*t.b,e.c=-n*t.c,e.d=n*t.a,e.tx=n*(t.c*t.ty-t.d*t.tx),e.ty=n*(t.b*t.tx-t.a*t.ty)},e.fromMat4=function(e,t){e.a=t.m00,e.b=t.m01,e.c=t.m04,e.d=t.m05,e.tx=t.m12,e.ty=t.m13},e.transformVec2=function(e,t,n,i){var o,a;void 0===i?(i=n,o=t.x,a=t.y):(o=t,a=n),e.x=i.a*o+i.c*a+i.tx,e.y=i.b*o+i.d*a+i.ty},e.transformSize=function(e,t,n){e.width=n.a*t.width+n.c*t.height,e.height=n.b*t.width+n.d*t.height},e.transformRect=function(e,t,n){var i=t.x+t.width,o=t.y+t.height,a=n.a*t.x+n.c*t.y+n.tx,r=n.b*t.x+n.d*t.y+n.ty,s=n.a*i+n.c*t.y+n.tx,c=n.b*i+n.d*t.y+n.ty,l=n.a*t.x+n.c*o+n.tx,m=n.b*t.x+n.d*o+n.ty,u=n.a*i+n.c*o+n.tx,_=n.b*i+n.d*o+n.ty,f=Math.min(a,s,l,u),h=Math.max(a,s,l,u),d=Math.min(r,c,m,_),v=Math.max(r,c,m,_);e.x=f,e.y=d,e.width=h-f,e.height=v-d},e.transformObb=function(e,t,n,i,o,a){var r=a.a*o.x+a.c*o.y+a.tx,s=a.b*o.x+a.d*o.y+a.ty,c=a.a*o.width,l=a.b*o.width,m=a.c*o.height,u=a.d*o.height;t.x=r,t.y=s,n.x=c+r,n.y=l+s,e.x=m+r,e.y=u+s,i.x=c+m+r,i.y=l+u+s},e}());r.AffineTransform=Wn;var Yn=e("bc",function(e){function t(t,n){var i;return i=e.call(this)||this,t&&"object"==typeof t?(i.width=t.width,i.height=t.height):(i.width=t||0,i.height=n||0),i}J(t,e),t.lerp=function(e,t,n,i){return e.width=t.width+(n.width-t.width)*i,e.height=t.height+(n.height-t.height)*i,e},X(t,[{key:"x",set:function(e){this.width=e},get:function(){return this.width}},{key:"y",set:function(e){this.height=e},get:function(){return this.height}}]);var n=t.prototype;return n.clone=function(){return new t(this.width,this.height)},n.set=function(e,t){return e&&"object"==typeof e?(this.height=e.height,this.width=e.width):(this.width=e||0,this.height=t||0),this},n.equals=function(e){return this.width===e.width&&this.height===e.height},n.lerp=function(e,t){return this.width+=(e.width-this.width)*t,this.height+=(e.height-this.height)*t,this},n.toString=function(){return"("+this.width.toFixed(2)+", "+this.height.toFixed(2)+")"},t}(gt));function Xn(e,t){return void 0===e&&(e=0),void 0===t&&(t=0),new Yn(e,t)}Yn.ZERO=Object.freeze(new Yn(0,0)),Yn.ONE=Object.freeze(new Yn(1,1)),rn.fastDefine("cc.Size",Yn,{width:0,height:0}),r.size=Xn,r.Size=Yn;var Kn=e("be",function(e){function t(t,n,i,o){var a;return(a=e.call(this)||this).T=void 0,t&&"object"==typeof t?(a.y=t.y,a.width=t.width,a.height=t.height,a.x=t.x):(a.x=t||0,a.y=n||0,a.width=i||0,a.height=o||0),a}J(t,e),t.fromMinMax=function(e,t,n){var i=Math.min(t.x,n.x),o=Math.min(t.y,n.y),a=Math.max(t.x,n.x),r=Math.max(t.y,n.y);return e.x=i,e.y=o,e.width=a-i,e.height=r-o,e},t.lerp=function(e,t,n,i){var o=t.x,a=t.y,r=t.width,s=t.height;return e.x=o+(n.x-o)*i,e.y=a+(n.y-a)*i,e.width=r+(n.width-r)*i,e.height=s+(n.height-s)*i,e},t.intersection=function(e,t,n){var i=t.x,o=t.y,a=t.x+t.width,r=t.y+t.height,s=n.x,c=n.y,l=n.x+n.width,m=n.y+n.height;return e.x=Math.max(i,s),e.y=Math.max(o,c),e.width=Math.min(a,l)-e.x,e.height=Math.min(r,m)-e.y,e},t.union=function(e,t,n){var i=t.x,o=t.y,a=t.width,r=t.height,s=n.x,c=n.y,l=n.width,m=n.height;return e.x=Math.min(i,s),e.y=Math.min(o,c),e.width=Math.max(i+a,s+l)-e.x,e.height=Math.max(o+r,c+m)-e.y,e},X(t,[{key:"xMin",get:function(){return this.x},set:function(e){this.width+=this.x-e,this.x=e}},{key:"yMin",get:function(){return this.y},set:function(e){this.height+=this.y-e,this.y=e}},{key:"xMax",get:function(){return this.x+this.width},set:function(e){this.width=e-this.x}},{key:"yMax",get:function(){return this.y+this.height},set:function(e){this.height=e-this.y}},{key:"center",get:function(){return new Gn(this.x+.5*this.width,this.y+.5*this.height)},set:function(e){this.x=e.x-.5*this.width,this.y=e.y-.5*this.height}},{key:"origin",get:function(){return new Gn(this.x,this.y)},set:function(e){this.x=e.x,this.y=e.y}},{key:"size",get:function(){return new Yn(this.width,this.height)},set:function(e){this.width=e.width,this.height=e.height}},{key:"z",set:function(e){this.width=e},get:function(){return this.width}},{key:"w",set:function(e){this.height=e},get:function(){return this.height}}]);var n=t.prototype;return n.clone=function(){return new t(this.x,this.y,this.width,this.height)},n.set=function(e,t,n,i){return e&&"object"==typeof e?(this.y=e.y,this.width=e.width,this.height=e.height,this.x=e.x):(this.x=e||0,this.y=t||0,this.width=n||0,this.height=i||0),this},n.equals=function(e){return this.x===e.x&&this.y===e.y&&this.width===e.width&&this.height===e.height},n.lerp=function(e,t){var n=this.x,i=this.y,o=this.width,a=this.height;return this.x=n+(e.x-n)*t,this.y=i+(e.y-i)*t,this.width=o+(e.width-o)*t,this.height=a+(e.height-a)*t,this},n.toString=function(){return"("+this.x.toFixed(2)+", "+this.y.toFixed(2)+", "+this.width.toFixed(2)+", "+this.height.toFixed(2)+")"},n.intersects=function(e){var t=this.x+this.width,n=this.y+this.height,i=e.x+e.width,o=e.y+e.height;return!(t<e.x||i<this.x||n<e.y||o<this.y)},n.contains=function(e){return this.x<=e.x&&this.x+this.width>=e.x&&this.y<=e.y&&this.y+this.height>=e.y},n.containsRect=function(e){return this.x<=e.x&&this.x+this.width>=e.x+e.width&&this.y<=e.y&&this.y+this.height>=e.y+e.height},n.transformMat4=function(e){var t=this.x,n=this.y,i=t+this.width,o=n+this.height,a=e.m00*t+e.m04*n+e.m12,r=e.m01*t+e.m05*n+e.m13,s=e.m00*i+e.m04*n+e.m12,c=e.m01*i+e.m05*n+e.m13,l=e.m00*t+e.m04*o+e.m12,m=e.m01*t+e.m05*o+e.m13,u=e.m00*i+e.m04*o+e.m12,_=e.m01*i+e.m05*o+e.m13,f=Math.min(a,s,l,u),h=Math.max(a,s,l,u),d=Math.min(r,c,m,_),v=Math.max(r,c,m,_);return this.x=f,this.y=d,this.width=h-f,this.height=v-d,this},n.transformMat4ToPoints=function(e,t,n,i,o){var a=this.x,r=this.y,s=a+this.width,c=r+this.height;t.x=e.m00*a+e.m04*r+e.m12,t.y=e.m01*a+e.m05*r+e.m13,o.x=e.m00*s+e.m04*r+e.m12,o.y=e.m01*s+e.m05*r+e.m13,n.x=e.m00*a+e.m04*c+e.m12,n.y=e.m01*a+e.m05*c+e.m13,i.x=e.m00*s+e.m04*c+e.m12,i.y=e.m01*s+e.m05*c+e.m13},t}(gt));function Jn(e,t,n,i){return void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),new Kn(e,t,n,i)}rn.fastDefine("cc.Rect",Kn,{x:0,y:0,width:0,height:0}),r.Rect=Kn,r.rect=Jn;var Qn,Zn,$n,ei,ti,ni,ii,oi,ai,ri,si,ci,li,mi,ui,_i,fi,hi,di,vi,pi,gi,xi,yi,Ai=function(){function e(e,t,n){this._arrayBuffers=[],this._chunkSize=void 0,this._chunkSize=n*(1<<t)}return e.prototype.allocateNewChunk=function(){return new ArrayBuffer(this._chunkSize)},e}(),Ti=function(){},Ci=function(){function e(){}var t=e.prototype;return t.alloc=function(e,t){return new ArrayBuffer(t)},t.free=function(){},e}();!function(e){e[e.UINT32=0]="UINT32",e[e.FLOAT32=1]="FLOAT32",e[e.NEVER=2]="NEVER"}(yi||(yi={}));var Ei,Si=function(){function e(e,t,n,i){void 0===i&&(i=8),this._dataType=void 0,this._elementCount=void 0,this._entryBits=void 0,this._stride=void 0,this._entriesPerChunk=void 0,this._entryMask=void 0,this._chunkMask=void 0,this._poolFlag=void 0,this._arrayBuffers=[],this._freelists=[],this._uint32BufferViews=[],this._float32BufferViews=[],this._hasUint32=!1,this._hasFloat32=!1,this._nativePool=void 0,this._elementCount=n.COUNT,this._entryBits=i,this._dataType=t,this._stride=4*this._elementCount,this._entriesPerChunk=1<<i,this._entryMask=this._entriesPerChunk-1,this._poolFlag=1<<30,this._chunkMask=~(this._entryMask|this._poolFlag),this._nativePool=new Ai(e,i,this._stride);var o=yi.NEVER,a=!1,r=!1;for(var s in t){if(a=this._hasFloat32,(r=this._hasUint32)&&a)break;o=t[s],a||o!==yi.FLOAT32?r||o!==yi.UINT32||(this._hasUint32=!0):this._hasFloat32=!0}}var t=e.prototype;return t.alloc=function(){for(var e=0;e<this._freelists.length;e++){var t=this._freelists[e];if(t.length){var n=t[t.length-1];return t.length--,(e<<this._entryBits)+n+this._poolFlag}}for(var i=this._nativePool.allocateNewChunk(),o=[],a=[],r=[],s=this._hasFloat32,c=this._hasUint32,l=0;l<this._entriesPerChunk;l++)s&&o.push(new Float32Array(i,this._stride*l,this._elementCount)),c&&a.push(new Uint32Array(i,this._stride*l,this._elementCount)),l&&r.push(l);return this._arrayBuffers.push(i),c&&this._uint32BufferViews.push(a),s&&this._float32BufferViews.push(o),this._freelists.push(r),(e<<this._entryBits)+this._poolFlag},t.get=function(e,t){var n=(this._chunkMask&e)>>this._entryBits,i=this._entryMask&e;return(this._dataType[t]===yi.UINT32?this._uint32BufferViews:this._float32BufferViews)[n][i][t]},t.set=function(e,t,n){var i=(this._chunkMask&e)>>this._entryBits,o=this._entryMask&e;(this._dataType[t]===yi.UINT32?this._uint32BufferViews:this._float32BufferViews)[i][o][t]=n},t.setVec2=function(){},t.setVec3=function(){},t.setVec4=function(){},t.setMat4=function(){},t.free=function(e){var t=(this._chunkMask&e)>>this._entryBits,n=this._entryMask&e;(this._hasUint32?this._uint32BufferViews:this._float32BufferViews)[t][n].fill(0),this._freelists[t].push(n)},e}(),Ii=e("Z",function(){function e(e,t,n){this._ctor=void 0,this._dtor=void 0,this._indexMask=void 0,this._poolFlag=void 0,this._array=[],this._freelist=[],this._nativePool=void 0,this._ctor=t,n&&(this._dtor=n),this._poolFlag=1<<29,this._indexMask=~this._poolFlag,this._nativePool=new Ti(e,this._array)}var t=e.prototype;return t.alloc=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var i=this._freelist,o=-1;if(i.length)o=i[i.length-1],i.length--,this._array[o]=this._ctor(arguments,this._array[o]);else{o=this._array.length;var a=this._ctor(arguments);if(!a)return 0;this._array.push(a)}return o+this._poolFlag},t.get=function(e){var t=this._indexMask&e;return this._array[t]},t.free=function(e){var t=this._indexMask&e;this._dtor&&(this._array[t]=this._dtor(this._array[t])),this._freelist.push(t)},e}()),Ri=function(){function e(e){this._nativeBufferAllocator=void 0,this._buffers=new Map,this._nextBufferIdx=0,this._poolFlag=void 0,this._bufferIdxMask=void 0,this._poolFlag=1<<30,this._bufferIdxMask=~this._poolFlag,this._nativeBufferAllocator=new Ci(e)}var t=e.prototype;return t.alloc=function(e){var t=this._nextBufferIdx++,n=this._nativeBufferAllocator.alloc(t,e);return this._buffers.set(t,n),t|this._poolFlag},t.free=function(e){var t=this._bufferIdxMask&e;this._buffers.get(t)&&(this._nativeBufferAllocator.free(t),this._buffers.delete(t))},t.getBuffer=function(e){var t=this._bufferIdxMask&e;return this._buffers.get(t)||null},e}(),Ni=function(e){function t(t,n,i,o){var a;return(a=e.call(this,t)||this)._viewCtor=void 0,a._size=void 0,a._step=void 0,a._viewCtor=n,a._size=i*n.BYTES_PER_ELEMENT,a._step=o||i,a}J(t,e);var n=t.prototype;return n.alloc=function(){var e=this._nextBufferIdx++,t=this._nativeBufferAllocator.alloc(e,this._size);return this._buffers.set(e,new this._viewCtor(t)),e|this._poolFlag},n.getBuffer=function(){return null},n.assign=function(e,t,n){var i=this._bufferIdxMask&e,o=this._buffers.get(i);if(o){var a=t+1;if(a>=o.length){for(var r=o.length;a>=r;)r+=this._step;r*=this._viewCtor.BYTES_PER_ELEMENT;var s=new this._viewCtor(this._nativeBufferAllocator.alloc(i,r));s.set(o),o=s,this._buffers.set(i,o)}o[a]=n;var c=o[0];o[0]=a>c?a:c}},n.erase=function(e,t){var n=this._bufferIdxMask&e,i=this._buffers.get(n);if(i&&!(t>=i[0])){for(var o=t+1;o<i[0];++o)i[o]=i[o+1];--i[0]}},n.push=function(e,t){var n=this._bufferIdxMask&e,i=this._buffers.get(n);i&&this.assign(e,i[0],t)},n.pop=function(e){var t=this._bufferIdxMask&e,n=this._buffers.get(t);n&&0!==n[0]&&--n[0]},n.clear=function(e){var t=this._bufferIdxMask&e,n=this._buffers.get(t);n&&(n[0]=0)},n.get=function(e,t){var n=this._bufferIdxMask&e,i=this._buffers.get(n);return!i||t>=i[0]?0:i[t+1]},n.length=function(e){var t=this._bufferIdxMask&e,n=this._buffers.get(t);return n?n[0]:0},t}(Ri);!function(e){e[e.ATTRIBUTE=0]="ATTRIBUTE",e[e.DESCRIPTOR_SETS=1]="DESCRIPTOR_SETS",e[e.SHADER=2]="SHADER",e[e.INPUT_ASSEMBLER=3]="INPUT_ASSEMBLER",e[e.PIPELINE_LAYOUT=4]="PIPELINE_LAYOUT",e[e.FRAMEBUFFER=5]="FRAMEBUFFER",e[e.PASS=100]="PASS",e[e.SUB_MODEL=101]="SUB_MODEL",e[e.MODEL=102]="MODEL",e[e.SCENE=103]="SCENE",e[e.CAMERA=104]="CAMERA",e[e.NODE=105]="NODE",e[e.ROOT=106]="ROOT",e[e.AABB=107]="AABB",e[e.RENDER_WINDOW=108]="RENDER_WINDOW",e[e.FRUSTUM=109]="FRUSTUM",e[e.AMBIENT=110]="AMBIENT",e[e.FOG=111]="FOG",e[e.SKYBOX=112]="SKYBOX",e[e.SHADOW=113]="SHADOW",e[e.LIGHT=114]="LIGHT",e[e.SPHERE=115]="SPHERE",e[e.INSTANCED_ATTRIBUTE=116]="INSTANCED_ATTRIBUTE",e[e.FLAT_BUFFER=117]="FLAT_BUFFER",e[e.SUB_MESH=118]="SUB_MESH",e[e.RASTERIZER_STATE=119]="RASTERIZER_STATE",e[e.DEPTH_STENCIL_STATE=120]="DEPTH_STENCIL_STATE",e[e.BLEND_TARGET=121]="BLEND_TARGET",e[e.BLEND_STATE=122]="BLEND_STATE",e[e.BATCH_2D=123]="BATCH_2D",e[e.SUB_MODEL_ARRAY=200]="SUB_MODEL_ARRAY",e[e.MODEL_ARRAY=201]="MODEL_ARRAY",e[e.ATTRIBUTE_ARRAY=202]="ATTRIBUTE_ARRAY",e[e.FLAT_BUFFER_ARRAY=203]="FLAT_BUFFER_ARRAY",e[e.INSTANCED_BUFFER_ARRAY=204]="INSTANCED_BUFFER_ARRAY",e[e.LIGHT_ARRAY=205]="LIGHT_ARRAY",e[e.BLEND_TARGET_ARRAY=206]="BLEND_TARGET_ARRAY",e[e.BATCH_ARRAY_2D=207]="BATCH_ARRAY_2D",e[e.RAW_BUFFER=300]="RAW_BUFFER",e[e.RAW_OBJECT=400]="RAW_OBJECT"}(Ei||(Ei=e("a0",{})));var wi,bi=e("a1",0),Oi=e("a2",new Ii(Ei.SHADER,(function(e,t){return t?(t.initialize(e[1]),t):e[0].createShader(e[1])}),(function(e){return e&&e.destroy(),e}))),Pi=e("a3",new Ii(Ei.DESCRIPTOR_SETS,(function(e,t){return t?(t.initialize(e[1]),t):e[0].createDescriptorSet(e[1])}),(function(e){return e&&e.destroy(),e}))),Mi=(e("a4",new Ii(Ei.INPUT_ASSEMBLER,(function(e,t){return t?(t.initialize(e[1]),t):e[0].createInputAssembler(e[1])}),(function(e){return e&&e.destroy(),e}))),e("a5",new Ii(Ei.PIPELINE_LAYOUT,(function(e,t){return t?(t.initialize(e[1]),t):e[0].createPipelineLayout(e[1])}),(function(e){return e&&e.destroy(),e}))));e("a6",new Ii(Ei.FRAMEBUFFER,(function(e,t){return t?(t.initialize(e[1]),t):e[0].createFramebuffer(e[1])}),(function(e){return e&&e.destroy(),e}))),e("a7",new Ni(Ei.SUB_MODEL_ARRAY,Uint32Array,8,4)),e("a8",new Ni(Ei.MODEL_ARRAY,Uint32Array,32,16)),e("a9",new Ni(Ei.ATTRIBUTE_ARRAY,Uint32Array,8,4)),e("aa",new Ni(Ei.FLAT_BUFFER_ARRAY,Uint32Array,8,4)),e("ab",new Ni(Ei.LIGHT_ARRAY,Uint32Array,8,4)),e("ac",new Ni(Ei.BLEND_TARGET_ARRAY,Uint32Array,8,4)),e("ad",new Ni(Ei.BATCH_ARRAY_2D,Uint32Array,32,16)),e("ae",new Ri(Ei.RAW_BUFFER)),e("af",new Ii(Ei.RAW_OBJECT,(function(e){return e[0]||{}}),(function(){}))),function(e){e[e.PRIORITY=0]="PRIORITY",e[e.STAGE=1]="STAGE",e[e.PHASE=2]="PHASE",e[e.BATCHING_SCHEME=3]="BATCHING_SCHEME",e[e.PRIMITIVE=4]="PRIMITIVE",e[e.DYNAMIC_STATES=5]="DYNAMIC_STATES",e[e.HASH=6]="HASH",e[e.RASTERIZER_STATE=7]="RASTERIZER_STATE",e[e.DEPTH_STENCIL_STATE=8]="DEPTH_STENCIL_STATE",e[e.BLEND_STATE=9]="BLEND_STATE",e[e.DESCRIPTOR_SET=10]="DESCRIPTOR_SET",e[e.PIPELINE_LAYOUT=11]="PIPELINE_LAYOUT",e[e.COUNT=12]="COUNT"}(wi||(wi=e("ag",{})));var Di,zi=((Qn={})[wi.PRIORITY]=yi.UINT32,Qn[wi.STAGE]=yi.UINT32,Qn[wi.PHASE]=yi.UINT32,Qn[wi.BATCHING_SCHEME]=yi.UINT32,Qn[wi.PRIMITIVE]=yi.UINT32,Qn[wi.DYNAMIC_STATES]=yi.UINT32,Qn[wi.HASH]=yi.UINT32,Qn[wi.RASTERIZER_STATE]=yi.UINT32,Qn[wi.DEPTH_STENCIL_STATE]=yi.UINT32,Qn[wi.BLEND_STATE]=yi.UINT32,Qn[wi.DESCRIPTOR_SET]=yi.UINT32,Qn[wi.PIPELINE_LAYOUT]=yi.UINT32,Qn[wi.COUNT]=yi.NEVER,Qn),Li=e("ah",new Si(Ei.PASS,zi,wi));!function(e){e[e.PRIORITY=0]="PRIORITY",e[e.PASS_COUNT=1]="PASS_COUNT",e[e.PASS_0=2]="PASS_0",e[e.PASS_1=3]="PASS_1",e[e.PASS_2=4]="PASS_2",e[e.PASS_3=5]="PASS_3",e[e.SHADER_0=6]="SHADER_0",e[e.SHADER_1=7]="SHADER_1",e[e.SHADER_2=8]="SHADER_2",e[e.SHADER_3=9]="SHADER_3",e[e.PLANAR_SHADER=10]="PLANAR_SHADER",e[e.DESCRIPTOR_SET=11]="DESCRIPTOR_SET",e[e.INPUT_ASSEMBLER=12]="INPUT_ASSEMBLER",e[e.SUB_MESH=13]="SUB_MESH",e[e.COUNT=14]="COUNT"}(Di||(Di=e("ai",{})));var Fi,Ui=((Zn={})[Di.PRIORITY]=yi.UINT32,Zn[Di.PASS_COUNT]=yi.UINT32,Zn[Di.PASS_0]=yi.UINT32,Zn[Di.PASS_1]=yi.UINT32,Zn[Di.PASS_2]=yi.UINT32,Zn[Di.PASS_3]=yi.UINT32,Zn[Di.SHADER_0]=yi.UINT32,Zn[Di.SHADER_1]=yi.UINT32,Zn[Di.SHADER_2]=yi.UINT32,Zn[Di.SHADER_3]=yi.UINT32,Zn[Di.PLANAR_SHADER]=yi.UINT32,Zn[Di.DESCRIPTOR_SET]=yi.UINT32,Zn[Di.INPUT_ASSEMBLER]=yi.UINT32,Zn[Di.SUB_MESH]=yi.UINT32,Zn[Di.COUNT]=yi.NEVER,Zn);e("aj",new Si(Ei.SUB_MODEL,Ui,Di)),function(e){e[e.ENABLED=0]="ENABLED",e[e.VIS_FLAGS=1]="VIS_FLAGS",e[e.CAST_SHADOW=2]="CAST_SHADOW",e[e.RECEIVE_SHADOW=3]="RECEIVE_SHADOW",e[e.WORLD_BOUNDS=4]="WORLD_BOUNDS",e[e.NODE=5]="NODE",e[e.TRANSFORM=6]="TRANSFORM",e[e.SUB_MODEL_ARRAY=7]="SUB_MODEL_ARRAY",e[e.INSTANCED_BUFFER=8]="INSTANCED_BUFFER",e[e.INSTANCED_ATTR_ARRAY=9]="INSTANCED_ATTR_ARRAY",e[e.COUNT=10]="COUNT"}(Fi||(Fi=e("ak",{})));var Bi,Gi=(($n={})[Fi.ENABLED]=yi.UINT32,$n[Fi.VIS_FLAGS]=yi.UINT32,$n[Fi.CAST_SHADOW]=yi.UINT32,$n[Fi.RECEIVE_SHADOW]=yi.UINT32,$n[Fi.WORLD_BOUNDS]=yi.UINT32,$n[Fi.NODE]=yi.UINT32,$n[Fi.TRANSFORM]=yi.UINT32,$n[Fi.SUB_MODEL_ARRAY]=yi.UINT32,$n[Fi.INSTANCED_BUFFER]=yi.UINT32,$n[Fi.INSTANCED_ATTR_ARRAY]=yi.UINT32,$n[Fi.COUNT]=yi.NEVER,$n);e("al",new Si(Ei.MODEL,Gi,Fi)),function(e){e[e.VIS_FLAGS=0]="VIS_FLAGS",e[e.PASS_COUNT=1]="PASS_COUNT",e[e.PASS_0=2]="PASS_0",e[e.PASS_1=3]="PASS_1",e[e.PASS_2=4]="PASS_2",e[e.PASS_3=5]="PASS_3",e[e.SHADER_0=6]="SHADER_0",e[e.SHADER_1=7]="SHADER_1",e[e.SHADER_2=8]="SHADER_2",e[e.SHADER_3=9]="SHADER_3",e[e.DESCRIPTOR_SET=10]="DESCRIPTOR_SET",e[e.INPUT_ASSEMBLER=11]="INPUT_ASSEMBLER",e[e.COUNT=12]="COUNT"}(Bi||(Bi=e("am",{})));var Vi,Hi=((ei={})[Bi.VIS_FLAGS]=yi.UINT32,ei[Bi.PASS_COUNT]=yi.UINT32,ei[Bi.PASS_0]=yi.UINT32,ei[Bi.PASS_1]=yi.UINT32,ei[Bi.PASS_2]=yi.UINT32,ei[Bi.PASS_3]=yi.UINT32,ei[Bi.SHADER_0]=yi.UINT32,ei[Bi.SHADER_1]=yi.UINT32,ei[Bi.SHADER_2]=yi.UINT32,ei[Bi.SHADER_3]=yi.UINT32,ei[Bi.DESCRIPTOR_SET]=yi.UINT32,ei[Bi.INPUT_ASSEMBLER]=yi.UINT32,ei[Bi.COUNT]=yi.NEVER,ei);e("an",new Si(Ei.BATCH_2D,Hi,Bi)),function(e){e[e.CENTER=0]="CENTER",e[e.HALF_EXTENSION=3]="HALF_EXTENSION",e[e.COUNT=6]="COUNT"}(Vi||(Vi=e("ao",{})));var ji,qi=((ti={})[Vi.CENTER]=yi.FLOAT32,ti[Vi.HALF_EXTENSION]=yi.FLOAT32,ti[Vi.COUNT]=yi.NEVER,ti);e("ap",new Si(Ei.AABB,qi,Vi)),function(e){e[e.MAIN_LIGHT=0]="MAIN_LIGHT",e[e.MODEL_ARRAY=1]="MODEL_ARRAY",e[e.SPHERE_LIGHT_ARRAY=2]="SPHERE_LIGHT_ARRAY",e[e.SPOT_LIGHT_ARRAY=3]="SPOT_LIGHT_ARRAY",e[e.BATCH_ARRAY_2D=4]="BATCH_ARRAY_2D",e[e.COUNT=5]="COUNT"}(ji||(ji=e("aq",{})));var ki,Wi=((ni={})[ji.MAIN_LIGHT]=yi.UINT32,ni[ji.MODEL_ARRAY]=yi.UINT32,ni[ji.SPHERE_LIGHT_ARRAY]=yi.UINT32,ni[ji.SPOT_LIGHT_ARRAY]=yi.UINT32,ni[ji.BATCH_ARRAY_2D]=yi.UINT32,ni[ji.COUNT]=yi.NEVER,ni);e("ar",new Si(Ei.SCENE,Wi,ji)),function(e){e[e.WIDTH=0]="WIDTH",e[e.HEIGHT=1]="HEIGHT",e[e.EXPOSURE=2]="EXPOSURE",e[e.CLEAR_FLAG=3]="CLEAR_FLAG",e[e.CLEAR_DEPTH=4]="CLEAR_DEPTH",e[e.CLEAR_STENCIL=5]="CLEAR_STENCIL",e[e.VISIBILITY=6]="VISIBILITY",e[e.NODE=7]="NODE",e[e.SCENE=8]="SCENE",e[e.FRUSTUM=9]="FRUSTUM",e[e.WINDOW=10]="WINDOW",e[e.FORWARD=11]="FORWARD",e[e.POSITION=14]="POSITION",e[e.VIEW_PORT=17]="VIEW_PORT",e[e.CLEAR_COLOR=21]="CLEAR_COLOR",e[e.MAT_VIEW=25]="MAT_VIEW",e[e.MAT_VIEW_PROJ=41]="MAT_VIEW_PROJ",e[e.MAT_VIEW_PROJ_INV=57]="MAT_VIEW_PROJ_INV",e[e.MAT_PROJ=73]="MAT_PROJ",e[e.MAT_PROJ_INV=89]="MAT_PROJ_INV",e[e.COUNT=105]="COUNT"}(ki||(ki=e("as",{})));var Yi,Xi=((ii={})[ki.WIDTH]=yi.UINT32,ii[ki.HEIGHT]=yi.UINT32,ii[ki.EXPOSURE]=yi.FLOAT32,ii[ki.CLEAR_FLAG]=yi.UINT32,ii[ki.CLEAR_DEPTH]=yi.FLOAT32,ii[ki.CLEAR_STENCIL]=yi.UINT32,ii[ki.VISIBILITY]=yi.UINT32,ii[ki.NODE]=yi.UINT32,ii[ki.SCENE]=yi.UINT32,ii[ki.FRUSTUM]=yi.UINT32,ii[ki.WINDOW]=yi.UINT32,ii[ki.FORWARD]=yi.FLOAT32,ii[ki.POSITION]=yi.FLOAT32,ii[ki.VIEW_PORT]=yi.FLOAT32,ii[ki.CLEAR_COLOR]=yi.FLOAT32,ii[ki.MAT_VIEW]=yi.FLOAT32,ii[ki.MAT_VIEW_PROJ]=yi.FLOAT32,ii[ki.MAT_VIEW_PROJ_INV]=yi.FLOAT32,ii[ki.MAT_PROJ]=yi.FLOAT32,ii[ki.MAT_PROJ_INV]=yi.FLOAT32,ii[ki.COUNT]=yi.NEVER,ii);e("at",new Si(Ei.CAMERA,Xi,ki)),function(e){e[e.FLAGS_CHANGED=0]="FLAGS_CHANGED",e[e.LAYER=1]="LAYER",e[e.WORLD_SCALE=2]="WORLD_SCALE",e[e.WORLD_POSITION=5]="WORLD_POSITION",e[e.WORLD_ROTATION=8]="WORLD_ROTATION",e[e.WORLD_MATRIX=12]="WORLD_MATRIX",e[e.COUNT=28]="COUNT"}(Yi||(Yi=e("au",{})));var Ki,Ji=((oi={})[Yi.FLAGS_CHANGED]=yi.UINT32,oi[Yi.LAYER]=yi.UINT32,oi[Yi.WORLD_SCALE]=yi.FLOAT32,oi[Yi.WORLD_POSITION]=yi.FLOAT32,oi[Yi.WORLD_ROTATION]=yi.FLOAT32,oi[Yi.WORLD_MATRIX]=yi.FLOAT32,oi[Yi.COUNT]=yi.NEVER,oi);delete Yi[Yi.COUNT],Yi[Yi.COUNT=Yi.LAYER+1]="COUNT",e("av",new Si(Ei.NODE,Ji,Yi)),function(e){e[e.CUMULATIVE_TIME=0]="CUMULATIVE_TIME",e[e.FRAME_TIME=1]="FRAME_TIME",e[e.COUNT=2]="COUNT"}(Ki||(Ki=e("aw",{})));var Qi,Zi=((ai={})[Ki.CUMULATIVE_TIME]=yi.FLOAT32,ai[Ki.FRAME_TIME]=yi.FLOAT32,ai[Ki.COUNT]=yi.NEVER,ai);e("ax",new Si(Ei.ROOT,Zi,Ki,1)),function(e){e[e.HAS_ON_SCREEN_ATTACHMENTS=0]="HAS_ON_SCREEN_ATTACHMENTS",e[e.HAS_OFF_SCREEN_ATTACHMENTS=1]="HAS_OFF_SCREEN_ATTACHMENTS",e[e.FRAMEBUFFER=2]="FRAMEBUFFER",e[e.COUNT=3]="COUNT"}(Qi||(Qi=e("ay",{})));var $i,eo=((ri={})[Qi.HAS_ON_SCREEN_ATTACHMENTS]=yi.UINT32,ri[Qi.HAS_OFF_SCREEN_ATTACHMENTS]=yi.UINT32,ri[Qi.FRAMEBUFFER]=yi.UINT32,ri[Qi.COUNT]=yi.NEVER,ri);e("az",new Si(Ei.RENDER_WINDOW,eo,Qi,2)),function(e){e[e.VERTICES=0]="VERTICES",e[e.PLANES=24]="PLANES",e[e.COUNT=48]="COUNT"}($i||($i=e("aA",{})));var to,no=((si={})[$i.VERTICES]=yi.FLOAT32,si[$i.PLANES]=yi.FLOAT32,si[$i.COUNT]=yi.NEVER,si);e("aB",new Si(Ei.FRUSTUM,no,$i)),function(e){e[e.ENABLE=0]="ENABLE",e[e.ILLUM=1]="ILLUM",e[e.SKY_COLOR=2]="SKY_COLOR",e[e.GROUND_ALBEDO=6]="GROUND_ALBEDO",e[e.COUNT=10]="COUNT"}(to||(to=e("aC",{})));var io,oo=((ci={})[to.ENABLE]=yi.UINT32,ci[to.ILLUM]=yi.FLOAT32,ci[to.SKY_COLOR]=yi.FLOAT32,ci[to.GROUND_ALBEDO]=yi.FLOAT32,ci[to.COUNT]=yi.NEVER,ci);delete to[to.COUNT],to[to.COUNT=to.ILLUM+1]="COUNT",e("aD",new Si(Ei.AMBIENT,oo,to,1)),function(e){e[e.ENABLE=0]="ENABLE",e[e.IS_RGBE=1]="IS_RGBE",e[e.USE_IBL=2]="USE_IBL",e[e.MODEL=3]="MODEL",e[e.COUNT=4]="COUNT"}(io||(io=e("aE",{})));var ao,ro=((li={})[io.ENABLE]=yi.UINT32,li[io.IS_RGBE]=yi.UINT32,li[io.USE_IBL]=yi.UINT32,li[io.MODEL]=yi.UINT32,li[io.COUNT]=yi.NEVER,li);e("aF",new Si(Ei.SKYBOX,ro,io,1)),function(e){e[e.ENABLE=0]="ENABLE",e[e.TYPE=1]="TYPE",e[e.DENSITY=2]="DENSITY",e[e.START=3]="START",e[e.END=4]="END",e[e.ATTEN=5]="ATTEN",e[e.TOP=6]="TOP",e[e.RANGE=7]="RANGE",e[e.COLOR=8]="COLOR",e[e.COUNT=12]="COUNT"}(ao||(ao=e("aG",{})));var so,co=((mi={})[ao.ENABLE]=yi.UINT32,mi[ao.TYPE]=yi.UINT32,mi[ao.DENSITY]=yi.FLOAT32,mi[ao.START]=yi.FLOAT32,mi[ao.END]=yi.FLOAT32,mi[ao.ATTEN]=yi.FLOAT32,mi[ao.TOP]=yi.FLOAT32,mi[ao.RANGE]=yi.FLOAT32,mi[ao.COLOR]=yi.FLOAT32,mi[ao.COUNT]=yi.NEVER,mi);delete ao[ao.COUNT],ao[ao.COUNT=ao.RANGE+1]="COUNT",e("aH",new Si(Ei.FOG,co,ao)),function(e){e[e.ENABLE=0]="ENABLE",e[e.DIRTY=1]="DIRTY",e[e.TYPE=2]="TYPE",e[e.DISTANCE=3]="DISTANCE",e[e.INSTANCE_PASS=4]="INSTANCE_PASS",e[e.PLANAR_PASS=5]="PLANAR_PASS",e[e.NEAR=6]="NEAR",e[e.FAR=7]="FAR",e[e.ASPECT=8]="ASPECT",e[e.PCF_TYPE=9]="PCF_TYPE",e[e.SHADOW_MAP_DIRTY=10]="SHADOW_MAP_DIRTY",e[e.BIAS=11]="BIAS",e[e.ORTHO_SIZE=12]="ORTHO_SIZE",e[e.AUTO_ADAPT=13]="AUTO_ADAPT",e[e.COLOR=14]="COLOR",e[e.SIZE=18]="SIZE",e[e.NORMAL=20]="NORMAL",e[e.MAT_LIGHT=23]="MAT_LIGHT",e[e.COUNT=39]="COUNT"}(so||(so=e("aI",{})));var lo,mo=((ui={})[so.ENABLE]=yi.UINT32,ui[so.DIRTY]=yi.UINT32,ui[so.TYPE]=yi.UINT32,ui[so.DISTANCE]=yi.FLOAT32,ui[so.INSTANCE_PASS]=yi.UINT32,ui[so.PLANAR_PASS]=yi.UINT32,ui[so.NEAR]=yi.FLOAT32,ui[so.FAR]=yi.FLOAT32,ui[so.ASPECT]=yi.FLOAT32,ui[so.PCF_TYPE]=yi.UINT32,ui[so.SHADOW_MAP_DIRTY]=yi.UINT32,ui[so.BIAS]=yi.FLOAT32,ui[so.ORTHO_SIZE]=yi.FLOAT32,ui[so.AUTO_ADAPT]=yi.UINT32,ui[so.COLOR]=yi.FLOAT32,ui[so.SIZE]=yi.FLOAT32,ui[so.NORMAL]=yi.FLOAT32,ui[so.MAT_LIGHT]=yi.FLOAT32,ui[so.COUNT]=yi.NEVER,ui);delete so[so.COUNT],so[so.COUNT=so.AUTO_ADAPT+1]="COUNT",e("aJ",new Si(Ei.SHADOW,mo,so,1)),function(e){e[e.USE_COLOR_TEMPERATURE=0]="USE_COLOR_TEMPERATURE",e[e.ILLUMINANCE=1]="ILLUMINANCE",e[e.NODE=2]="NODE",e[e.RANGE=3]="RANGE",e[e.TYPE=4]="TYPE",e[e.AABB=5]="AABB",e[e.FRUSTUM=6]="FRUSTUM",e[e.SIZE=7]="SIZE",e[e.SPOT_ANGLE=8]="SPOT_ANGLE",e[e.ASPECT=9]="ASPECT",e[e.DIRECTION=10]="DIRECTION",e[e.COLOR=13]="COLOR",e[e.COLOR_TEMPERATURE_RGB=16]="COLOR_TEMPERATURE_RGB",e[e.POSITION=19]="POSITION",e[e.COUNT=22]="COUNT"}(lo||(lo=e("aK",{})));var uo,_o=((_i={})[lo.USE_COLOR_TEMPERATURE]=yi.UINT32,_i[lo.ILLUMINANCE]=yi.FLOAT32,_i[lo.NODE]=yi.UINT32,_i[lo.RANGE]=yi.FLOAT32,_i[lo.TYPE]=yi.UINT32,_i[lo.AABB]=yi.UINT32,_i[lo.FRUSTUM]=yi.UINT32,_i[lo.SIZE]=yi.FLOAT32,_i[lo.SPOT_ANGLE]=yi.FLOAT32,_i[lo.ASPECT]=yi.FLOAT32,_i[lo.DIRECTION]=yi.FLOAT32,_i[lo.COLOR]=yi.FLOAT32,_i[lo.COLOR_TEMPERATURE_RGB]=yi.FLOAT32,_i[lo.POSITION]=yi.FLOAT32,_i[lo.COUNT]=yi.NEVER,_i);e("aL",new Si(Ei.LIGHT,_o,lo,3)),function(e){e[e.RADIUS=0]="RADIUS",e[e.CENTER=1]="CENTER",e[e.COUNT=4]="COUNT"}(uo||(uo=e("aM",{})));var fo,ho=((fi={})[uo.RADIUS]=yi.FLOAT32,fi[uo.CENTER]=yi.FLOAT32,fi[uo.COUNT]=yi.NEVER,fi);delete uo[uo.COUNT],uo[uo.COUNT=uo.RADIUS+1]="COUNT",e("aN",new Si(Ei.SPHERE,ho,uo,3)),function(e){e[e.STRIDE=0]="STRIDE",e[e.AMOUNT=1]="AMOUNT",e[e.BUFFER=2]="BUFFER",e[e.COUNT=3]="COUNT"}(fo||(fo=e("aO",{})));var vo,po=((hi={})[fo.STRIDE]=yi.UINT32,hi[fo.AMOUNT]=yi.UINT32,hi[fo.BUFFER]=yi.UINT32,hi[fo.COUNT]=yi.NEVER,hi);e("aP",new Si(Ei.FLAT_BUFFER,po,fo,3)),function(e){e[e.FLAT_BUFFER_ARRAY=0]="FLAT_BUFFER_ARRAY",e[e.COUNT=1]="COUNT"}(vo||(vo=e("aQ",{})));var go,xo=((di={})[vo.FLAT_BUFFER_ARRAY]=yi.UINT32,di[vo.COUNT]=yi.NEVER,di);e("aR",new Si(Ei.SUB_MESH,xo,vo,3)),function(e){e[e.IS_DISCARD=0]="IS_DISCARD",e[e.POLYGO_MODEL=1]="POLYGO_MODEL",e[e.SHADE_MODEL=2]="SHADE_MODEL",e[e.CULL_MODE=3]="CULL_MODE",e[e.IS_FRONT_FACE_CCW=4]="IS_FRONT_FACE_CCW",e[e.DEPTH_BIAS_ENABLED=5]="DEPTH_BIAS_ENABLED",e[e.DEPTH_BIAS=6]="DEPTH_BIAS",e[e.DEPTH_BIAS_CLAMP=7]="DEPTH_BIAS_CLAMP",e[e.DEPTH_BIAS_SLOP=8]="DEPTH_BIAS_SLOP",e[e.IS_DEPTH_CLIP=9]="IS_DEPTH_CLIP",e[e.IS_MULTI_SAMPLE=10]="IS_MULTI_SAMPLE",e[e.LINE_WIDTH=11]="LINE_WIDTH",e[e.COUNT=12]="COUNT"}(go||(go=e("aS",{})));var yo,Ao=((vi={})[go.IS_DISCARD]=yi.UINT32,vi[go.POLYGO_MODEL]=yi.UINT32,vi[go.SHADE_MODEL]=yi.UINT32,vi[go.CULL_MODE]=yi.UINT32,vi[go.IS_FRONT_FACE_CCW]=yi.UINT32,vi[go.DEPTH_BIAS_ENABLED]=yi.UINT32,vi[go.DEPTH_BIAS]=yi.FLOAT32,vi[go.DEPTH_BIAS_CLAMP]=yi.FLOAT32,vi[go.DEPTH_BIAS_SLOP]=yi.FLOAT32,vi[go.IS_DEPTH_CLIP]=yi.UINT32,vi[go.IS_MULTI_SAMPLE]=yi.UINT32,vi[go.LINE_WIDTH]=yi.FLOAT32,vi[go.COUNT]=yi.NEVER,vi);e("aT",new Si(Ei.RASTERIZER_STATE,Ao,go,9)),function(e){e[e.DEPTH_TEST=0]="DEPTH_TEST",e[e.DEPTH_WRITE=1]="DEPTH_WRITE",e[e.DEPTH_FUNC=2]="DEPTH_FUNC",e[e.STENCIL_TEST_FRONT=3]="STENCIL_TEST_FRONT",e[e.STENCIL_FUNC_FRONT=4]="STENCIL_FUNC_FRONT",e[e.STENCIL_READ_MASK_FRONT=5]="STENCIL_READ_MASK_FRONT",e[e.STENCIL_WRITE_MASK_FRONT=6]="STENCIL_WRITE_MASK_FRONT",e[e.STENCIL_FAIL_OP_FRONT=7]="STENCIL_FAIL_OP_FRONT",e[e.STENCIL_Z_FAIL_OP_FRONT=8]="STENCIL_Z_FAIL_OP_FRONT",e[e.STENCIL_PASS_OP_FRONT=9]="STENCIL_PASS_OP_FRONT",e[e.STENCIL_REF_FRONT=10]="STENCIL_REF_FRONT",e[e.STENCIL_TEST_BACK=11]="STENCIL_TEST_BACK",e[e.STENCIL_FUNC_BACK=12]="STENCIL_FUNC_BACK",e[e.STENCIL_READ_MADK_BACK=13]="STENCIL_READ_MADK_BACK",e[e.STENCIL_WRITE_MASK_BACK=14]="STENCIL_WRITE_MASK_BACK",e[e.STENCIL_FAIL_OP_BACK=15]="STENCIL_FAIL_OP_BACK",e[e.STENCIL_Z_FAIL_OP_BACK=16]="STENCIL_Z_FAIL_OP_BACK",e[e.STENCIL_PASS_OP_BACK=17]="STENCIL_PASS_OP_BACK",e[e.STENCIL_REF_BACK=18]="STENCIL_REF_BACK",e[e.COUNT=19]="COUNT"}(yo||(yo=e("aU",{})));var To,Co,Eo=((pi={})[yo.DEPTH_TEST]=yi.UINT32,pi[yo.DEPTH_WRITE]=yi.UINT32,pi[yo.DEPTH_FUNC]=yi.UINT32,pi[yo.STENCIL_TEST_FRONT]=yi.UINT32,pi[yo.STENCIL_FUNC_FRONT]=yi.UINT32,pi[yo.STENCIL_READ_MASK_FRONT]=yi.UINT32,pi[yo.STENCIL_WRITE_MASK_FRONT]=yi.UINT32,pi[yo.STENCIL_FAIL_OP_FRONT]=yi.UINT32,pi[yo.STENCIL_Z_FAIL_OP_FRONT]=yi.UINT32,pi[yo.STENCIL_PASS_OP_FRONT]=yi.UINT32,pi[yo.STENCIL_REF_FRONT]=yi.UINT32,pi[yo.STENCIL_TEST_BACK]=yi.UINT32,pi[yo.STENCIL_FUNC_BACK]=yi.UINT32,pi[yo.STENCIL_READ_MADK_BACK]=yi.UINT32,pi[yo.STENCIL_WRITE_MASK_BACK]=yi.UINT32,pi[yo.STENCIL_FAIL_OP_BACK]=yi.UINT32,pi[yo.STENCIL_Z_FAIL_OP_BACK]=yi.UINT32,pi[yo.STENCIL_PASS_OP_BACK]=yi.UINT32,pi[yo.STENCIL_REF_BACK]=yi.UINT32,pi[yo.COUNT]=yi.NEVER,pi);e("aV",new Si(Ei.DEPTH_STENCIL_STATE,Eo,yo,9)),function(e){e[e.BLEND=0]="BLEND",e[e.BLEND_SRC=1]="BLEND_SRC",e[e.BLEND_DST=2]="BLEND_DST",e[e.BLEND_EQ=3]="BLEND_EQ",e[e.BLEND_SRC_ALPHA=4]="BLEND_SRC_ALPHA",e[e.BLEND_DST_ALPHA=5]="BLEND_DST_ALPHA",e[e.BLEND_ALPHA_EQ=6]="BLEND_ALPHA_EQ",e[e.BLEND_COLOR_MASK=7]="BLEND_COLOR_MASK",e[e.COUNT=8]="COUNT"}(To||(To=e("aW",{}))),(gi={})[To.BLEND]=yi.UINT32,gi[To.BLEND_SRC]=yi.UINT32,gi[To.BLEND_DST]=yi.UINT32,gi[To.BLEND_EQ]=yi.UINT32,gi[To.BLEND_SRC_ALPHA]=yi.UINT32,gi[To.BLEND_DST_ALPHA]=yi.UINT32,gi[To.BLEND_ALPHA_EQ]=yi.UINT32,gi[To.BLEND_COLOR_MASK]=yi.UINT32,gi[To.COUNT]=yi.NEVER,e("aX",new Si(Ei.BLEND_TARGET,Eo,To,9)),function(e){e[e.IS_A2C=0]="IS_A2C",e[e.IS_INDEPEND=1]="IS_INDEPEND",e[e.BLEND_COLOR=2]="BLEND_COLOR",e[e.BLEND_TARGET=6]="BLEND_TARGET",e[e.COUNT=7]="COUNT"}(Co||(Co=e("aY",{})));var So,Io=((xi={})[Co.IS_A2C]=yi.UINT32,xi[Co.IS_INDEPEND]=yi.UINT32,xi[Co.BLEND_COLOR]=yi.FLOAT32,xi[Co.BLEND_TARGET]=yi.UINT32,xi[Co.COUNT]=yi.NEVER,xi),Ro=(e("aZ",new Si(Ei.BLEND_STATE,Io,Co,9)),e("cx",4));!function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.BUFFER=1]="BUFFER",e[e.TEXTURE=2]="TEXTURE",e[e.RENDER_PASS=3]="RENDER_PASS",e[e.FRAMEBUFFER=4]="FRAMEBUFFER",e[e.SAMPLER=5]="SAMPLER",e[e.SHADER=6]="SHADER",e[e.DESCRIPTOR_SET_LAYOUT=7]="DESCRIPTOR_SET_LAYOUT",e[e.PIPELINE_LAYOUT=8]="PIPELINE_LAYOUT",e[e.PIPELINE_STATE=9]="PIPELINE_STATE",e[e.DESCRIPTOR_SET=10]="DESCRIPTOR_SET",e[e.INPUT_ASSEMBLER=11]="INPUT_ASSEMBLER",e[e.COMMAND_BUFFER=12]="COMMAND_BUFFER",e[e.FENCE=13]="FENCE",e[e.QUEUE=14]="QUEUE",e[e.WINDOW=15]="WINDOW"}(So||(So=e("cy",{})));var No,wo,bo,Oo,Po,Mo,Do,zo,Lo,Fo,Uo,Bo,Go,Vo,Ho,jo,qo,ko,Wo,Yo,Xo,Ko,Jo,Qo,Zo,$o,ea,ta,na,ia,oa,aa,ra,sa,ca,la,ma,ua=e("cz",function(){function e(e){this._gfxType=So.UNKNOWN,this._gfxType=e}return X(e,[{key:"gfxType",get:function(){return this._gfxType}}]),e}());!function(e){e.ATTR_POSITION="a_position",e.ATTR_NORMAL="a_normal",e.ATTR_TANGENT="a_tangent",e.ATTR_BITANGENT="a_bitangent",e.ATTR_WEIGHTS="a_weights",e.ATTR_JOINTS="a_joints",e.ATTR_COLOR="a_color",e.ATTR_COLOR1="a_color1",e.ATTR_COLOR2="a_color2",e.ATTR_TEX_COORD="a_texCoord",e.ATTR_TEX_COORD1="a_texCoord1",e.ATTR_TEX_COORD2="a_texCoord2",e.ATTR_TEX_COORD3="a_texCoord3",e.ATTR_TEX_COORD4="a_texCoord4",e.ATTR_TEX_COORD5="a_texCoord5",e.ATTR_TEX_COORD6="a_texCoord6",e.ATTR_TEX_COORD7="a_texCoord7",e.ATTR_TEX_COORD8="a_texCoord8",e.ATTR_BATCH_ID="a_batch_id",e.ATTR_BATCH_UV="a_batch_uv"}(No||(No=e("u",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.BOOL=1]="BOOL",e[e.BOOL2=2]="BOOL2",e[e.BOOL3=3]="BOOL3",e[e.BOOL4=4]="BOOL4",e[e.INT=5]="INT",e[e.INT2=6]="INT2",e[e.INT3=7]="INT3",e[e.INT4=8]="INT4",e[e.UINT=9]="UINT",e[e.UINT2=10]="UINT2",e[e.UINT3=11]="UINT3",e[e.UINT4=12]="UINT4",e[e.FLOAT=13]="FLOAT",e[e.FLOAT2=14]="FLOAT2",e[e.FLOAT3=15]="FLOAT3",e[e.FLOAT4=16]="FLOAT4",e[e.MAT2=17]="MAT2",e[e.MAT2X3=18]="MAT2X3",e[e.MAT2X4=19]="MAT2X4",e[e.MAT3X2=20]="MAT3X2",e[e.MAT3=21]="MAT3",e[e.MAT3X4=22]="MAT3X4",e[e.MAT4X2=23]="MAT4X2",e[e.MAT4X3=24]="MAT4X3",e[e.MAT4=25]="MAT4",e[e.SAMPLER1D=26]="SAMPLER1D",e[e.SAMPLER1D_ARRAY=27]="SAMPLER1D_ARRAY",e[e.SAMPLER2D=28]="SAMPLER2D",e[e.SAMPLER2D_ARRAY=29]="SAMPLER2D_ARRAY",e[e.SAMPLER3D=30]="SAMPLER3D",e[e.SAMPLER_CUBE=31]="SAMPLER_CUBE",e[e.COUNT=32]="COUNT"}(wo||(wo=e("cA",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.A8=1]="A8",e[e.L8=2]="L8",e[e.LA8=3]="LA8",e[e.R8=4]="R8",e[e.R8SN=5]="R8SN",e[e.R8UI=6]="R8UI",e[e.R8I=7]="R8I",e[e.R16F=8]="R16F",e[e.R16UI=9]="R16UI",e[e.R16I=10]="R16I",e[e.R32F=11]="R32F",e[e.R32UI=12]="R32UI",e[e.R32I=13]="R32I",e[e.RG8=14]="RG8",e[e.RG8SN=15]="RG8SN",e[e.RG8UI=16]="RG8UI",e[e.RG8I=17]="RG8I",e[e.RG16F=18]="RG16F",e[e.RG16UI=19]="RG16UI",e[e.RG16I=20]="RG16I",e[e.RG32F=21]="RG32F",e[e.RG32UI=22]="RG32UI",e[e.RG32I=23]="RG32I",e[e.RGB8=24]="RGB8",e[e.SRGB8=25]="SRGB8",e[e.RGB8SN=26]="RGB8SN",e[e.RGB8UI=27]="RGB8UI",e[e.RGB8I=28]="RGB8I",e[e.RGB16F=29]="RGB16F",e[e.RGB16UI=30]="RGB16UI",e[e.RGB16I=31]="RGB16I",e[e.RGB32F=32]="RGB32F",e[e.RGB32UI=33]="RGB32UI",e[e.RGB32I=34]="RGB32I",e[e.RGBA8=35]="RGBA8",e[e.BGRA8=36]="BGRA8",e[e.SRGB8_A8=37]="SRGB8_A8",e[e.RGBA8SN=38]="RGBA8SN",e[e.RGBA8UI=39]="RGBA8UI",e[e.RGBA8I=40]="RGBA8I",e[e.RGBA16F=41]="RGBA16F",e[e.RGBA16UI=42]="RGBA16UI",e[e.RGBA16I=43]="RGBA16I",e[e.RGBA32F=44]="RGBA32F",e[e.RGBA32UI=45]="RGBA32UI",e[e.RGBA32I=46]="RGBA32I",e[e.R5G6B5=47]="R5G6B5",e[e.R11G11B10F=48]="R11G11B10F",e[e.RGB5A1=49]="RGB5A1",e[e.RGBA4=50]="RGBA4",e[e.RGB10A2=51]="RGB10A2",e[e.RGB10A2UI=52]="RGB10A2UI",e[e.RGB9E5=53]="RGB9E5",e[e.D16=54]="D16",e[e.D16S8=55]="D16S8",e[e.D24=56]="D24",e[e.D24S8=57]="D24S8",e[e.D32F=58]="D32F",e[e.D32F_S8=59]="D32F_S8",e[e.BC1=60]="BC1",e[e.BC1_ALPHA=61]="BC1_ALPHA",e[e.BC1_SRGB=62]="BC1_SRGB",e[e.BC1_SRGB_ALPHA=63]="BC1_SRGB_ALPHA",e[e.BC2=64]="BC2",e[e.BC2_SRGB=65]="BC2_SRGB",e[e.BC3=66]="BC3",e[e.BC3_SRGB=67]="BC3_SRGB",e[e.BC4=68]="BC4",e[e.BC4_SNORM=69]="BC4_SNORM",e[e.BC5=70]="BC5",e[e.BC5_SNORM=71]="BC5_SNORM",e[e.BC6H_UF16=72]="BC6H_UF16",e[e.BC6H_SF16=73]="BC6H_SF16",e[e.BC7=74]="BC7",e[e.BC7_SRGB=75]="BC7_SRGB",e[e.ETC_RGB8=76]="ETC_RGB8",e[e.ETC2_RGB8=77]="ETC2_RGB8",e[e.ETC2_SRGB8=78]="ETC2_SRGB8",e[e.ETC2_RGB8_A1=79]="ETC2_RGB8_A1",e[e.ETC2_SRGB8_A1=80]="ETC2_SRGB8_A1",e[e.ETC2_RGBA8=81]="ETC2_RGBA8",e[e.ETC2_SRGB8_A8=82]="ETC2_SRGB8_A8",e[e.EAC_R11=83]="EAC_R11",e[e.EAC_R11SN=84]="EAC_R11SN",e[e.EAC_RG11=85]="EAC_RG11",e[e.EAC_RG11SN=86]="EAC_RG11SN",e[e.PVRTC_RGB2=87]="PVRTC_RGB2",e[e.PVRTC_RGBA2=88]="PVRTC_RGBA2",e[e.PVRTC_RGB4=89]="PVRTC_RGB4",e[e.PVRTC_RGBA4=90]="PVRTC_RGBA4",e[e.PVRTC2_2BPP=91]="PVRTC2_2BPP",e[e.PVRTC2_4BPP=92]="PVRTC2_4BPP",e[e.ASTC_RGBA_4x4=93]="ASTC_RGBA_4x4",e[e.ASTC_RGBA_5x4=94]="ASTC_RGBA_5x4",e[e.ASTC_RGBA_5x5=95]="ASTC_RGBA_5x5",e[e.ASTC_RGBA_6x5=96]="ASTC_RGBA_6x5",e[e.ASTC_RGBA_6x6=97]="ASTC_RGBA_6x6",e[e.ASTC_RGBA_8x5=98]="ASTC_RGBA_8x5",e[e.ASTC_RGBA_8x6=99]="ASTC_RGBA_8x6",e[e.ASTC_RGBA_8x8=100]="ASTC_RGBA_8x8",e[e.ASTC_RGBA_10x5=101]="ASTC_RGBA_10x5",e[e.ASTC_RGBA_10x6=102]="ASTC_RGBA_10x6",e[e.ASTC_RGBA_10x8=103]="ASTC_RGBA_10x8",e[e.ASTC_RGBA_10x10=104]="ASTC_RGBA_10x10",e[e.ASTC_RGBA_12x10=105]="ASTC_RGBA_12x10",e[e.ASTC_RGBA_12x12=106]="ASTC_RGBA_12x12",e[e.ASTC_SRGBA_4x4=107]="ASTC_SRGBA_4x4",e[e.ASTC_SRGBA_5x4=108]="ASTC_SRGBA_5x4",e[e.ASTC_SRGBA_5x5=109]="ASTC_SRGBA_5x5",e[e.ASTC_SRGBA_6x5=110]="ASTC_SRGBA_6x5",e[e.ASTC_SRGBA_6x6=111]="ASTC_SRGBA_6x6",e[e.ASTC_SRGBA_8x5=112]="ASTC_SRGBA_8x5",e[e.ASTC_SRGBA_8x6=113]="ASTC_SRGBA_8x6",e[e.ASTC_SRGBA_8x8=114]="ASTC_SRGBA_8x8",e[e.ASTC_SRGBA_10x5=115]="ASTC_SRGBA_10x5",e[e.ASTC_SRGBA_10x6=116]="ASTC_SRGBA_10x6",e[e.ASTC_SRGBA_10x8=117]="ASTC_SRGBA_10x8",e[e.ASTC_SRGBA_10x10=118]="ASTC_SRGBA_10x10",e[e.ASTC_SRGBA_12x10=119]="ASTC_SRGBA_12x10",e[e.ASTC_SRGBA_12x12=120]="ASTC_SRGBA_12x12"}(bo||(bo=e("F",{}))),function(e){e[e.NONE=0]="NONE",e[e.TRANSFER_SRC=1]="TRANSFER_SRC",e[e.TRANSFER_DST=2]="TRANSFER_DST",e[e.INDEX=4]="INDEX",e[e.VERTEX=8]="VERTEX",e[e.UNIFORM=16]="UNIFORM",e[e.STORAGE=32]="STORAGE",e[e.INDIRECT=64]="INDIRECT"}(Oo||(Oo=e("v",{}))),function(e){e[e.NONE=0]="NONE",e[e.DEVICE=1]="DEVICE",e[e.HOST=2]="HOST"}(Po||(Po=e("M",{}))),function(e){e[e.NONE=0]="NONE",e[e.BAKUP_BUFFER=4]="BAKUP_BUFFER"}(Mo||(Mo=e("cB",{}))),function(e){e[e.NONE=0]="NONE",e[e.READ=1]="READ",e[e.WRITE=2]="WRITE"}(Do||(Do=e("cC",{}))),function(e){e[e.POINT_LIST=0]="POINT_LIST",e[e.LINE_LIST=1]="LINE_LIST",e[e.LINE_STRIP=2]="LINE_STRIP",e[e.LINE_LOOP=3]="LINE_LOOP",e[e.LINE_LIST_ADJACENCY=4]="LINE_LIST_ADJACENCY",e[e.LINE_STRIP_ADJACENCY=5]="LINE_STRIP_ADJACENCY",e[e.ISO_LINE_LIST=6]="ISO_LINE_LIST",e[e.TRIANGLE_LIST=7]="TRIANGLE_LIST",e[e.TRIANGLE_STRIP=8]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=9]="TRIANGLE_FAN",e[e.TRIANGLE_LIST_ADJACENCY=10]="TRIANGLE_LIST_ADJACENCY",e[e.TRIANGLE_STRIP_ADJACENCY=11]="TRIANGLE_STRIP_ADJACENCY",e[e.TRIANGLE_PATCH_ADJACENCY=12]="TRIANGLE_PATCH_ADJACENCY",e[e.QUAD_PATCH_LIST=13]="QUAD_PATCH_LIST"}(zo||(zo=e("cD",{}))),function(e){e[e.FILL=0]="FILL",e[e.POINT=1]="POINT",e[e.LINE=2]="LINE"}(Lo||(Lo=e("cE",{}))),function(e){e[e.GOURAND=0]="GOURAND",e[e.FLAT=1]="FLAT"}(Fo||(Fo=e("cF",{}))),function(e){e[e.NONE=0]="NONE",e[e.FRONT=1]="FRONT",e[e.BACK=2]="BACK"}(Uo||(Uo=e("cG",{}))),function(e){e[e.NEVER=0]="NEVER",e[e.LESS=1]="LESS",e[e.EQUAL=2]="EQUAL",e[e.LESS_EQUAL=3]="LESS_EQUAL",e[e.GREATER=4]="GREATER",e[e.NOT_EQUAL=5]="NOT_EQUAL",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.ALWAYS=7]="ALWAYS"}(Bo||(Bo=e("cH",{}))),function(e){e[e.ZERO=0]="ZERO",e[e.KEEP=1]="KEEP",e[e.REPLACE=2]="REPLACE",e[e.INCR=3]="INCR",e[e.DECR=4]="DECR",e[e.INVERT=5]="INVERT",e[e.INCR_WRAP=6]="INCR_WRAP",e[e.DECR_WRAP=7]="DECR_WRAP"}(Go||(Go=e("cI",{}))),function(e){e[e.ADD=0]="ADD",e[e.SUB=1]="SUB",e[e.REV_SUB=2]="REV_SUB",e[e.MIN=3]="MIN",e[e.MAX=4]="MAX"}(Vo||(Vo=e("cJ",{}))),function(e){e[e.ZERO=0]="ZERO",e[e.ONE=1]="ONE",e[e.SRC_ALPHA=2]="SRC_ALPHA",e[e.DST_ALPHA=3]="DST_ALPHA",e[e.ONE_MINUS_SRC_ALPHA=4]="ONE_MINUS_SRC_ALPHA",e[e.ONE_MINUS_DST_ALPHA=5]="ONE_MINUS_DST_ALPHA",e[e.SRC_COLOR=6]="SRC_COLOR",e[e.DST_COLOR=7]="DST_COLOR",e[e.ONE_MINUS_SRC_COLOR=8]="ONE_MINUS_SRC_COLOR",e[e.ONE_MINUS_DST_COLOR=9]="ONE_MINUS_DST_COLOR",e[e.SRC_ALPHA_SATURATE=10]="SRC_ALPHA_SATURATE",e[e.CONSTANT_COLOR=11]="CONSTANT_COLOR",e[e.ONE_MINUS_CONSTANT_COLOR=12]="ONE_MINUS_CONSTANT_COLOR",e[e.CONSTANT_ALPHA=13]="CONSTANT_ALPHA",e[e.ONE_MINUS_CONSTANT_ALPHA=14]="ONE_MINUS_CONSTANT_ALPHA"}(Ho||(Ho=e("cK",{}))),function(e){e[e.NONE=0]="NONE",e[e.R=1]="R",e[e.G=2]="G",e[e.B=4]="B",e[e.A=8]="A",e[e.ALL=15]="ALL"}(jo||(jo=e("cL",{}))),function(e){e[e.NONE=0]="NONE",e[e.POINT=1]="POINT",e[e.LINEAR=2]="LINEAR",e[e.ANISOTROPIC=3]="ANISOTROPIC"}(qo||(qo=e("cM",{}))),function(e){e[e.WRAP=0]="WRAP",e[e.MIRROR=1]="MIRROR",e[e.CLAMP=2]="CLAMP",e[e.BORDER=3]="BORDER"}(ko||(ko=e("cN",{}))),function(e){e[e.TEX1D=0]="TEX1D",e[e.TEX2D=1]="TEX2D",e[e.TEX3D=2]="TEX3D",e[e.CUBE=3]="CUBE",e[e.TEX1D_ARRAY=4]="TEX1D_ARRAY",e[e.TEX2D_ARRAY=5]="TEX2D_ARRAY"}(Wo||(Wo=e("cO",{}))),function(e){e[e.NONE=0]="NONE",e[e.TRANSFER_SRC=1]="TRANSFER_SRC",e[e.TRANSFER_DST=2]="TRANSFER_DST",e[e.SAMPLED=4]="SAMPLED",e[e.STORAGE=8]="STORAGE",e[e.COLOR_ATTACHMENT=16]="COLOR_ATTACHMENT",e[e.DEPTH_STENCIL_ATTACHMENT=32]="DEPTH_STENCIL_ATTACHMENT",e[e.TRANSIENT_ATTACHMENT=64]="TRANSIENT_ATTACHMENT",e[e.INPUT_ATTACHMENT=128]="INPUT_ATTACHMENT"}(Yo||(Yo=e("cP",{}))),function(e){e[e.X1=0]="X1",e[e.X2=1]="X2",e[e.X4=2]="X4",e[e.X8=3]="X8",e[e.X16=4]="X16",e[e.X32=5]="X32",e[e.X64=6]="X64"}(Xo||(Xo=e("cQ",{}))),function(e){e[e.NONE=0]="NONE",e[e.GEN_MIPMAP=1]="GEN_MIPMAP",e[e.CUBEMAP=2]="CUBEMAP",e[e.BAKUP_BUFFER=4]="BAKUP_BUFFER",e[e.IMMUTABLE=8]="IMMUTABLE"}(Ko||(Ko=e("cR",{}))),function(e){e[e.NONE=0]="NONE",e[e.VERTEX=1]="VERTEX",e[e.CONTROL=2]="CONTROL",e[e.EVALUATION=4]="EVALUATION",e[e.GEOMETRY=8]="GEOMETRY",e[e.FRAGMENT=16]="FRAGMENT",e[e.COMPUTE=32]="COMPUTE",e[e.ALL=63]="ALL"}(Jo||(Jo=e("cS",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.UNIFORM_BUFFER=1]="UNIFORM_BUFFER",e[e.DYNAMIC_UNIFORM_BUFFER=2]="DYNAMIC_UNIFORM_BUFFER",e[e.STORAGE_BUFFER=4]="STORAGE_BUFFER",e[e.DYNAMIC_STORAGE_BUFFER=8]="DYNAMIC_STORAGE_BUFFER",e[e.SAMPLER=16]="SAMPLER"}(Qo||(Qo=e("cT",{}))),function(e){e[e.PRIMARY=0]="PRIMARY",e[e.SECONDARY=1]="SECONDARY"}(Zo||(Zo=e("cU",{}))),function(e){e[e.LOAD=0]="LOAD",e[e.CLEAR=1]="CLEAR",e[e.DISCARD=2]="DISCARD"}($o||($o=e("cV",{}))),function(e){e[e.STORE=0]="STORE",e[e.DISCARD=1]="DISCARD"}(ea||(ea=e("cW",{}))),function(e){e[e.UNDEFINED=0]="UNDEFINED",e[e.GENERAL=1]="GENERAL",e[e.COLOR_ATTACHMENT_OPTIMAL=2]="COLOR_ATTACHMENT_OPTIMAL",e[e.DEPTH_STENCIL_ATTACHMENT_OPTIMAL=3]="DEPTH_STENCIL_ATTACHMENT_OPTIMAL",e[e.DEPTH_STENCIL_READONLY_OPTIMAL=4]="DEPTH_STENCIL_READONLY_OPTIMAL",e[e.SHADER_READONLY_OPTIMAL=5]="SHADER_READONLY_OPTIMAL",e[e.TRANSFER_SRC_OPTIMAL=6]="TRANSFER_SRC_OPTIMAL",e[e.TRANSFER_DST_OPTIMAL=7]="TRANSFER_DST_OPTIMAL",e[e.PREINITIALIZED=8]="PREINITIALIZED",e[e.PRESENT_SRC=9]="PRESENT_SRC"}(ta||(ta=e("cX",{}))),function(e){e[e.GRAPHICS=0]="GRAPHICS",e[e.COMPUTE=1]="COMPUTE",e[e.RAY_TRACING=2]="RAY_TRACING"}(na||(na=e("cY",{}))),function(e){e[e.NONE=0]="NONE",e[e.VIEWPORT=1]="VIEWPORT",e[e.SCISSOR=2]="SCISSOR",e[e.LINE_WIDTH=4]="LINE_WIDTH",e[e.DEPTH_BIAS=8]="DEPTH_BIAS",e[e.BLEND_CONSTANTS=16]="BLEND_CONSTANTS",e[e.DEPTH_BOUNDS=32]="DEPTH_BOUNDS",e[e.STENCIL_WRITE_MASK=64]="STENCIL_WRITE_MASK",e[e.STENCIL_COMPARE_MASK=128]="STENCIL_COMPARE_MASK"}(ia||(ia=e("cZ",{}))),function(e){e[e.FRONT=0]="FRONT",e[e.BACK=1]="BACK",e[e.ALL=2]="ALL"}(oa||(oa=e("c_",{}))),function(e){e[e.GRAPHICS=0]="GRAPHICS",e[e.COMPUTE=1]="COMPUTE",e[e.TRANSFER=2]="TRANSFER"}(aa||(aa=e("c$",{}))),function(e){e[e.NONE=0]="NONE",e[e.COLOR=1]="COLOR",e[e.DEPTH=2]="DEPTH",e[e.STENCIL=4]="STENCIL",e[e.DEPTH_STENCIL=6]="DEPTH_STENCIL",e[e.ALL=7]="ALL"}(ra||(ra=e("d0",{}))),function(e){e[e.NONE=0]="NONE",e[e.UNORM=1]="UNORM",e[e.SNORM=2]="SNORM",e[e.UINT=3]="UINT",e[e.INT=4]="INT",e[e.UFLOAT=5]="UFLOAT",e[e.FLOAT=6]="FLOAT"}(sa||(sa=e("d1",{}))),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.GLES2=1]="GLES2",e[e.GLES3=2]="GLES3",e[e.METAL=3]="METAL",e[e.VULKAN=4]="VULKAN",e[e.WEBGL=5]="WEBGL",e[e.WEBGL2=6]="WEBGL2",e[e.WEBGPU=7]="WEBGPU"}(ca||(ca=e("d2",{}))),function(e){e[e.IDENTITY=0]="IDENTITY",e[e.ROTATE_90=1]="ROTATE_90",e[e.ROTATE_180=2]="ROTATE_180",e[e.ROTATE_270=3]="ROTATE_270"}(la||(la=e("d3",{}))),function(e){e[e.COLOR_FLOAT=0]="COLOR_FLOAT",e[e.COLOR_HALF_FLOAT=1]="COLOR_HALF_FLOAT",e[e.TEXTURE_FLOAT=2]="TEXTURE_FLOAT",e[e.TEXTURE_HALF_FLOAT=3]="TEXTURE_HALF_FLOAT",e[e.TEXTURE_FLOAT_LINEAR=4]="TEXTURE_FLOAT_LINEAR",e[e.TEXTURE_HALF_FLOAT_LINEAR=5]="TEXTURE_HALF_FLOAT_LINEAR",e[e.FORMAT_R11G11B10F=6]="FORMAT_R11G11B10F",e[e.FORMAT_D16=7]="FORMAT_D16",e[e.FORMAT_D16S8=8]="FORMAT_D16S8",e[e.FORMAT_D24=9]="FORMAT_D24",e[e.FORMAT_D24S8=10]="FORMAT_D24S8",e[e.FORMAT_D32F=11]="FORMAT_D32F",e[e.FORMAT_D32FS8=12]="FORMAT_D32FS8",e[e.FORMAT_ETC1=13]="FORMAT_ETC1",e[e.FORMAT_ETC2=14]="FORMAT_ETC2",e[e.FORMAT_DXT=15]="FORMAT_DXT",e[e.FORMAT_PVRTC=16]="FORMAT_PVRTC",e[e.FORMAT_ASTC=17]="FORMAT_ASTC",e[e.FORMAT_RGB8=18]="FORMAT_RGB8",e[e.MSAA=19]="MSAA",e[e.ELEMENT_INDEX_UINT=20]="ELEMENT_INDEX_UINT",e[e.INSTANCED_ARRAYS=21]="INSTANCED_ARRAYS",e[e.MULTIPLE_RENDER_TARGETS=22]="MULTIPLE_RENDER_TARGETS",e[e.BLEND_MINMAX=23]="BLEND_MINMAX",e[e.DEPTH_BOUNDS=24]="DEPTH_BOUNDS",e[e.LINE_WIDTH=25]="LINE_WIDTH",e[e.STENCIL_WRITE_MASK=26]="STENCIL_WRITE_MASK",e[e.STENCIL_COMPARE_MASK=27]="STENCIL_COMPARE_MASK",e[e.COUNT=28]="COUNT"}(ma||(ma=e("d4",{})));var _a=e("d5",(function(e,t,n,i,o,a,r,s){this.name=e,this.size=t,this.count=n,this.type=i,this.hasAlpha=o,this.hasDepth=a,this.hasStencil=r,this.isCompressed=s})),fa=e("d6",(function(e,t){void 0===e&&(e=0),void 0===t&&(t=0),this.bufferSize=e,this.textureSize=t})),ha=e("d7",Object.freeze([new _a("UNKNOWN",0,0,sa.NONE,!1,!1,!1,!1),new _a("A8",1,1,sa.UNORM,!0,!1,!1,!1),new _a("L8",1,1,sa.UNORM,!1,!1,!1,!1),new _a("LA8",1,2,sa.UNORM,!0,!1,!1,!1),new _a("R8",1,1,sa.UNORM,!1,!1,!1,!1),new _a("R8SN",1,1,sa.SNORM,!1,!1,!1,!1),new _a("R8UI",1,1,sa.UINT,!1,!1,!1,!1),new _a("R8I",1,1,sa.INT,!1,!1,!1,!1),new _a("R16F",2,1,sa.FLOAT,!1,!1,!1,!1),new _a("R16UI",2,1,sa.UINT,!1,!1,!1,!1),new _a("R16I",2,1,sa.INT,!1,!1,!1,!1),new _a("R32F",4,1,sa.FLOAT,!1,!1,!1,!1),new _a("R32UI",4,1,sa.UINT,!1,!1,!1,!1),new _a("R32I",4,1,sa.INT,!1,!1,!1,!1),new _a("RG8",2,2,sa.UNORM,!1,!1,!1,!1),new _a("RG8SN",2,2,sa.SNORM,!1,!1,!1,!1),new _a("RG8UI",2,2,sa.UINT,!1,!1,!1,!1),new _a("RG8I",2,2,sa.INT,!1,!1,!1,!1),new _a("RG16F",4,2,sa.FLOAT,!1,!1,!1,!1),new _a("RG16UI",4,2,sa.UINT,!1,!1,!1,!1),new _a("RG16I",4,2,sa.INT,!1,!1,!1,!1),new _a("RG32F",8,2,sa.FLOAT,!1,!1,!1,!1),new _a("RG32UI",8,2,sa.UINT,!1,!1,!1,!1),new _a("RG32I",8,2,sa.INT,!1,!1,!1,!1),new _a("RGB8",3,3,sa.UNORM,!1,!1,!1,!1),new _a("SRGB8",3,3,sa.UNORM,!1,!1,!1,!1),new _a("RGB8SN",3,3,sa.SNORM,!1,!1,!1,!1),new _a("RGB8UI",3,3,sa.UINT,!1,!1,!1,!1),new _a("RGB8I",3,3,sa.INT,!1,!1,!1,!1),new _a("RGB16F",6,3,sa.FLOAT,!1,!1,!1,!1),new _a("RGB16UI",6,3,sa.UINT,!1,!1,!1,!1),new _a("RGB16I",6,3,sa.INT,!1,!1,!1,!1),new _a("RGB32F",12,3,sa.FLOAT,!1,!1,!1,!1),new _a("RGB32UI",12,3,sa.UINT,!1,!1,!1,!1),new _a("RGB32I",12,3,sa.INT,!1,!1,!1,!1),new _a("RGBA8",4,4,sa.UNORM,!0,!1,!1,!1),new _a("BGRA8",4,4,sa.UNORM,!0,!1,!1,!1),new _a("SRGB8_A8",4,4,sa.UNORM,!0,!1,!1,!1),new _a("RGBA8SN",4,4,sa.SNORM,!0,!1,!1,!1),new _a("RGBA8UI",4,4,sa.UINT,!0,!1,!1,!1),new _a("RGBA8I",4,4,sa.INT,!0,!1,!1,!1),new _a("RGBA16F",8,4,sa.FLOAT,!0,!1,!1,!1),new _a("RGBA16UI",8,4,sa.UINT,!0,!1,!1,!1),new _a("RGBA16I",8,4,sa.INT,!0,!1,!1,!1),new _a("RGBA32F",16,4,sa.FLOAT,!0,!1,!1,!1),new _a("RGBA32UI",16,4,sa.UINT,!0,!1,!1,!1),new _a("RGBA32I",16,4,sa.INT,!0,!1,!1,!1),new _a("R5G6B5",2,3,sa.UNORM,!1,!1,!1,!1),new _a("R11G11B10F",4,3,sa.FLOAT,!1,!1,!1,!1),new _a("RGB5A1",2,4,sa.UNORM,!0,!1,!1,!1),new _a("RGBA4",2,4,sa.UNORM,!0,!1,!1,!1),new _a("RGB10A2",2,4,sa.UNORM,!0,!1,!1,!1),new _a("RGB10A2UI",2,4,sa.UINT,!0,!1,!1,!1),new _a("RGB9E5",2,4,sa.FLOAT,!0,!1,!1,!1),new _a("D16",2,1,sa.UINT,!1,!0,!1,!1),new _a("D16S8",3,2,sa.UINT,!1,!0,!0,!1),new _a("D24",3,1,sa.UINT,!1,!0,!1,!1),new _a("D24S8",4,2,sa.UINT,!1,!0,!0,!1),new _a("D32F",4,1,sa.FLOAT,!1,!0,!1,!1),new _a("D32FS8",5,2,sa.FLOAT,!1,!0,!0,!1),new _a("BC1",1,3,sa.UNORM,!1,!1,!1,!0),new _a("BC1_ALPHA",1,4,sa.UNORM,!0,!1,!1,!0),new _a("BC1_SRGB",1,3,sa.UNORM,!1,!1,!1,!0),new _a("BC1_SRGB_ALPHA",1,4,sa.UNORM,!0,!1,!1,!0),new _a("BC2",1,4,sa.UNORM,!0,!1,!1,!0),new _a("BC2_SRGB",1,4,sa.UNORM,!0,!1,!1,!0),new _a("BC3",1,4,sa.UNORM,!0,!1,!1,!0),new _a("BC3_SRGB",1,4,sa.UNORM,!0,!1,!1,!0),new _a("BC4",1,1,sa.UNORM,!1,!1,!1,!0),new _a("BC4_SNORM",1,1,sa.SNORM,!1,!1,!1,!0),new _a("BC5",1,2,sa.UNORM,!1,!1,!1,!0),new _a("BC5_SNORM",1,2,sa.SNORM,!1,!1,!1,!0),new _a("BC6H_UF16",1,3,sa.UFLOAT,!1,!1,!1,!0),new _a("BC6H_SF16",1,3,sa.FLOAT,!1,!1,!1,!0),new _a("BC7",1,4,sa.UNORM,!0,!1,!1,!0),new _a("BC7_SRGB",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ETC_RGB8",1,3,sa.UNORM,!1,!1,!1,!0),new _a("ETC2_RGB8",1,3,sa.UNORM,!1,!1,!1,!0),new _a("ETC2_SRGB8",1,3,sa.UNORM,!1,!1,!1,!0),new _a("ETC2_RGB8_A1",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ETC2_SRGB8_A1",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ETC2_RGBA8",2,4,sa.UNORM,!0,!1,!1,!0),new _a("ETC2_SRGB8_A8",2,4,sa.UNORM,!0,!1,!1,!0),new _a("EAC_R11",1,1,sa.UNORM,!1,!1,!1,!0),new _a("EAC_R11SN",1,1,sa.SNORM,!1,!1,!1,!0),new _a("EAC_RG11",2,2,sa.UNORM,!1,!1,!1,!0),new _a("EAC_RG11SN",2,2,sa.SNORM,!1,!1,!1,!0),new _a("PVRTC_RGB2",2,3,sa.UNORM,!1,!1,!1,!0),new _a("PVRTC_RGBA2",2,4,sa.UNORM,!0,!1,!1,!0),new _a("PVRTC_RGB4",2,3,sa.UNORM,!1,!1,!1,!0),new _a("PVRTC_RGBA4",2,4,sa.UNORM,!0,!1,!1,!0),new _a("PVRTC2_2BPP",2,4,sa.UNORM,!0,!1,!1,!0),new _a("PVRTC2_4BPP",2,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_RGBA_4x4",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_RGBA_5x4",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_RGBA_5x5",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_RGBA_6x5",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_RGBA_6x6",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_RGBA_8x5",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_RGBA_8x6",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_RGBA_8x8",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_RGBA_10x5",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_RGBA_10x6",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_RGBA_10x8",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_RGBA_10x10",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_RGBA_12x10",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_RGBA_12x12",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_SRGBA_4x4",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_SRGBA_5x4",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_SRGBA_5x5",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_SRGBA_6x5",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_SRGBA_6x6",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_SRGBA_8x5",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_SRGBA_8x6",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_SRGBA_8x8",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_SRGBA_10x5",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_SRGBA_10x6",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_SRGBA_10x8",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_SRGBA_10x10",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_SRGBA_12x10",1,4,sa.UNORM,!0,!1,!1,!0),new _a("ASTC_SRGBA_12x12",1,4,sa.UNORM,!0,!1,!1,!0)]));function da(e,t,n,i){if(!ha[e].isCompressed)return t*n*i*ha[e].size;switch(e){case bo.BC1:case bo.BC1_ALPHA:case bo.BC1_SRGB:case bo.BC1_SRGB_ALPHA:return Math.ceil(t/4)*Math.ceil(n/4)*8*i;case bo.BC2:case bo.BC2_SRGB:case bo.BC3:case bo.BC3_SRGB:case bo.BC4:case bo.BC4_SNORM:case bo.BC6H_SF16:case bo.BC6H_UF16:case bo.BC7:case bo.BC7_SRGB:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case bo.BC5:case bo.BC5_SNORM:return Math.ceil(t/4)*Math.ceil(n/4)*32*i;case bo.ETC_RGB8:case bo.ETC2_RGB8:case bo.ETC2_SRGB8:case bo.ETC2_RGB8_A1:case bo.EAC_R11:case bo.EAC_R11SN:return Math.ceil(t/4)*Math.ceil(n/4)*8*i;case bo.ETC2_RGBA8:case bo.ETC2_SRGB8_A1:case bo.EAC_RG11:case bo.EAC_RG11SN:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case bo.PVRTC_RGB2:case bo.PVRTC_RGBA2:case bo.PVRTC2_2BPP:return Math.ceil(Math.max(t,16)*Math.max(n,8)/4)*i;case bo.PVRTC_RGB4:case bo.PVRTC_RGBA4:case bo.PVRTC2_4BPP:return Math.ceil(Math.max(t,8)*Math.max(n,8)/2)*i;case bo.ASTC_RGBA_4x4:case bo.ASTC_SRGBA_4x4:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case bo.ASTC_RGBA_5x4:case bo.ASTC_SRGBA_5x4:return Math.ceil(t/5)*Math.ceil(n/4)*16*i;case bo.ASTC_RGBA_5x5:case bo.ASTC_SRGBA_5x5:return Math.ceil(t/5)*Math.ceil(n/5)*16*i;case bo.ASTC_RGBA_6x5:case bo.ASTC_SRGBA_6x5:return Math.ceil(t/6)*Math.ceil(n/5)*16*i;case bo.ASTC_RGBA_6x6:case bo.ASTC_SRGBA_6x6:return Math.ceil(t/6)*Math.ceil(n/6)*16*i;case bo.ASTC_RGBA_8x5:case bo.ASTC_SRGBA_8x5:return Math.ceil(t/8)*Math.ceil(n/5)*16*i;case bo.ASTC_RGBA_8x6:case bo.ASTC_SRGBA_8x6:return Math.ceil(t/8)*Math.ceil(n/6)*16*i;case bo.ASTC_RGBA_8x8:case bo.ASTC_SRGBA_8x8:return Math.ceil(t/8)*Math.ceil(n/8)*16*i;case bo.ASTC_RGBA_10x5:case bo.ASTC_SRGBA_10x5:return Math.ceil(t/10)*Math.ceil(n/5)*16*i;case bo.ASTC_RGBA_10x6:case bo.ASTC_SRGBA_10x6:return Math.ceil(t/10)*Math.ceil(n/6)*16*i;case bo.ASTC_RGBA_10x8:case bo.ASTC_SRGBA_10x8:return Math.ceil(t/10)*Math.ceil(n/8)*16*i;case bo.ASTC_RGBA_10x10:case bo.ASTC_SRGBA_10x10:return Math.ceil(t/10)*Math.ceil(n/10)*16*i;case bo.ASTC_RGBA_12x10:case bo.ASTC_SRGBA_12x10:return Math.ceil(t/12)*Math.ceil(n/10)*16*i;case bo.ASTC_RGBA_12x12:case bo.ASTC_SRGBA_12x12:return Math.ceil(t/12)*Math.ceil(n/12)*16*i;default:return 0}}function va(e,t,n,i,o){for(var a=0,r=0;r<o;++r)a+=da(e,t,n,i),t=Math.max(t>>1,1),n=Math.max(n>>1,1);return a}var pa=[0,4,8,12,16,4,8,12,16,4,8,12,16,4,8,12,16,16,24,32,24,36,48,32,48,64,4,4,4,4,4,4];function ga(e){return pa[e]||0}function xa(e){var t=e.size/e.count;switch(e.type){case sa.UNORM:case sa.UINT:switch(t){case 1:return Uint8Array;case 2:return Uint16Array;case 4:return Uint32Array}break;case sa.SNORM:case sa.INT:switch(t){case 1:return Int8Array;case 2:return Int16Array;case 4:return Int32Array}break;case sa.FLOAT:return Float32Array}return Float32Array}var ya=e("cq",(function(e,t,n,i,o,a,r){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===r&&(r=0),this.vertexCount=e,this.firstVertex=t,this.indexCount=n,this.firstIndex=i,this.vertexOffset=o,this.instanceCount=a,this.firstInstance=r})),Aa=e("cr",28),Ta=e("cs",(function(e){void 0===e&&(e=[]),this.drawInfos=e})),Ca=e("B",(function(e,t,n,i,o){void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=Mo.NONE),this.usage=e,this.memUsage=t,this.size=n,this.stride=i,this.flags=o})),Ea=e("ct",(function(e,t,n){void 0===t&&(t=0),void 0===n&&(n=0),this.buffer=e,this.offset=t,this.range=n})),Sa=e("cu",function(e){function t(t){var n;return(n=e.call(this,So.BUFFER)||this)._device=void 0,n._usage=Oo.NONE,n._memUsage=Po.NONE,n._size=0,n._stride=1,n._count=0,n._flags=Mo.NONE,n._bakcupBuffer=null,n._indirectBuffer=null,n._isBufferView=!1,n._device=t,n}return J(t,e),X(t,[{key:"usage",get:function(){return this._usage}},{key:"memUsage",get:function(){return this._memUsage}},{key:"size",get:function(){return this._size}},{key:"stride",get:function(){return this._stride}},{key:"count",get:function(){return this._count}},{key:"flags",get:function(){return this._flags}},{key:"backupBuffer",get:function(){return this._bakcupBuffer}}]),t}(ua)),Ia=e("cv",(function(e,t){void 0===t&&(t=Zo.PRIMARY),this.queue=e,this.type=t})),Ra=e("cw",function(e){function t(t){var n;return(n=e.call(this,So.COMMAND_BUFFER)||this)._device=void 0,n._queue=null,n._type=Zo.PRIMARY,n._numDrawCalls=0,n._numInstances=0,n._numTris=0,n._device=t,n}return J(t,e),X(t,[{key:"type",get:function(){return this._type}},{key:"queue",get:function(){return this._queue}},{key:"numDrawCalls",get:function(){return this._numDrawCalls}},{key:"numInstances",get:function(){return this._numInstances}},{key:"numTris",get:function(){return this._numTris}}]),t}(ua));pt(bo);var Na=e("di",(function(e,t,n){void 0===e&&(e=[]),void 0===t&&(t=[]),void 0===n&&(n=0),this.bufferOffsets=e,this.samplerOffsets=t,this.flexibleSet=n})),wa=e("dj",(function(e,t,n,i,o,a,r){void 0===t&&(t=!0),void 0===n&&(n=!0),void 0===i&&(i=1),void 0===o&&(o=1),void 0===a&&(a=1),void 0===r&&(r=new Na),this.canvasElm=e,this.isAntialias=t,this.isPremultipliedAlpha=n,this.devicePixelRatio=i,this.nativeWidth=o,this.nativeHeight=a,this.bindingMappingInfo=r})),ba=e("dk",function(){function e(){this._canvas=null,this._canvas2D=null,this._gfxAPI=ca.UNKNOWN,this._transform=la.IDENTITY,this._deviceName="",this._renderer="",this._vendor="",this._version="",this._features=new Array(ma.COUNT),this._queue=null,this._cmdBuff=null,this._devicePixelRatio=1,this._width=0,this._height=0,this._nativeWidth=0,this._nativeHeight=0,this._maxVertexAttributes=0,this._maxVertexUniformVectors=0,this._maxFragmentUniformVectors=0,this._maxTextureUnits=0,this._maxVertexTextureUnits=0,this._maxUniformBufferBindings=0,this._maxUniformBlockSize=0,this._maxTextureSize=0,this._maxCubeMapTextureSize=0,this._uboOffsetAlignment=1,this._depthBits=0,this._stencilBits=0,this._colorFmt=bo.UNKNOWN,this._depthStencilFmt=bo.UNKNOWN,this._macros=new Map,this._numDrawCalls=0,this._numInstances=0,this._numTris=0,this._memoryStatus=new fa,this._clipSpaceMinZ=-1,this._screenSpaceSignY=1,this._UVSpaceSignY=-1}return e.prototype.hasFeature=function(e){return this._features[e]},X(e,[{key:"canvas",get:function(){return this._canvas}},{key:"canvas2D",get:function(){return this._canvas2D}},{key:"gfxAPI",get:function(){return this._gfxAPI}},{key:"queue",get:function(){return this._queue}},{key:"commandBuffer",get:function(){return this._cmdBuff}},{key:"devicePixelRatio",get:function(){return this._devicePixelRatio}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"nativeWidth",get:function(){return this._nativeWidth}},{key:"nativeHeight",get:function(){return this._nativeHeight}},{key:"renderer",get:function(){return this._renderer}},{key:"vendor",get:function(){return this._vendor}},{key:"maxVertexAttributes",get:function(){return this._maxVertexAttributes}},{key:"maxVertexUniformVectors",get:function(){return this._maxVertexUniformVectors}},{key:"maxFragmentUniformVectors",get:function(){return this._maxFragmentUniformVectors}},{key:"maxTextureUnits",get:function(){return this._maxTextureUnits}},{key:"maxVertexTextureUnits",get:function(){return this._maxVertexTextureUnits}},{key:"maxUniformBufferBindings",get:function(){return this._maxUniformBufferBindings}},{key:"maxUniformBlockSize",get:function(){return this._maxUniformBlockSize}},{key:"maxTextureSize",get:function(){return this._maxTextureSize}},{key:"maxCubeMapTextureSize",get:function(){return this._maxCubeMapTextureSize}},{key:"uboOffsetAlignment",get:function(){return this._uboOffsetAlignment}},{key:"depthBits",get:function(){return this._depthBits}},{key:"stencilBits",get:function(){return this._stencilBits}},{key:"colorFormat",get:function(){return this._colorFmt}},{key:"depthStencilFormat",get:function(){return this._depthStencilFmt}},{key:"macros",get:function(){return this._macros}},{key:"numDrawCalls",get:function(){return this._numDrawCalls}},{key:"numInstances",get:function(){return this._numInstances}},{key:"numTris",get:function(){return this._numTris}},{key:"memoryStatus",get:function(){return this._memoryStatus}},{key:"clipSpaceMinZ",get:function(){return this._clipSpaceMinZ}},{key:"screenSpaceSignY",get:function(){return this._screenSpaceSignY}},{key:"UVSpaceSignY",get:function(){return this._UVSpaceSignY}},{key:"surfaceTransform",get:function(){return this._transform}}]),e}()),Oa=e("dl",(function(e,t,n,i,o){void 0===t&&(t=[]),void 0===n&&(n=null),void 0===i&&(i=[]),void 0===o&&(o=0),this.renderPass=e,this.colorTextures=t,this.depthStencilTexture=n,this.colorMipmapLevels=i,this.depStencilMipmapLevel=o})),Pa=e("dm",function(e){function t(t){var n;return(n=e.call(this,So.FRAMEBUFFER)||this)._device=void 0,n._renderPass=null,n._colorTextures=[],n._depthStencilTexture=null,n._device=t,n}return J(t,e),X(t,[{key:"renderPass",get:function(){return this._renderPass}},{key:"colorTextures",get:function(){return this._colorTextures}},{key:"depthStencilTexture",get:function(){return this._depthStencilTexture}}]),t}(ua)),Ma=String.prototype.charCodeAt;function Da(e){return this[e]}function za(e,t){for(var n=e.length,i=t^n,o=0,a="string"==typeof e?Ma:Da;n>=4;){var r=255&a.call(e,o)|(255&a.call(e,++o))<<8|(255&a.call(e,++o))<<16|(255&a.call(e,++o))<<24;r=1540483477*(65535&r)+((1540483477*(r>>>16)&65535)<<16),i=1540483477*(65535&i)+((1540483477*(i>>>16)&65535)<<16)^(r=1540483477*(65535&(r^=r>>>24))+((1540483477*(r>>>16)&65535)<<16)),n-=4,++o}switch(n){case 3:i^=(255&a.call(e,o+2))<<16;case 2:i^=(255&a.call(e,o+1))<<8;case 1:i=1540483477*(65535&(i^=255&a.call(e,o)))+((1540483477*(i>>>16)&65535)<<16)}return i=1540483477*(65535&(i^=i>>>13))+((1540483477*(i>>>16)&65535)<<16),(i^=i>>>15)>>>0}var La=e("A",(function(e,t,n,i,o,a){void 0===e&&(e=""),void 0===t&&(t=bo.UNKNOWN),void 0===n&&(n=!1),void 0===i&&(i=0),void 0===o&&(o=!1),void 0===a&&(a=0),this.name=e,this.format=t,this.isNormalized=n,this.stream=i,this.isInstanced=o,this.location=a})),Fa=e("I",(function(e,t,n,i){void 0===e&&(e=[]),void 0===t&&(t=[]),void 0===n&&(n=null),void 0===i&&(i=null),this.attributes=e,this.vertexBuffers=t,this.indexBuffer=n,this.indirectBuffer=i})),Ua=e("dn",function(e){function t(t){var n;return(n=e.call(this,So.INPUT_ASSEMBLER)||this)._device=void 0,n._attributes=[],n._vertexBuffers=[],n._indexBuffer=null,n._vertexCount=0,n._firstVertex=0,n._indexCount=0,n._firstIndex=0,n._vertexOffset=0,n._instanceCount=0,n._firstInstance=0,n._attributesHash=0,n._indirectBuffer=null,n._device=t,n}J(t,e),X(t,[{key:"vertexBuffers",get:function(){return this._vertexBuffers}},{key:"indexBuffer",get:function(){return this._indexBuffer}},{key:"attributes",get:function(){return this._attributes}},{key:"attributesHash",get:function(){return this._attributesHash}},{key:"vertexCount",get:function(){return this._vertexCount},set:function(e){this._vertexCount=e}},{key:"firstVertex",get:function(){return this._firstVertex},set:function(e){this._firstVertex=e}},{key:"indexCount",get:function(){return this._indexCount},set:function(e){this._indexCount=e}},{key:"firstIndex",get:function(){return this._firstIndex},set:function(e){this._firstIndex=e}},{key:"vertexOffset",get:function(){return this._vertexOffset},set:function(e){this._vertexOffset=e}},{key:"instanceCount",get:function(){return this._instanceCount},set:function(e){this._instanceCount=e}},{key:"firstInstance",get:function(){return this._firstInstance},set:function(e){this._firstInstance=e}},{key:"indirectBuffer",get:function(){return this._indirectBuffer}}]);var n=t.prototype;return n.getVertexBuffer=function(e){return void 0===e&&(e=0),e<this._vertexBuffers.length?this._vertexBuffers[e]:null},n.computeAttributesHash=function(){for(var e="attrs",t=0;t<this.attributes.length;++t){var n=this.attributes[t];e+=","+n.name+","+n.format+","+n.isNormalized+","+n.stream+","+n.isInstanced}return za(e,666)},t}(ua)),Ba=e("da",(function(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=1),void 0===i&&(i=1),this.x=e,this.y=t,this.width=n,this.height=i})),Ga=e("db",(function(e,t,n,i,o,a){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=1),this.left=e,this.top=t,this.width=n,this.height=i,this.minDepth=o,this.maxDepth=a})),Va=e("dc",(function(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),this.x=e,this.y=t,this.z=n,this.w=i})),Ha=e("dd",(function(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),this.x=e,this.y=t,this.z=n})),ja=e("de",(function(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=1),this.width=e,this.height=t,this.depth=n})),qa=e("df",(function(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=1),this.mipLevel=e,this.baseArrayLayer=t,this.layerCount=n})),ka=e("dg",(function(e,t,n,i,o){void 0===e&&(e=new qa),void 0===t&&(t=new Ha),void 0===n&&(n=new qa),void 0===i&&(i=new Ha),void 0===o&&(o=new ja),this.srcSubres=e,this.srcOffset=t,this.dstSubres=n,this.dstOffset=i,this.extent=o})),Wa=e("dh",(function(e,t,n,i,o){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=new Ha),void 0===i&&(i=new ja),void 0===o&&(o=new qa),this.buffStride=e,this.buffTexHeight=t,this.texOffset=n,this.texExtent=i,this.texSubres=o})),Ya=e("dv",function(){function e(e,t,n,i,o,a,r,s,c,l,m,u){void 0===e&&(e=!1),void 0===t&&(t=Lo.FILL),void 0===n&&(n=Fo.GOURAND),void 0===i&&(i=Uo.BACK),void 0===o&&(o=!0),void 0===a&&(a=!1),void 0===r&&(r=0),void 0===s&&(s=0),void 0===c&&(c=0),void 0===l&&(l=!0),void 0===m&&(m=!1),void 0===u&&(u=1),this.isDiscard=e,this.polygonMode=t,this.shadeModel=n,this.cullMode=i,this.isFrontFaceCCW=o,this.depthBiasEnabled=a,this.depthBias=r,this.depthBiasClamp=s,this.depthBiasSlop=c,this.isDepthClip=l,this.isMultisample=m,this.lineWidth=u}var t=e.prototype;return t.reset=function(){this.isDiscard=!1,this.polygonMode=Lo.FILL,this.shadeModel=Fo.GOURAND,this.cullMode=Uo.BACK,this.isFrontFaceCCW=!0,this.depthBiasEnabled=!1,this.depthBias=0,this.depthBiasClamp=0,this.depthBiasSlop=0,this.isDepthClip=!0,this.isMultisample=!1,this.lineWidth=1},t.assign=function(e){Object.assign(this,e)},t.destroy=function(){},X(e,[{key:"handle",get:function(){return bi}}]),e}()),Xa=e("dw",function(){function e(e,t,n,i,o,a,r,s,c,l,m,u,_,f,h,d,v,p,g){void 0===e&&(e=!0),void 0===t&&(t=!0),void 0===n&&(n=Bo.LESS),void 0===i&&(i=!1),void 0===o&&(o=Bo.ALWAYS),void 0===a&&(a=65535),void 0===r&&(r=65535),void 0===s&&(s=Go.KEEP),void 0===c&&(c=Go.KEEP),void 0===l&&(l=Go.KEEP),void 0===m&&(m=1),void 0===u&&(u=!1),void 0===_&&(_=Bo.ALWAYS),void 0===f&&(f=65535),void 0===h&&(h=65535),void 0===d&&(d=Go.KEEP),void 0===v&&(v=Go.KEEP),void 0===p&&(p=Go.KEEP),void 0===g&&(g=1),this.depthTest=e,this.depthWrite=t,this.depthFunc=n,this.stencilTestFront=i,this.stencilFuncFront=o,this.stencilReadMaskFront=a,this.stencilWriteMaskFront=r,this.stencilFailOpFront=s,this.stencilZFailOpFront=c,this.stencilPassOpFront=l,this.stencilRefFront=m,this.stencilTestBack=u,this.stencilFuncBack=_,this.stencilReadMaskBack=f,this.stencilWriteMaskBack=h,this.stencilFailOpBack=d,this.stencilZFailOpBack=v,this.stencilPassOpBack=p,this.stencilRefBack=g}var t=e.prototype;return t.reset=function(){this.depthTest=!0,this.depthWrite=!0,this.depthFunc=Bo.LESS,this.stencilTestFront=!1,this.stencilFuncFront=Bo.ALWAYS,this.stencilReadMaskFront=65535,this.stencilWriteMaskFront=65535,this.stencilFailOpFront=Go.KEEP,this.stencilZFailOpFront=Go.KEEP,this.stencilPassOpFront=Go.KEEP,this.stencilRefFront=1,this.stencilTestBack=!1,this.stencilFuncBack=Bo.ALWAYS,this.stencilReadMaskBack=65535,this.stencilWriteMaskBack=65535,this.stencilFailOpBack=Go.KEEP,this.stencilZFailOpBack=Go.KEEP,this.stencilPassOpBack=Go.KEEP,this.stencilRefBack=1},t.assign=function(e){Object.assign(this,e)},t.destroy=function(){},X(e,[{key:"handle",get:function(){return bi}}]),e}()),Ka=e("dx",function(){function e(e,t,n,i,o,a,r,s){void 0===e&&(e=!1),void 0===t&&(t=Ho.ONE),void 0===n&&(n=Ho.ZERO),void 0===i&&(i=Vo.ADD),void 0===o&&(o=Ho.ONE),void 0===a&&(a=Ho.ZERO),void 0===r&&(r=Vo.ADD),void 0===s&&(s=jo.ALL),this.blend=e,this.blendSrc=t,this.blendDst=n,this.blendEq=i,this.blendSrcAlpha=o,this.blendDstAlpha=a,this.blendAlphaEq=r,this.blendColorMask=s}var t=e.prototype;return t.reset=function(){this.blend=!1,this.blendSrc=Ho.ONE,this.blendDst=Ho.ZERO,this.blendEq=Vo.ADD,this.blendSrcAlpha=Ho.ONE,this.blendDstAlpha=Ho.ZERO,this.blendAlphaEq=Vo.ADD,this.blendColorMask=jo.ALL},t.assign=function(e){Object.assign(this,e)},t.destroy=function(){},X(e,[{key:"handle",get:function(){return bi}}]),e}()),Ja=e("dy",function(){function e(e,t,n,i){void 0===e&&(e=!1),void 0===t&&(t=!1),void 0===n&&(n=new Va),void 0===i&&(i=[new Ka]),this.isA2C=e,this.isIndepend=t,this.blendColor=n,this.targets=i}var t=e.prototype;return t.setTarget=function(e,t){var n=this.targets[e];n||(n=this.targets[e]=new Ka),Object.assign(n,t)},t.reset=function(){this.isA2C=!1,this.isIndepend=!1,this.blendColor.x=0,this.blendColor.y=0,this.blendColor.z=0,this.blendColor.w=0,this.targets.length=1,this.targets[0].reset()},t.destroy=function(){},X(e,[{key:"handle",get:function(){return bi}}]),e}()),Qa=e("dz",(function(e){void 0===e&&(e=[]),this.attributes=e})),Za=e("dA",(function(e,t,n,i,o,a,r,s,c){void 0===s&&(s=zo.TRIANGLE_LIST),void 0===c&&(c=ia.NONE),this.shader=e,this.pipelineLayout=t,this.renderPass=n,this.inputState=i,this.rasterizerState=o,this.depthStencilState=a,this.blendState=r,this.primitive=s,this.dynamicStates=c})),$a=e("dB",function(e){function t(t){var n;return(n=e.call(this,So.PIPELINE_STATE)||this)._device=void 0,n._shader=null,n._pipelineLayout=null,n._primitive=zo.TRIANGLE_LIST,n._is=null,n._rs=new Ya,n._dss=new Xa,n._bs=new Ja,n._dynamicStates=ia.NONE,n._renderPass=null,n._device=t,n}return J(t,e),X(t,[{key:"shader",get:function(){return this._shader}},{key:"pipelineLayout",get:function(){return this._pipelineLayout}},{key:"primitive",get:function(){return this._primitive}},{key:"rasterizerState",get:function(){return this._rs}},{key:"depthStencilState",get:function(){return this._dss}},{key:"blendState",get:function(){return this._bs}},{key:"inputState",get:function(){return this._is}},{key:"dynamicStates",get:function(){return this._dynamicStates}},{key:"renderPass",get:function(){return this._renderPass}}]),t}(ua)),er=e("dE",(function(e){void 0===e&&(e=aa.GRAPHICS),this.type=e})),tr=e("dF",function(e){function t(t){var n;return(n=e.call(this,So.QUEUE)||this)._device=void 0,n._type=aa.GRAPHICS,n._isAsync=!1,n._device=t,n}return J(t,e),X(t,[{key:"type",get:function(){return this._type}}]),t.prototype.isAsync=function(){return this._isAsync},t}(ua)),nr=e("dG",(function(e,t,n,i,o,a){void 0===e&&(e=bo.UNKNOWN),void 0===t&&(t=1),void 0===n&&(n=$o.CLEAR),void 0===i&&(i=ea.STORE),void 0===o&&(o=ta.UNDEFINED),void 0===a&&(a=ta.PRESENT_SRC),this.format=e,this.sampleCount=t,this.loadOp=n,this.storeOp=i,this.beginLayout=o,this.endLayout=a})),ir=e("dH",(function(e,t,n,i,o,a,r,s){void 0===e&&(e=bo.UNKNOWN),void 0===t&&(t=1),void 0===n&&(n=$o.CLEAR),void 0===i&&(i=ea.STORE),void 0===o&&(o=$o.CLEAR),void 0===a&&(a=ea.STORE),void 0===r&&(r=ta.UNDEFINED),void 0===s&&(s=ta.DEPTH_STENCIL_ATTACHMENT_OPTIMAL),this.format=e,this.sampleCount=t,this.depthLoadOp=n,this.depthStoreOp=i,this.stencilLoadOp=o,this.stencilStoreOp=a,this.beginLayout=r,this.endLayout=s})),or=e("dI",(function(e,t,n,i,o,a){void 0===e&&(e=na.GRAPHICS),void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===i&&(i=[]),void 0===o&&(o=-1),void 0===a&&(a=[]),this.bindPoint=e,this.inputs=t,this.colors=n,this.resolves=i,this.depthStencil=o,this.preserves=a})),ar=e("dJ",(function(e,t,n){void 0===e&&(e=[]),void 0===t&&(t=null),void 0===n&&(n=[]),this.colorAttachments=e,this.depthStencilAttachment=t,this.subPasses=n})),rr=e("dK",function(e){function t(t){var n;return(n=e.call(this,So.RENDER_PASS)||this)._device=void 0,n._colorInfos=[],n._depthStencilInfo=null,n._subPasses=[],n._hash=0,n._device=t,n}return J(t,e),X(t,[{key:"colorAttachments",get:function(){return this._colorInfos}},{key:"depthStencilAttachment",get:function(){return this._depthStencilInfo}},{key:"subPasses",get:function(){return this._subPasses}},{key:"hash",get:function(){return this._hash}}]),t.prototype.computeHash=function(){var e="";if(this._subPasses.length)for(var t=0;t<this._subPasses.length;++t){var n=this._subPasses[t];if(n.inputs.length){e+="ia";for(var i=0;i<n.inputs.length;++i){var o=this._colorInfos[n.inputs[i]];e+=","+o.format+","+o.sampleCount}}if(n.colors.length){e+="ca";for(var a=0;a<n.inputs.length;++a){var r=this._colorInfos[n.inputs[a]];e+=","+r.format+","+r.sampleCount}}if(n.depthStencil>=0){var s=this._colorInfos[n.depthStencil];e+="ds,"+s.format+","+s.sampleCount}}else{e+="ca";for(var c=0;c<this._colorInfos.length;++c){var l=this._colorInfos[c];e+=","+l.format+","+l.sampleCount}var m=this._depthStencilInfo;m&&(e+="ds,"+m.format+","+m.sampleCount)}return za(e,666)},t}(ua)),sr=e("dL",(function(e,t,n,i,o,a,r,s,c,l,m,u){void 0===e&&(e=qo.LINEAR),void 0===t&&(t=qo.LINEAR),void 0===n&&(n=qo.NONE),void 0===i&&(i=ko.WRAP),void 0===o&&(o=ko.WRAP),void 0===a&&(a=ko.WRAP),void 0===r&&(r=16),void 0===s&&(s=Bo.NEVER),void 0===c&&(c=new Va),void 0===l&&(l=0),void 0===m&&(m=0),void 0===u&&(u=0),this.minFilter=e,this.magFilter=t,this.mipFilter=n,this.addressU=i,this.addressV=o,this.addressW=a,this.maxAnisotropy=r,this.cmpFunc=s,this.borderColor=c,this.minLOD=l,this.maxLOD=m,this.mipLODBias=u})),cr=e("dM",function(e){function t(t){var n;return(n=e.call(this,So.SAMPLER)||this)._device=void 0,n._minFilter=qo.LINEAR,n._magFilter=qo.LINEAR,n._mipFilter=qo.NONE,n._addressU=ko.WRAP,n._addressV=ko.WRAP,n._addressW=ko.WRAP,n._maxAnisotropy=16,n._cmpFunc=Bo.NEVER,n._borderColor=new Va,n._minLOD=0,n._maxLOD=0,n._mipLODBias=0,n._device=t,n}return J(t,e),X(t,[{key:"minFilter",get:function(){return this._minFilter}},{key:"magFilter",get:function(){return this._magFilter}},{key:"mipFilter",get:function(){return this._mipFilter}},{key:"addressU",get:function(){return this._addressU}},{key:"addressV",get:function(){return this._addressV}},{key:"addressW",get:function(){return this._addressW}},{key:"maxAnisotropy",get:function(){return this._maxAnisotropy}},{key:"cmpFunc",get:function(){return this._cmpFunc}},{key:"borderColor",get:function(){return this._borderColor}},{key:"minLOD",get:function(){return this._minLOD}},{key:"maxLOD",get:function(){return this._maxLOD}},{key:"mipLODBias",get:function(){return this._mipLODBias}}]),t}(ua)),lr=e("dN",(function(e,t){void 0===e&&(e=Jo.NONE),void 0===t&&(t=""),this.stage=e,this.source=t})),mr=e("dO",(function(e,t,n){void 0===e&&(e=""),void 0===t&&(t=wo.UNKNOWN),void 0===n&&(n=1),this.name=e,this.type=t,this.count=n})),ur=e("dP",(function(e,t,n,i,o){void 0===e&&(e=-1),void 0===t&&(t=-1),void 0===n&&(n=""),void 0===i&&(i=[]),void 0===o&&(o=1),this.set=e,this.binding=t,this.name=n,this.members=i,this.count=o})),_r=e("dQ",(function(e,t,n,i,o){void 0===e&&(e=-1),void 0===t&&(t=-1),void 0===n&&(n=""),void 0===i&&(i=wo.UNKNOWN),void 0===o&&(o=1),this.set=e,this.binding=t,this.name=n,this.type=i,this.count=o})),fr=e("dR",(function(e,t,n,i,o){void 0===e&&(e=""),void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===i&&(i=[]),void 0===o&&(o=[]),this.name=e,this.stages=t,this.attributes=n,this.blocks=i,this.samplers=o})),hr=e("dS",function(e){function t(n){var i;return(i=e.call(this,So.SHADER)||this)._device=void 0,i._id=void 0,i._name="",i._stages=[],i._attributes=[],i._blocks=[],i._samplers=[],i._device=n,i._id=t._shaderIdGen++,i}return J(t,e),X(t,[{key:"id",get:function(){return this._id}},{key:"name",get:function(){return this._name}},{key:"attributes",get:function(){return this._attributes}},{key:"blocks",get:function(){return this._blocks}},{key:"samplers",get:function(){return this._samplers}}]),t}(ua));hr._shaderIdGen=0;var dr=e("dT",(function(e,t,n,i,o,a,r,s,c,l){void 0===t&&(t=Yo.NONE),void 0===n&&(n=bo.UNKNOWN),void 0===i&&(i=0),void 0===o&&(o=0),void 0===a&&(a=Ko.NONE),void 0===r&&(r=1),void 0===s&&(s=1),void 0===c&&(c=Xo.X1),void 0===l&&(l=1),this.type=e,this.usage=t,this.format=n,this.width=i,this.height=o,this.flags=a,this.layerCount=r,this.levelCount=s,this.samples=c,this.depth=l})),vr=e("dU",(function(e,t,n,i,o,a,r){void 0===t&&(t=Wo.TEX2D),void 0===n&&(n=bo.UNKNOWN),void 0===i&&(i=0),void 0===o&&(o=1),void 0===a&&(a=0),void 0===r&&(r=1),this.texture=e,this.type=t,this.format=n,this.baseLevel=i,this.levelCount=o,this.baseLayer=a,this.layerCount=r}));function pr(e){return e>0&&0==(e&e-1)}var gr=e("dV",function(e){function t(t){var n;return(n=e.call(this,So.TEXTURE)||this)._device=void 0,n._type=Wo.TEX2D,n._usage=Yo.NONE,n._format=bo.UNKNOWN,n._width=0,n._height=0,n._depth=1,n._layerCount=1,n._levelCount=1,n._samples=Xo.X1,n._flags=Ko.NONE,n._isPowerOf2=!1,n._size=0,n._buffer=null,n._device=t,n}return J(t,e),X(t,[{key:"type",get:function(){return this._type}},{key:"usage",get:function(){return this._usage}},{key:"format",get:function(){return this._format}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"depth",get:function(){return this._depth}},{key:"layerCount",get:function(){return this._layerCount}},{key:"levelCount",get:function(){return this._levelCount}},{key:"samples",get:function(){return this._samples}},{key:"flags",get:function(){return this._flags}},{key:"size",get:function(){return this._size}},{key:"buffer",get:function(){return this._buffer}}]),t}(ua)),xr={Device:ba,Buffer:Sa,Texture:gr,Sampler:cr,Shader:hr,InputAssembler:Ua,RenderPass:rr,Framebuffer:Pa,PipelineState:$a,CommandBuffer:Ra,Queue:tr,FormatSize:da,FormatSurfaceSize:va,GetTypeSize:ga,getTypedArrayConstructor:xa,MAX_ATTACHMENTS:Ro,ObjectType:So,Obj:ua,AttributeName:No,Type:wo,Format:bo,BufferUsageBit:Oo,MemoryUsageBit:Po,BufferFlagBit:Mo,BufferAccessBit:Do,PrimitiveMode:zo,PolygonMode:Lo,ShadeModel:Fo,CullMode:Uo,ComparisonFunc:Bo,StencilOp:Go,BlendOp:Vo,BlendFactor:Ho,ColorMask:jo,Filter:qo,Address:ko,TextureType:Wo,TextureUsageBit:Yo,SampleCount:Xo,TextureFlagBit:Ko,ShaderStageFlagBit:Jo,DescriptorType:Qo,CommandBufferType:Zo,LoadOp:$o,StoreOp:ea,TextureLayout:ta,PipelineBindPoint:na,DynamicStateFlagBit:ia,StencilFace:oa,QueueType:aa,Rect:Ba,Viewport:Ga,Color:Va,ClearFlag:ra,Offset:Ha,Extent:ja,TextureSubres:qa,TextureCopy:ka,BufferTextureCopy:Wa,FormatType:sa,FormatInfo:_a,MemoryStatus:fa,FormatInfos:ha},yr=e("cm",Qo.UNIFORM_BUFFER|Qo.DYNAMIC_UNIFORM_BUFFER|Qo.STORAGE_BUFFER|Qo.DYNAMIC_STORAGE_BUFFER),Ar=e("cn",Qo.SAMPLER),Tr=e("co",(function(e){this.layout=e})),Cr=e("cp",function(e){function t(t){var n;return(n=e.call(this,So.DESCRIPTOR_SET)||this)._device=void 0,n._layout=null,n._buffers=[],n._textures=[],n._samplers=[],n._isDirty=!1,n._device=t,n}J(t,e),X(t,[{key:"layout",get:function(){return this._layout}}]);var n=t.prototype;return n.bindBuffer=function(e,t,n){void 0===n&&(n=0);var i=this._layout.bindingIndices[e],o=this._layout.bindings[i];if(o)if(o.descriptorType&yr){var a=this._layout.descriptorIndices[e];this._buffers[a+n]!==t&&(this._buffers[a+n]=t,this._isDirty=!0)}else console.warn("Setting binding is not DescriptorType.UNIFORM_BUFFER.")},n.bindSampler=function(e,t,n){void 0===n&&(n=0);var i=this._layout.bindingIndices[e],o=this._layout.bindings[i];if(o)if(o.descriptorType&Ar){var a=this._layout.descriptorIndices[e];this._samplers[a+n]!==t&&(this._samplers[a+n]=t,this._isDirty=!0)}else console.warn("Setting binding is not DescriptorType.SAMPLER.")},n.bindTexture=function(e,t,n){void 0===n&&(n=0);var i=this._layout.bindingIndices[e],o=this._layout.bindings[i];if(o)if(o.descriptorType&Ar){var a=this._layout.descriptorIndices[e];this._textures[a+n]!==t&&(this._textures[a+n]=t,this._isDirty=!0)}else console.warn("Setting binding is not DescriptorType.SAMPLER.")},n.getBuffer=function(e,t){void 0===t&&(t=0);var n=this._layout.descriptorIndices[e];return this._buffers[n+t]},n.getSampler=function(e,t){void 0===t&&(t=0);var n=this._layout.descriptorIndices[e];return this._samplers[n+t]},n.getTexture=function(e,t){void 0===t&&(t=0);var n=this._layout.descriptorIndices[e];return this._textures[n+t]},t}(ua)),Er=e("dp",(function(e,t,n,i,o){void 0===e&&(e=-1),void 0===t&&(t=Qo.UNKNOWN),void 0===n&&(n=0),void 0===i&&(i=Jo.NONE),void 0===o&&(o=[]),this.binding=e,this.descriptorType=t,this.count=n,this.stageFlags=i,this.immutableSamplers=o})),Sr=e("dq",(function(e){void 0===e&&(e=[]),this.bindings=e})),Ir=e("dr",Qo.DYNAMIC_STORAGE_BUFFER|Qo.DYNAMIC_UNIFORM_BUFFER),Rr=e("ds",function(e){function t(t){var n;return(n=e.call(this,So.DESCRIPTOR_SET_LAYOUT)||this)._device=void 0,n._bindings=[],n._bindingIndices=[],n._descriptorIndices=[],n._device=t,n}return J(t,e),X(t,[{key:"bindings",get:function(){return this._bindings}},{key:"bindingIndices",get:function(){return this._bindingIndices}},{key:"descriptorIndices",get:function(){return this._descriptorIndices}}]),t}(ua)),Nr=e("dt",(function(e){void 0===e&&(e=[]),this.setLayouts=e})),wr=e("du",function(e){function t(t){var n;return(n=e.call(this,So.PIPELINE_LAYOUT)||this)._device=void 0,n._setLayouts=[],n._device=t,n}return J(t,e),X(t,[{key:"setLayouts",get:function(){return this._setLayouts}}]),t}(ua)),br=e("dC",(function(){})),Or=e("dD",function(e){function t(t){var n;return(n=e.call(this,So.FENCE)||this)._device=void 0,n._device=t,n}return J(t,e),t}(ua));ue(r,"cc",[{name:"GFXDynamicState",newName:"DynamicStateFlagBit"},{name:"GFXBindingType",newName:"DescriptorType"},{name:"GFXBindingLayout",newName:"DescriptorSet"}]),_e(Ra.prototype,"CommandBuffer.prototype",[{name:"bindBindingLayout",suggest:"Use `bindDescriptorSet` instead"}]);var Pr={MAX_ATTACHMENTS:"GFX_MAX_ATTACHMENTS",Obj:"GFXObject",getTypedArrayConstructor:""};for(var Mr in xr){var Dr=Pr[Mr];""!==Dr&&(void 0===Dr&&(Dr="GFX"+Mr),ue(r,"cc",[{name:Dr,newName:Mr,target:r.gfx,targetName:"cc.gfx"}]))}r.gfx=xr,e("a_",Object.freeze({__proto__:null,DESCRIPTOR_BUFFER_TYPE:yr,DESCRIPTOR_SAMPLER_TYPE:Ar,DescriptorSetInfo:Tr,DescriptorSet:Cr,DrawInfo:ya,DRAW_INFO_SIZE:Aa,IndirectBuffer:Ta,BufferInfo:Ca,BufferViewInfo:Ea,Buffer:Sa,CommandBufferInfo:Ia,CommandBuffer:Ra,MAX_ATTACHMENTS:Ro,get ObjectType(){return So},Obj:ua,get AttributeName(){return No},get Type(){return wo},get Format(){return bo},get BufferUsageBit(){return Oo},get MemoryUsageBit(){return Po},get BufferFlagBit(){return Mo},get BufferAccessBit(){return Do},get PrimitiveMode(){return zo},get PolygonMode(){return Lo},get ShadeModel(){return Fo},get CullMode(){return Uo},get ComparisonFunc(){return Bo},get StencilOp(){return Go},get BlendOp(){return Vo},get BlendFactor(){return Ho},get ColorMask(){return jo},get Filter(){return qo},get Address(){return ko},get TextureType(){return Wo},get TextureUsageBit(){return Yo},get SampleCount(){return Xo},get TextureFlagBit(){return Ko},get ShaderStageFlagBit(){return Jo},get DescriptorType(){return Qo},get CommandBufferType(){return Zo},get LoadOp(){return $o},get StoreOp(){return ea},get TextureLayout(){return ta},get PipelineBindPoint(){return na},get DynamicStateFlagBit(){return ia},get StencilFace(){return oa},get QueueType(){return aa},get ClearFlag(){return ra},get FormatType(){return sa},get API(){return ca},get SurfaceTransform(){return la},get Feature(){return ma},FormatInfo:_a,MemoryStatus:fa,FormatInfos:ha,FormatSize:da,FormatSurfaceSize:va,GetTypeSize:ga,getTypedArrayConstructor:xa,Rect:Ba,Viewport:Ga,Color:Va,Offset:Ha,Extent:ja,TextureSubres:qa,TextureCopy:ka,BufferTextureCopy:Wa,BindingMappingInfo:Na,DeviceInfo:wa,Device:ba,FramebufferInfo:Oa,Framebuffer:Pa,Attribute:La,InputAssemblerInfo:Fa,InputAssembler:Ua,DescriptorSetLayoutBinding:Er,DescriptorSetLayoutInfo:Sr,DESCRIPTOR_DYNAMIC_TYPE:Ir,DescriptorSetLayout:Rr,PipelineLayoutInfo:Nr,PipelineLayout:wr,RasterizerState:Ya,DepthStencilState:Xa,BlendTarget:Ka,BlendState:Ja,InputState:Qa,PipelineStateInfo:Za,PipelineState:$a,FenceInfo:br,Fence:Or,QueueInfo:er,Queue:tr,ColorAttachment:nr,DepthStencilAttachment:ir,SubPassInfo:or,RenderPassInfo:ar,RenderPass:rr,SamplerInfo:sr,Sampler:cr,ShaderStage:lr,Uniform:mr,UniformBlock:ur,UniformSampler:_r,ShaderInfo:fr,Shader:hr,TextureInfo:dr,TextureViewInfo:vr,IsPowerOf2:pr,Texture:gr}));var zr={NONE:0,IGNORE_RAYCAST:1<<20,GIZMOS:1<<21,EDITOR:1<<22,UI_3D:1<<23,SCENE_GIZMO:1<<24,UI_2D:1<<25,PROFILER:1<<28,DEFAULT:1<<30,ALL:4294967295},Lr=e("dY",function(){function e(){}return e.makeMaskInclude=function(e){for(var t,n=0,i=ne(e);!(t=i()).done;)n|=t.value;return n},e.makeMaskExclude=function(t){return~e.makeMaskInclude(t)},e.addLayer=function(t,n){void 0!==n?n>19||n<0?console.warn("maximum layers reached."):(e.Enum[t]=1<<n,e.Enum[n]=t,e.BitMask[t]=1<<n,e.BitMask[n]=t):console.warn("bitNum can't be undefined")},e.deleteLayer=function(t){t>19||t<0?console.warn("do not change buildin layers."):(delete e.Enum[e.Enum[t]],delete e.Enum[t],delete e.BitMask[e.BitMask[t]],delete e.BitMask[t])},e}());Lr.Enum=ht(zr),Lr.BitMask=ft(K({},zr)),r.Layers=Lr;var Fr,Ur,Br=e("em","ForwardFlow"),Gr=e("en","ShadowFlow");!function(e){e[e.DEFAULT=100]="DEFAULT",e[e.UI=200]="UI"}(Fr||(Fr={})),r.RenderPassStage=Fr,function(e){e[e.MIN=0]="MIN",e[e.MAX=255]="MAX",e[e.DEFAULT=128]="DEFAULT"}(Ur||(Ur=e("f7",{})));var Vr,Hr=e("ed",{bindings:[],layouts:{}}),jr={bindings:[],layouts:{}};!function(e){e[e.UBO_GLOBAL=0]="UBO_GLOBAL",e[e.UBO_CAMERA=1]="UBO_CAMERA",e[e.UBO_SHADOW=2]="UBO_SHADOW",e[e.SAMPLER_SHADOWMAP=3]="SAMPLER_SHADOWMAP",e[e.SAMPLER_ENVIRONMENT=4]="SAMPLER_ENVIRONMENT",e[e.SAMPLER_SPOT_LIGHTING_MAP=5]="SAMPLER_SPOT_LIGHTING_MAP",e[e.COUNT=6]="COUNT"}(Vr||(Vr={}));var qr,kr=Vr.SAMPLER_SHADOWMAP,Wr=Vr.COUNT-kr;!function(e){e[e.UBO_LOCAL=0]="UBO_LOCAL",e[e.UBO_FORWARD_LIGHTS=1]="UBO_FORWARD_LIGHTS",e[e.UBO_SKINNING_ANIMATION=2]="UBO_SKINNING_ANIMATION",e[e.UBO_SKINNING_TEXTURE=3]="UBO_SKINNING_TEXTURE",e[e.UBO_MORPH=4]="UBO_MORPH",e[e.SAMPLER_JOINTS=5]="SAMPLER_JOINTS",e[e.SAMPLER_MORPH_POSITION=6]="SAMPLER_MORPH_POSITION",e[e.SAMPLER_MORPH_NORMAL=7]="SAMPLER_MORPH_NORMAL",e[e.SAMPLER_MORPH_TANGENT=8]="SAMPLER_MORPH_TANGENT",e[e.SAMPLER_LIGHTMAP=9]="SAMPLER_LIGHTMAP",e[e.SAMPLER_SPRITE=10]="SAMPLER_SPRITE",e[e.COUNT=11]="COUNT"}(qr||(qr=e("fU",{})));var Yr,Xr=qr.SAMPLER_JOINTS,Kr=qr.COUNT-Xr;!function(e){e[e.GLOBAL=0]="GLOBAL",e[e.MATERIAL=1]="MATERIAL",e[e.LOCAL=2]="LOCAL"}(Yr||(Yr=e("ee",{})));var Jr=e("er",new Na);Jr.bufferOffsets=[0,kr+Xr,kr],Jr.samplerOffsets=[-kr,Wr+Kr,Wr-Xr],Jr.flexibleSet=1;var Qr=e("eh",(function(){}));Qr.TIME_OFFSET=0,Qr.NATIVE_SIZE_OFFSET=Qr.TIME_OFFSET+4,Qr.SCREEN_SIZE_OFFSET=Qr.NATIVE_SIZE_OFFSET+4,Qr.COUNT=Qr.SCREEN_SIZE_OFFSET+4,Qr.SIZE=4*Qr.COUNT,Qr.NAME="CCGlobal",Qr.BINDING=Vr.UBO_GLOBAL,Qr.DESCRIPTOR=new Er(Qr.BINDING,Qo.UNIFORM_BUFFER,1,Jo.ALL),Qr.LAYOUT=new ur(Yr.GLOBAL,Qr.BINDING,Qr.NAME,[new mr("cc_time",wo.FLOAT4,1),new mr("cc_screenSize",wo.FLOAT4,1),new mr("cc_nativeSize",wo.FLOAT4,1)],1),Hr.layouts[Qr.NAME]=Qr.LAYOUT,Hr.bindings[Qr.BINDING]=Qr.DESCRIPTOR;var Zr=e("ei",(function(){}));Zr.MAT_VIEW_OFFSET=0,Zr.MAT_VIEW_INV_OFFSET=Zr.MAT_VIEW_OFFSET+16,Zr.MAT_PROJ_OFFSET=Zr.MAT_VIEW_INV_OFFSET+16,Zr.MAT_PROJ_INV_OFFSET=Zr.MAT_PROJ_OFFSET+16,Zr.MAT_VIEW_PROJ_OFFSET=Zr.MAT_PROJ_INV_OFFSET+16,Zr.MAT_VIEW_PROJ_INV_OFFSET=Zr.MAT_VIEW_PROJ_OFFSET+16,Zr.CAMERA_POS_OFFSET=Zr.MAT_VIEW_PROJ_INV_OFFSET+16,Zr.SCREEN_SCALE_OFFSET=Zr.CAMERA_POS_OFFSET+4,Zr.EXPOSURE_OFFSET=Zr.SCREEN_SCALE_OFFSET+4,Zr.MAIN_LIT_DIR_OFFSET=Zr.EXPOSURE_OFFSET+4,Zr.MAIN_LIT_COLOR_OFFSET=Zr.MAIN_LIT_DIR_OFFSET+4,Zr.AMBIENT_SKY_OFFSET=Zr.MAIN_LIT_COLOR_OFFSET+4,Zr.AMBIENT_GROUND_OFFSET=Zr.AMBIENT_SKY_OFFSET+4,Zr.GLOBAL_FOG_COLOR_OFFSET=Zr.AMBIENT_GROUND_OFFSET+4,Zr.GLOBAL_FOG_BASE_OFFSET=Zr.GLOBAL_FOG_COLOR_OFFSET+4,Zr.GLOBAL_FOG_ADD_OFFSET=Zr.GLOBAL_FOG_BASE_OFFSET+4,Zr.COUNT=Zr.GLOBAL_FOG_ADD_OFFSET+4,Zr.SIZE=4*Zr.COUNT,Zr.NAME="CCCamera",Zr.BINDING=Vr.UBO_CAMERA,Zr.DESCRIPTOR=new Er(Zr.BINDING,Qo.UNIFORM_BUFFER,1,Jo.ALL),Zr.LAYOUT=new ur(Yr.GLOBAL,Zr.BINDING,Zr.NAME,[new mr("cc_matView",wo.MAT4,1),new mr("cc_matViewInv",wo.MAT4,1),new mr("cc_matProj",wo.MAT4,1),new mr("cc_matProjInv",wo.MAT4,1),new mr("cc_matViewProj",wo.MAT4,1),new mr("cc_matViewProjInv",wo.MAT4,1),new mr("cc_cameraPos",wo.FLOAT4,1),new mr("cc_screenScale",wo.FLOAT4,1),new mr("cc_exposure",wo.FLOAT4,1),new mr("cc_mainLitDir",wo.FLOAT4,1),new mr("cc_mainLitColor",wo.FLOAT4,1),new mr("cc_ambientSky",wo.FLOAT4,1),new mr("cc_ambientGround",wo.FLOAT4,1),new mr("cc_fogColor",wo.FLOAT4,1),new mr("cc_fogBase",wo.FLOAT4,1),new mr("cc_fogAdd",wo.FLOAT4,1)],1),Hr.layouts[Zr.NAME]=Zr.LAYOUT,Hr.bindings[Zr.BINDING]=Zr.DESCRIPTOR;var $r=e("eg",(function(){}));$r.MAT_LIGHT_PLANE_PROJ_OFFSET=0,$r.MAT_LIGHT_VIEW_PROJ_OFFSET=$r.MAT_LIGHT_PLANE_PROJ_OFFSET+16,$r.SHADOW_COLOR_OFFSET=$r.MAT_LIGHT_VIEW_PROJ_OFFSET+16,$r.SHADOW_INFO_OFFSET=$r.SHADOW_COLOR_OFFSET+4,$r.COUNT=$r.SHADOW_INFO_OFFSET+4,$r.SIZE=4*$r.COUNT,$r.NAME="CCShadow",$r.BINDING=Vr.UBO_SHADOW,$r.DESCRIPTOR=new Er($r.BINDING,Qo.UNIFORM_BUFFER,1,Jo.ALL),$r.LAYOUT=new ur(Yr.GLOBAL,$r.BINDING,$r.NAME,[new mr("cc_matLightPlaneProj",wo.MAT4,1),new mr("cc_matLightViewProj",wo.MAT4,1),new mr("cc_shadowColor",wo.FLOAT4,1),new mr("cc_shadowInfo",wo.FLOAT4,1)],1),Hr.layouts[$r.NAME]=$r.LAYOUT,Hr.bindings[$r.BINDING]=$r.DESCRIPTOR;var es=e("ek",Vr.SAMPLER_SHADOWMAP),ts=new Er(es,Qo.SAMPLER,1,Jo.FRAGMENT),ns=new _r(Yr.GLOBAL,es,"cc_shadowMap",wo.SAMPLER2D,1);Hr.layouts.cc_shadowMap=ns,Hr.bindings[es]=ts;var is=e("ey",Vr.SAMPLER_ENVIRONMENT),os=new Er(is,Qo.SAMPLER,1,Jo.FRAGMENT),as=new _r(Yr.GLOBAL,is,"cc_environment",wo.SAMPLER_CUBE,1);Hr.layouts.cc_environment=as,Hr.bindings[is]=os;var rs=e("el",Vr.SAMPLER_SPOT_LIGHTING_MAP),ss=new Er(rs,Qo.SAMPLER,1,Jo.FRAGMENT),cs=new _r(Yr.GLOBAL,rs,"cc_spotLightingMap",wo.SAMPLER2D,1);Hr.layouts.cc_spotLightingMap=cs,Hr.bindings[rs]=ss;var ls=e("f8",(function(){}));ls.MAT_WORLD_OFFSET=0,ls.MAT_WORLD_IT_OFFSET=ls.MAT_WORLD_OFFSET+16,ls.LIGHTINGMAP_UVPARAM=ls.MAT_WORLD_IT_OFFSET+16,ls.COUNT=ls.LIGHTINGMAP_UVPARAM+4,ls.SIZE=4*ls.COUNT,ls.NAME="CCLocal",ls.BINDING=qr.UBO_LOCAL,ls.DESCRIPTOR=new Er(ls.BINDING,Qo.UNIFORM_BUFFER,1,Jo.VERTEX),ls.LAYOUT=new ur(Yr.LOCAL,ls.BINDING,ls.NAME,[new mr("cc_matWorld",wo.MAT4,1),new mr("cc_matWorldIT",wo.MAT4,1),new mr("cc_lightingMapUVParam",wo.FLOAT4,1)],1),jr.layouts[ls.NAME]=ls.LAYOUT,jr.bindings[ls.BINDING]=ls.DESCRIPTOR;var ms=e("fa","a_matWorld0"),us=e("ef",(function(){}));us.BATCHING_COUNT=10,us.MAT_WORLDS_OFFSET=0,us.COUNT=16*us.BATCHING_COUNT,us.SIZE=4*us.COUNT,us.NAME="CCLocalBatched",us.BINDING=qr.UBO_LOCAL,us.DESCRIPTOR=new Er(us.BINDING,Qo.UNIFORM_BUFFER,1,Jo.VERTEX),us.LAYOUT=new ur(Yr.LOCAL,us.BINDING,us.NAME,[new mr("cc_matWorlds",wo.MAT4,us.BATCHING_COUNT)],1),jr.layouts[us.NAME]=us.LAYOUT,jr.bindings[us.BINDING]=us.DESCRIPTOR;var _s=e("ej",(function(){}));_s.LIGHTS_PER_PASS=1,_s.LIGHT_POS_OFFSET=0,_s.LIGHT_COLOR_OFFSET=_s.LIGHT_POS_OFFSET+4*_s.LIGHTS_PER_PASS,_s.LIGHT_SIZE_RANGE_ANGLE_OFFSET=_s.LIGHT_COLOR_OFFSET+4*_s.LIGHTS_PER_PASS,_s.LIGHT_DIR_OFFSET=_s.LIGHT_SIZE_RANGE_ANGLE_OFFSET+4*_s.LIGHTS_PER_PASS,_s.COUNT=_s.LIGHT_DIR_OFFSET+4*_s.LIGHTS_PER_PASS,_s.SIZE=4*_s.COUNT,_s.NAME="CCForwardLight",_s.BINDING=qr.UBO_FORWARD_LIGHTS,_s.DESCRIPTOR=new Er(_s.BINDING,Qo.DYNAMIC_UNIFORM_BUFFER,1,Jo.FRAGMENT),_s.LAYOUT=new ur(Yr.LOCAL,_s.BINDING,_s.NAME,[new mr("cc_lightPos",wo.FLOAT4,_s.LIGHTS_PER_PASS),new mr("cc_lightColor",wo.FLOAT4,_s.LIGHTS_PER_PASS),new mr("cc_lightSizeRangeAngle",wo.FLOAT4,_s.LIGHTS_PER_PASS),new mr("cc_lightDir",wo.FLOAT4,_s.LIGHTS_PER_PASS)],1),jr.layouts[_s.NAME]=_s.LAYOUT,jr.bindings[_s.BINDING]=_s.DESCRIPTOR;var fs=e("fB",(function(){}));fs.JOINTS_TEXTURE_INFO_OFFSET=0,fs.COUNT=fs.JOINTS_TEXTURE_INFO_OFFSET+4,fs.SIZE=4*fs.COUNT,fs.NAME="CCSkinningTexture",fs.BINDING=qr.UBO_SKINNING_TEXTURE,fs.DESCRIPTOR=new Er(fs.BINDING,Qo.UNIFORM_BUFFER,1,Jo.VERTEX),fs.LAYOUT=new ur(Yr.LOCAL,fs.BINDING,fs.NAME,[new mr("cc_jointTextureInfo",wo.FLOAT4,1)],1),jr.layouts[fs.NAME]=fs.LAYOUT,jr.bindings[fs.BINDING]=fs.DESCRIPTOR;var hs=e("fz",(function(){}));hs.JOINTS_ANIM_INFO_OFFSET=0,hs.COUNT=hs.JOINTS_ANIM_INFO_OFFSET+4,hs.SIZE=4*hs.COUNT,hs.NAME="CCSkinningAnimation",hs.BINDING=qr.UBO_SKINNING_ANIMATION,hs.DESCRIPTOR=new Er(hs.BINDING,Qo.UNIFORM_BUFFER,1,Jo.VERTEX),hs.LAYOUT=new ur(Yr.LOCAL,hs.BINDING,hs.NAME,[new mr("cc_jointAnimInfo",wo.FLOAT4,1)],1),jr.layouts[hs.NAME]=hs.LAYOUT,jr.bindings[hs.BINDING]=hs.DESCRIPTOR;var ds=e("fD","a_jointAnimInfo"),vs=e("fA",(function(){}));vs.JOINTS_OFFSET=0,vs.COUNT=vs.JOINTS_OFFSET+360,vs.SIZE=4*vs.COUNT,vs.NAME="CCSkinning",vs.BINDING=qr.UBO_SKINNING_TEXTURE,vs.DESCRIPTOR=new Er(vs.BINDING,Qo.UNIFORM_BUFFER,1,Jo.VERTEX),vs.LAYOUT=new ur(Yr.LOCAL,vs.BINDING,vs.NAME,[new mr("cc_joints",wo.FLOAT4,90)],1),jr.layouts[vs.NAME]=vs.LAYOUT,jr.bindings[vs.BINDING]=vs.DESCRIPTOR;var ps=e("fG",(function(){}));ps.MAX_MORPH_TARGET_COUNT=60,ps.OFFSET_OF_WEIGHTS=0,ps.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH=4*ps.MAX_MORPH_TARGET_COUNT,ps.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT=ps.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH+4,ps.OFFSET_OF_VERTICES_COUNT=ps.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT+4,ps.COUNT_BASE_4_BYTES=4*Math.ceil(ps.MAX_MORPH_TARGET_COUNT/4)+4,ps.SIZE=4*ps.COUNT_BASE_4_BYTES,ps.NAME="CCMorph",ps.BINDING=qr.UBO_MORPH,ps.DESCRIPTOR=new Er(ps.BINDING,Qo.UNIFORM_BUFFER,1,Jo.VERTEX),ps.LAYOUT=new ur(Yr.LOCAL,ps.BINDING,ps.NAME,[new mr("cc_displacementWeights",wo.FLOAT4,ps.MAX_MORPH_TARGET_COUNT/4),new mr("cc_displacementTextureInfo",wo.FLOAT4,1)],1),jr.layouts[ps.NAME]=ps.LAYOUT,jr.bindings[ps.BINDING]=ps.DESCRIPTOR;var gs=e("fC",qr.SAMPLER_JOINTS),xs=new Er(gs,Qo.SAMPLER,1,Jo.VERTEX),ys=new _r(Yr.LOCAL,gs,"cc_jointTexture",wo.SAMPLER2D,1);jr.layouts.cc_jointTexture=ys,jr.bindings[gs]=xs;var As=e("fM",qr.SAMPLER_MORPH_POSITION),Ts=new Er(As,Qo.SAMPLER,1,Jo.VERTEX),Cs=new _r(Yr.LOCAL,As,"cc_PositionDisplacements",wo.SAMPLER2D,1);jr.layouts.cc_PositionDisplacements=Cs,jr.bindings[As]=Ts;var Es=e("fL",qr.SAMPLER_MORPH_NORMAL),Ss=new Er(Es,Qo.SAMPLER,1,Jo.VERTEX),Is=new _r(Yr.LOCAL,Es,"cc_NormalDisplacements",wo.SAMPLER2D,1);jr.layouts.cc_NormalDisplacements=Is,jr.bindings[Es]=Ss;var Rs=e("fK",qr.SAMPLER_MORPH_TANGENT),Ns=new Er(Rs,Qo.SAMPLER,1,Jo.VERTEX),ws=new _r(Yr.LOCAL,Rs,"cc_TangentDisplacements",wo.SAMPLER2D,1);jr.layouts.cc_TangentDisplacements=ws,jr.bindings[Rs]=Ns;var bs=e("ex",qr.SAMPLER_LIGHTMAP),Os=new Er(bs,Qo.SAMPLER,1,Jo.FRAGMENT),Ps=new _r(Yr.LOCAL,bs,"cc_lightingMap",wo.SAMPLER2D,1);jr.layouts.cc_lightingMap=Ps,jr.bindings[bs]=Os;var Ms=qr.SAMPLER_SPRITE,Ds=new Er(Ms,Qo.SAMPLER,1,Jo.FRAGMENT),zs=new _r(Yr.LOCAL,Ms,"cc_spriteTexture",wo.SAMPLER2D,1);jr.layouts.cc_spriteTexture=zs,jr.bindings[Ms]=Ds;var Ls=e("ev",Lr.makeMaskExclude([Lr.BitMask.UI_2D,Lr.BitMask.GIZMOS,Lr.BitMask.EDITOR,Lr.BitMask.SCENE_GIZMO,Lr.BitMask.PROFILER])),Fs=Lr.makeMaskExclude([Lr.BitMask.UI_2D,Lr.BitMask.PROFILER]),Us=Lr.Enum.ALL;e("dW",Object.freeze({__proto__:null,PIPELINE_FLOW_FORWARD:Br,PIPELINE_FLOW_SHADOW:Gr,PIPELINE_FLOW_SMAA:"SMAAFlow",PIPELINE_FLOW_TONEMAP:"ToneMapFlow",get RenderPassStage(){return Fr},get RenderPriority(){return Ur},globalDescriptorSetLayout:Hr,localDescriptorSetLayout:jr,get PipelineGlobalBindings(){return Vr},get ModelLocalBindings(){return qr},get SetIndex(){return Yr},bindingMappingInfo:Jr,UBOGlobal:Qr,UBOCamera:Zr,UBOShadow:$r,UNIFORM_SHADOWMAP_BINDING:es,UNIFORM_ENVIRONMENT_BINDING:is,UNIFORM_SPOT_LIGHTING_MAP_TEXTURE_BINDING:rs,UBOLocal:ls,INST_MAT_WORLD:ms,UBOLocalBatched:us,UBOForwardLight:_s,JOINT_UNIFORM_CAPACITY:30,UBOSkinningTexture:fs,UBOSkinningAnimation:hs,INST_JOINT_ANIM_INFO:ds,UBOSkinning:vs,UBOMorph:ps,UNIFORM_JOINT_TEXTURE_BINDING:gs,UNIFORM_POSITION_MORPH_TEXTURE_BINDING:As,UNIFORM_NORMAL_MORPH_TEXTURE_BINDING:Es,UNIFORM_TANGENT_MORPH_TEXTURE_BINDING:Rs,UNIFORM_LIGHTMAP_TEXTURE_BINDING:bs,UNIFORM_SPRITE_TEXTURE_BINDING:Ms,CAMERA_DEFAULT_MASK:Ls,CAMERA_EDITOR_MASK:Fs,MODEL_ALWAYS_MASK:Us}));var Bs=function(){},Gs=function(){return Bs},Vs=Hs((function(){}));function Hs(e){return function(t){return"function"==typeof t?e(t):function(n){return e(n,t)}}}function js(e){return function(t){return function(n){!function(e,t,n){var i=qs(e);if(i){var o=ks(i,"proto");ks(o,"editor")[t]=n}}(n,e,t)}}}function qs(e){return ks(e,"__ccclassCache__")}function ks(e,t){return e[t]||(e[t]={})}var Ws=e("e2",Hs((function(e,t){var n=_t.getSuper(e);n===Object&&(n=null);var i={name:t,extends:n,ctor:e},o=e.__ccclassCache__;if(o){var a=o.proto;a&&_t.mixin(i,a),e.__ccclassCache__=void 0}return rn(i)}))),Ys=e("fS",js("requireComponent")),Xs=e("fw",js("executionOrder")),Ks=e("fR",Vs);function Js(e,t,n){var i=null;function o(e,t,n){var o=qs(e.constructor);if(o){var a=ks(o,"proto"),r=ks(a,"properties");!function(e,t,n,i,o,a){var r,s=o&&(o.get||o.set);i&&(r=Jt(i,s));var c=t[n],l=_t.mixin(c||{},r||i||{});if(s)o.get&&(l.get=o.get),o.set&&(l.set=o.set);else if(o)o.initializer&&(l.default=function(e){var t;try{t=e()}catch(t){return e}return"object"!=typeof t||null===t?t:e}(o.initializer));else{var m=a.default||(a.default=function(e){var t;try{t=new e}catch(e){return{}}return t}(e));m.hasOwnProperty(n)&&(l.default=m[n])}t[n]=l}(e.constructor,r,t,i,n,o)}}return void 0===e?Js({type:void 0}):void 0===t?(i=e,o):void o(e,t,n)}var Qs=e("ea",(function(e,t,n){return Js($s({}))(e,t,n)})),Zs=e("fX",(function(e,t,n){return Js({editorOnly:!0})(e,t,n)}));function $s(e){return e.__noImplicit=!0,"serializable"in e||(e.serializable=!0),e}var ec=e("fr",Vs),tc=e("ft",Gs),nc=e("g2",Vs),ic=Gs,oc=Gs,ac=e("fs",Gs),rc=e("e9",Bs),sc=e("fm",Gs),cc=(e("g3",Bs),e("fj",Gs)),lc=e("fu",Gs),mc=(e("fn",Gs),e("fp",Gs)),uc=e("fV",Gs),_c=(e("fo",Gs),e("fl",Bs),e("eb",Gs),e("fy",Gs),e("f_",Bs),e("fQ",Bs),e("fO",Bs)),fc=pc(Gt),hc=e("f1",pc(Vt)),dc=pc(Ht),vc=e("fP",pc(jt));function pc(e){return Js({type:e})}var gc=e("e6",(function(e,t,n){return Js({__noImplicit:!0,override:!0})(e,t,n)})),xc=e("eC",function(){function e(e){this._map=null,this._count=0,e?(this._map=e,this._count=Object.keys(e).length):(this._map=_t.createMap(!0),this._count=0)}var t=e.prototype;return t.add=function(e,t){return e in this._map||this._count++,this._map[e]=t},t.get=function(e){return this._map[e]},t.has=function(e){return e in this._map},t.remove=function(e){var t=this._map[e];return e in this._map&&(delete this._map[e],this._count--),t},t.clear=function(){0!==this._count&&(this._map=_t.createMap(!0),this._count=0)},t.forEach=function(e){for(var t in this._map)e(this._map[t],t)},t.find=function(e){for(var t in this._map)if(e(this._map[t],t))return this._map[t];return null},t.destroy=function(){this._map=null},X(e,[{key:"count",get:function(){return this._count}}]),e}()),yc=e("eQ",function(){function e(t,n){this.id=e._pipelineId++,this.name="",this.pipes=[],this.name=t;for(var i=0,o=n.length;i<o;i++)this.pipes.push(n[i])}var t=e.prototype;return t.insert=function(e,t){return t>this.pipes.length?(S(4921),this):(this.pipes.splice(t,0,e),this)},t.append=function(e){return this.pipes.push(e),this},t.remove=function(e){return this.pipes.splice(e,1),this},t.sync=function(e){var t=this.pipes;if(0===t.length)return null;e.isFinish=!1;for(var n=0,i=t.length;n<i;){var o=(0,t[n])(e);if(o)return e.isFinish=!0,o;++n!==i&&(e.input=e.output,e.output=null)}return e.isFinish=!0,e.output},t.async=function(e){0!==this.pipes.length&&(e.isFinish=!1,this._flow(0,e))},t._flow=function(e,t){var n=this;(0,this.pipes[e])(t,(function(i){i?(t.isFinish=!0,t.dispatch("complete",i)):++e<n.pipes.length?(t.input=t.output,t.output=null,n._flow(e,t)):(t.isFinish=!0,t.dispatch("complete",i,t.output))}))},e}());yc._pipelineId=0,e("eK",new xc);var Ac,Tc,Cc=e("eG",new xc),Ec=e("eN",new xc),Sc=e("eW",new xc),Ic=(e("eR",new yc("normal load",[])),e("eJ",new yc("fetch",[])),e("eT",new yc("transform url",[])));e("e$",null),function(e){e.UUID="uuid",e.PATH="path",e.DIR="dir",e.URL="url",e.SCENE="scene"}(Ac||(Ac=e("eS",{}))),e("eV",{default:{priority:0},preload:{maxConcurrency:6,maxRequestsPerFrame:2,priority:-1},scene:{maxConcurrency:20,maxRequestsPerFrame:20,priority:1},bundle:{maxConcurrency:20,maxRequestsPerFrame:20,priority:2},remote:{maxRetryCount:4}}),function(e){e.RESOURCES="resources",e.MAIN="main",e.START_SCENE="start-scene"}(Tc||(Tc=e("eZ",{})));var Rc=e("eI",function(){function e(t){this.id=e._taskId++,this.onComplete=null,this.onProgress=null,this.onError=null,this.source=null,this.output=null,this.input=null,this.progress=null,this.options=null,this.isFinish=!0,this.set(t)}e.create=function(t){var n;return 0!==e._deadPool.length?(n=e._deadPool.pop()).set(t):n=new e(t),n};var t=e.prototype;return t.set=function(e){void 0===e&&(e=Object.create(null)),this.onComplete=e.onComplete||null,this.onProgress=e.onProgress||null,this.onError=e.onError||null,this.source=this.input=e.input,this.output=null,this.progress=e.progress,this.options=e.options||Object.create(null)},t.dispatch=function(e,t,n,i,o){switch(e){case"complete":this.onComplete&&this.onComplete(t,n);break;case"progress":this.onProgress&&this.onProgress(t,n,i,o);break;case"error":this.onError&&this.onError(t,n,i,o);break;default:var a="on"+e[0].toUpperCase()+e.substr(1);"function"==typeof this[a]&&this[a](t,n,i,o)}},t.recycle=function(){e._deadPool.length!==e.MAX_DEAD_NUM&&(this.onComplete=null,this.onProgress=null,this.onError=null,this.source=this.output=this.input=null,this.progress=null,this.options=null,e._deadPool.push(this))},e}());Rc.MAX_DEAD_NUM=500,Rc._taskId=0,Rc._deadPool=[];var Nc="0123456789abcdef".split(""),wc=["","","",""],bc=wc.concat(wc,"-",wc,"-",wc,"-",wc,"-",wc,wc,wc),Oc=bc.map((function(e,t){return"-"===e?NaN:t})).filter(isFinite);function Pc(e){var t=e.split("@")[0];if(22!==t.length)return e;bc[0]=e[0],bc[1]=e[1];for(var n=2,i=2;n<22;n+=2){var o=Et[e.charCodeAt(n)],a=Et[e.charCodeAt(n+1)];bc[Oc[i++]]=Nc[o>>2],bc[Oc[i++]]=Nc[(3&o)<<2|a>>4],bc[Oc[i++]]=Nc[15&a]}return e.replace(t,bc.join(""))}var Mc=/.*[/\\][0-9a-fA-F]{2}[/\\]([0-9a-fA-F-@]{8,}).*/;function Dc(e){var t=Mc.exec(e);return t?t[1]:""}function zc(e,t){(t=t||Object.create(null)).__isNative__=t.isNative,t.ext=t.nativeExt;var n=Sc.find((function(t){return!!t.getAssetInfo(e)}));return n&&(t.bundle=n.name),Uc(e,t)}function Lc(e){return e&&(e instanceof r.SceneAsset||e instanceof r.Scene)}function Fc(e){return e&&(46===e.charCodeAt(0)&&47===e.charCodeAt(1)?e=e.slice(2):47===e.charCodeAt(0)&&(e=e.slice(1))),e}function Uc(e,t){var n=Rc.create({input:e,options:t}),i=[];try{for(var o,a=ne(Ic.sync(n));!(o=a()).done;){var r=o.value,s=r.url;r.recycle(),i.push(s)}}catch(e){for(var c,l=ne(n.output);!(c=l()).done;)c.value.recycle();p(e.message,e.stack)}return n.recycle(),i.length>1?i:i[0]}e("e_",Object.freeze({__proto__:null,getUuidFromURL:Dc,getUrlWithUuid:zc,isScene:Lc,normalize:Fc,transform:Uc,decodeUuid:Pc}));var Bc=e("c2",function(){function e(e,t){this.type=void 0,this.bubbles=void 0,this.target=null,this.currentTarget=null,this.eventPhase=0,this.propagationStopped=!1,this.propagationImmediateStopped=!1,this.type=e,this.bubbles=!!t}var t=e.prototype;return t.unuse=function(){this.type=e.NO_TYPE,this.target=null,this.currentTarget=null,this.eventPhase=e.NONE,this.propagationStopped=!1,this.propagationImmediateStopped=!1},t.reuse=function(e,t){this.type=e,this.bubbles=t||!1},t.isStopped=function(){return this.propagationStopped||this.propagationImmediateStopped},t.getCurrentTarget=function(){return this.currentTarget},t.getType=function(){return this.type},e}());Bc.NO_TYPE="no_type",Bc.TOUCH="touch",Bc.MOUSE="mouse",Bc.KEYBOARD="keyboard",Bc.ACCELERATION="acceleration",Bc.NONE=0,Bc.CAPTURING_PHASE=1,Bc.AT_TARGET=2,Bc.BUBBLING_PHASE=3,r.Event=Bc;var Gc=e("P",function(){function e(e,t){this._ctor=void 0,this._elementsPerBatch=void 0,this._nextAvail=void 0,this._freepool=[],this._ctor=e,this._elementsPerBatch=Math.max(t,1),this._nextAvail=this._elementsPerBatch-1;for(var n=0;n<this._elementsPerBatch;++n)this._freepool.push(e())}var t=e.prototype;return t.alloc=function(){if(this._nextAvail<0){for(var e=this._elementsPerBatch,t=0;t<e;t++)this._freepool.push(this._ctor());this._nextAvail=e-1}var n=this._freepool[this._nextAvail--];return this._freepool.length--,n},t.free=function(e){this._freepool.push(e),this._nextAvail++},t.freeArray=function(e){Array.prototype.push.apply(this._freepool,e),this._nextAvail+=e.length},t.destroy=function(e){if(e)for(var t=0;t<=this._nextAvail;t++)e(this._freepool[t]);this._freepool.length=0,this._nextAvail=-1},e}()),Vc=(e("R",function(){function e(e,t){this._fn=void 0,this._count=0,this._data=void 0,this._fn=e,this._data=new Array(t);for(var n=0;n<t;++n)this._data[n]=e()}var t=e.prototype;return t.reset=function(){this._count=0},t.resize=function(e){if(e>this._data.length)for(var t=this._data.length;t<e;++t)this._data[t]=this._fn()},t.add=function(){return this._count>=this._data.length&&this.resize(2*this._data.length),this._data[this._count++]},t.removeAt=function(e){if(!(e>=this._count)){var t=this._count-1,n=this._data[e];this._data[e]=this._data[t],this._data[t]=n,this._count-=1}},X(e,[{key:"length",get:function(){return this._count}},{key:"data",get:function(){return this._data}}]),e}()),e("C",function(){function e(e,t){this.array=void 0,this.length=0,this._compareFn=void 0,this.array=new Array(e),this.length=0,this._compareFn=void 0!==t?t:function(e,t){return e-t}}var t=e.prototype;return t.push=function(e){this.array[this.length++]=e},t.pop=function(){return this.array[--this.length]},t.get=function(e){return this.array[e]},t.clear=function(){this.length=0},t.destroy=function(){this.length=0,this.array.length=0},t.sort=function(){this.array.length=this.length,this.array.sort(this._compareFn)},t.concat=function(e){for(var t=0;t<e.length;++t)this.array[this.length++]=e[t]},t.fastRemove=function(e){if(!(e>=this.length||e<0)){var t=--this.length;this.array[e]=this.array[t]}},t.indexOf=function(e){return this.array.indexOf(e)},e}()),[]),Hc=e("bU",function(){function e(e){void 0===e&&(e=""),this._objFlags=void 0,this._name=void 0,this._name=e,this._objFlags=0}e._deferredDestroy=function(){for(var e=Vc.length,t=0;t<e;++t){var n=Vc[t];1&n._objFlags||n._destroyImmediate()}e===Vc.length?Vc.length=0:Vc.splice(0,e)};var t=e.prototype;return t.destroy=function(){return 1&this._objFlags?(S(5e3),!1):!(4&this._objFlags||(this._objFlags|=4,Vc.push(this),0))},t._destruct=function(){var e=this.constructor,t=e.__destruct__;t||(t=function(e,t){var n,i=e instanceof r._BaseNode||e instanceof r.Component,o=i?"_id":null,a={};for(n in e)if(e.hasOwnProperty(n)){if(n===o)continue;switch(typeof e[n]){case"string":a[n]="";break;case"object":case"function":a[n]=null}}if(rn._isCCClass(t))for(var s=r.Class.Attr.getClassAttrs(t),c=t.__props__,l=0;l<c.length;l++){var m=(n=c[l])+r.Class.Attr.DELIMETER+"default";if(m in s){if(i&&"_id"===n)continue;switch(typeof s[m]){case"string":a[n]="";break;case"object":case"function":a[n]=null;break;case"undefined":a[n]=void 0}}}return function(e){for(var t in a)e[t]=a[t]}}(this,e),Pe(e,"__destruct__",t,!0)),t(this)},t._destroyImmediate=function(){1&this._objFlags?R(5e3):(this._onPreDestroy&&this._onPreDestroy(),this._destruct(),this._objFlags|=1)},X(e,[{key:"name",get:function(){return this._name},set:function(e){this._name=e}},{key:"isValid",get:function(){return!(1&this._objFlags)}}]),e}()),jc=Hc.prototype;function qc(e,t){return"object"==typeof e?!(!e||e._objFlags&(t?5:1)):void 0!==e}jc._deserialize=null,jc._onPreDestroy=null,rn.fastDefine("cc.Object",Hc,{_name:"",_objFlags:0}),Pe(Hc,"Flags",{Destroyed:1,DontSave:8,EditorOnly:16,Dirty:32,DontDestroy:64,PersistentMask:-4192741,Destroying:128,Deactivating:256,LockedInEditor:512,HideInHierarchy:1024,IsPreloadStarted:8192,IsOnLoadStarted:32768,IsOnLoadCalled:16384,IsOnEnableCalled:2048,IsStartCalled:65536,IsEditorOnEnableCalled:4096,IsPositionLocked:1<<21,IsRotationLocked:1<<17,IsScaleLocked:1<<18,IsAnchorLocked:1<<19,IsSizeLocked:1<<20}),r.isValid=qc,r.Object=Hc;var kc=ut.fastRemoveAt;function Wc(){}var Yc=function(){function e(){this.callback=Wc,this.target=void 0,this.once=!1}var t=e.prototype;return t.set=function(e,t,n){this.callback=e||Wc,this.target=t,this.once=!!n},t.reset=function(){this.target=void 0,this.callback=Wc,this.once=!1},t.check=function(){return!(this.target instanceof Hc&&!qc(this.target,!0))},e}(),Xc=new Gc((function(){return new Yc}),32),Kc=function(){function e(){this.callbackInfos=[],this.isInvoking=!1,this.containCanceled=!1}var t=e.prototype;return t.removeByCallback=function(e){for(var t=0;t<this.callbackInfos.length;++t){var n=this.callbackInfos[t];n&&n.callback===e&&(n.reset(),Xc.free(n),kc(this.callbackInfos,t),--t)}},t.removeByTarget=function(e){for(var t=0;t<this.callbackInfos.length;++t){var n=this.callbackInfos[t];n&&n.target===e&&(n.reset(),Xc.free(n),kc(this.callbackInfos,t),--t)}},t.cancel=function(e){var t=this.callbackInfos[e];t&&(t.reset(),this.isInvoking?this.callbackInfos[e]=null:kc(this.callbackInfos,e),Xc.free(t)),this.containCanceled=!0},t.cancelAll=function(){for(var e=0;e<this.callbackInfos.length;e++){var t=this.callbackInfos[e];t&&(t.reset(),Xc.free(t),this.callbackInfos[e]=null)}this.containCanceled=!0},t.purgeCanceled=function(){for(var e=this.callbackInfos.length-1;e>=0;--e)this.callbackInfos[e]||kc(this.callbackInfos,e);this.containCanceled=!1},t.clear=function(){this.cancelAll(),this.callbackInfos.length=0,this.isInvoking=!1,this.containCanceled=!1},e}(),Jc=new Gc((function(){return new Kc}),16),Qc=e("fk",function(){function e(){this._callbackTable=Le(!0)}var t=e.prototype;return t.on=function(e,t,n,i){if(!this.hasEventListener(e,t,n)){var o=this._callbackTable[e];o||(o=this._callbackTable[e]=Jc.alloc());var a=Xc.alloc();a.set(t,n,i),o.callbackInfos.push(a)}return t},t.hasEventListener=function(e,t,n){var i=this._callbackTable&&this._callbackTable[e];if(!i)return!1;var o=i.callbackInfos;if(!t){if(i.isInvoking){for(var a=0;a<o.length;++a)if(o[a])return!0;return!1}return o.length>0}for(var r=0;r<o.length;++r){var s=o[r];if(s&&s.check()&&s.callback===t&&s.target===n)return!0}return!1},t.removeAll=function(e){if("string"==typeof e){var t=this._callbackTable&&this._callbackTable[e];t&&(t.isInvoking?t.cancelAll():(t.clear(),Jc.free(t),delete this._callbackTable[e]))}else if(e)for(var n in this._callbackTable){var i=this._callbackTable[n];if(i.isInvoking)for(var o=i.callbackInfos,a=0;a<o.length;++a){var r=o[a];r&&r.target===e&&i.cancel(a)}else i.removeByTarget(e)}},t.off=function(e,t,n){var i=this._callbackTable&&this._callbackTable[e];if(i){var o=i.callbackInfos;if(t)for(var a=0;a<o.length;++a){var r=o[a];if(r&&r.callback===t&&r.target===n){i.cancel(a);break}}else this.removeAll(e)}},t.emit=function(e,t,n,i,o,a){var r=this._callbackTable&&this._callbackTable[e];if(r){var s=!r.isInvoking;r.isInvoking=!0;for(var c=r.callbackInfos,l=0,m=c.length;l<m;++l){var u=c[l];if(u){var _=u.callback,f=u.target;u.once&&this.off(e,_,f),u.check()?f?_.call(f,t,n,i,o,a):_(t,n,i,o,a):this.off(e,_,f)}}s&&(r.isInvoking=!1,r.containCanceled&&r.purgeCanceled())}},t.clear=function(){for(var e in this._callbackTable){var t=this._callbackTable[e];t&&(t.clear(),Jc.free(t),delete this._callbackTable[e])}},e}());function Zc(e){for(var t=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this)._callbackTable=Le(!0),t}J(t,e);var n=t.prototype;return n.once=function(e,t,n){return this.on(e,t,n,!0)},n.targetOff=function(e){this.removeAll(e)},t}(e),n=Qc.prototype,i=Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n)),o=0;o<i.length;++o){var a=i[o];if(!(a in t.prototype)){var r=Object.getOwnPropertyDescriptor(n,a);r&&Object.defineProperty(t.prototype,a,r)}}return t}var $c,el,tl,nl,il,ol=e("c3",Zc((function(){})));r.EventTarget=ol;var al=e("c5",Ws("cc.Asset")((il=nl=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this).loaded=!0,ie(t,"_native",tl,ee(t)),t._nativeUrl="",t.__onLoadedInvoked__=!1,t.__nativeDepend__=null,t.__asyncLoadAssets__=!1,t.__depends__=null,t._file=null,t._ref=0,Object.defineProperty(ee(t),"_uuid",{value:"",writable:!0}),t}J(t,e),t.deserialize=function(e){return r.deserialize(e)},X(t,[{key:"nativeUrl",get:function(){if(!this._nativeUrl){if(!this._native)return"";var e=this._native;if(47===e.charCodeAt(0))return e.slice(1);46===e.charCodeAt(0)?this._nativeUrl=zc(this._uuid,{nativeExt:e,isNative:!0}):this._nativeUrl=zc(this._uuid,{__nativeName__:e,nativeExt:U(e),isNative:!0})}return this._nativeUrl}},{key:"_nativeAsset",get:function(){return this._file},set:function(e){this._file=e}}]);var n=t.prototype;return n.toString=function(){return this.nativeUrl},n.serialize=function(){},n._setRawAsset=function(e,t){void 0===t&&(t=!0),this._native=!1!==t?e||"":"/"+e},n.addRef=function(){return this._ref++,this},n.decRef=function(e){return void 0===e&&(e=!0),this._ref>0&&this._ref--,e&&r.assetManager._releaseManager.tryRelease(this),this},n.onLoaded=function(){},X(t,[{key:"_nativeDep",get:function(){if(this._native)return{__isNative__:!0,uuid:this._uuid,ext:this._native}}},{key:"refCount",get:function(){return this._ref}}]),t}(Zc(Hc)),nl.preventDeferredLoadDependents=!1,nl.preventPreloadNativeObject=!1,tl=oe((el=il).prototype,"_native",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),oe(el.prototype,"_nativeAsset",[Js],Object.getOwnPropertyDescriptor(el.prototype,"_nativeAsset"),el.prototype),$c=el))||$c);al.prototype.createNode=null,r.Asset=al;var rl,sl,cl,ll,ml,ul,_l,fl=1024;function hl(e){return r.sys.capabilities.imageBitmap&&e instanceof ImageBitmap}!function(e){e[e.RGB565=bo.R5G6B5]="RGB565",e[e.RGB5A1=bo.RGB5A1]="RGB5A1",e[e.RGBA4444=bo.RGBA4]="RGBA4444",e[e.RGB888=bo.RGB8]="RGB888",e[e.RGB32F=bo.RGB32F]="RGB32F",e[e.RGBA8888=bo.RGBA8]="RGBA8888",e[e.RGBA32F=bo.RGBA32F]="RGBA32F",e[e.A8=bo.A8]="A8",e[e.I8=bo.L8]="I8",e[e.AI8=bo.LA8]="AI8",e[e.RGB_PVRTC_2BPPV1=bo.PVRTC_RGB2]="RGB_PVRTC_2BPPV1",e[e.RGBA_PVRTC_2BPPV1=bo.PVRTC_RGBA2]="RGBA_PVRTC_2BPPV1",e[e.RGB_A_PVRTC_2BPPV1=fl++]="RGB_A_PVRTC_2BPPV1",e[e.RGB_PVRTC_4BPPV1=bo.PVRTC_RGB4]="RGB_PVRTC_4BPPV1",e[e.RGBA_PVRTC_4BPPV1=bo.PVRTC_RGBA4]="RGBA_PVRTC_4BPPV1",e[e.RGB_A_PVRTC_4BPPV1=fl++]="RGB_A_PVRTC_4BPPV1",e[e.RGB_ETC1=bo.ETC_RGB8]="RGB_ETC1",e[e.RGBA_ETC1=fl++]="RGBA_ETC1",e[e.RGB_ETC2=bo.ETC2_RGB8]="RGB_ETC2",e[e.RGBA_ETC2=bo.ETC2_RGBA8]="RGBA_ETC2",e[e.RGBA_ASTC_4x4=bo.ASTC_RGBA_4x4]="RGBA_ASTC_4x4",e[e.RGBA_ASTC_5x4=bo.ASTC_RGBA_5x4]="RGBA_ASTC_5x4",e[e.RGBA_ASTC_5x5=bo.ASTC_RGBA_5x5]="RGBA_ASTC_5x5",e[e.RGBA_ASTC_6x5=bo.ASTC_RGBA_6x5]="RGBA_ASTC_6x5",e[e.RGBA_ASTC_6x6=bo.ASTC_RGBA_6x6]="RGBA_ASTC_6x6",e[e.RGBA_ASTC_8x5=bo.ASTC_RGBA_8x5]="RGBA_ASTC_8x5",e[e.RGBA_ASTC_8x6=bo.ASTC_RGBA_8x6]="RGBA_ASTC_8x6",e[e.RGBA_ASTC_8x8=bo.ASTC_RGBA_8x8]="RGBA_ASTC_8x8",e[e.RGBA_ASTC_10x5=bo.ASTC_RGBA_10x5]="RGBA_ASTC_10x5",e[e.RGBA_ASTC_10x6=bo.ASTC_RGBA_10x6]="RGBA_ASTC_10x6",e[e.RGBA_ASTC_10x8=bo.ASTC_RGBA_10x8]="RGBA_ASTC_10x8",e[e.RGBA_ASTC_10x10=bo.ASTC_RGBA_10x10]="RGBA_ASTC_10x10",e[e.RGBA_ASTC_12x10=bo.ASTC_RGBA_12x10]="RGBA_ASTC_12x10",e[e.RGBA_ASTC_12x12=bo.ASTC_RGBA_12x12]="RGBA_ASTC_12x12"}(rl||(rl=e("eP",{}))),function(e){e[e.REPEAT=ko.WRAP]="REPEAT",e[e.CLAMP_TO_EDGE=ko.CLAMP]="CLAMP_TO_EDGE",e[e.MIRRORED_REPEAT=ko.MIRROR]="MIRRORED_REPEAT",e[e.CLAMP_TO_BORDER=ko.BORDER]="CLAMP_TO_BORDER"}(sl||(sl=e("fY",{}))),function(e){e[e.NONE=qo.NONE]="NONE",e[e.LINEAR=qo.LINEAR]="LINEAR",e[e.NEAREST=qo.POINT]="NEAREST"}(cl||(cl=e("fE",{})));var dl,vl=e("c7",Ws("cc.ImageAsset")((_l=ul=function(e){function t(t){var n;return(n=e.call(this)||this)._nativeData=void 0,n._tex=void 0,n._exportedExts=void 0,n._format=rl.RGBA8888,n._width=0,n._height=0,n.loaded=!1,n._nativeData={_data:null,width:0,height:0,format:0,_compressed:!1},void 0!==t&&n.reset(t),n}J(t,e),X(t,[{key:"_nativeAsset",get:function(){return this._nativeData},set:function(e){e instanceof HTMLElement||hl(e)||(e.format=e.format||this._format),this.reset(e)}},{key:"data",get:function(){return this._nativeData&&((e=this._nativeData)instanceof HTMLImageElement||e instanceof HTMLCanvasElement||hl(e))?this._nativeData:this._nativeData&&this._nativeData._data;var e}},{key:"width",get:function(){return this._nativeData.width||this._width}},{key:"height",get:function(){return this._nativeData.height||this._height}},{key:"format",get:function(){return this._format}},{key:"isCompressed",get:function(){return this._format>=rl.RGB_ETC1&&this._format<=rl.RGBA_ASTC_12x12||this._format>=rl.RGB_A_PVRTC_2BPPV1&&this._format<=rl.RGBA_ETC1}},{key:"url",get:function(){return this.nativeUrl}},{key:"_texture",set:function(e){this._tex=e},get:function(){if(!this._tex){var e=new r.Texture2D;e.name=this.nativeUrl,e.image=this,this._tex=e}return this._tex}}]);var n=t.prototype;return n.reset=function(e){hl(e)||e instanceof HTMLElement?(this._nativeData=e,this._onDataComplete()):(this._nativeData=e,this._format=e.format,this._onDataComplete())},n.destroy=function(){return this.data&&this.data instanceof HTMLImageElement?(this.data.src="",this._setRawAsset("")):hl(this.data)&&this.data.close&&this.data.close(),e.prototype.destroy.call(this)},n._serialize=function(){},n._deserialize=function(e){var n="";"string"==typeof e?n=e:(this._width=e.w,this._height=e.h,n=e.fmt);for(var i,o=r.director.root?r.director.root.device:null,a=n.split("_"),s="",c=Number.MAX_VALUE,l=this._format,m="",u=r.macro.SUPPORT_TEXTURE_FORMATS,_=ne(a);!(i=_()).done;){var f=i.value.split("@"),h=parseInt(f[0],void 0),d=t.extnames[h]||f[0],v=u.indexOf(d);if(-1!==v&&v<c){var p=f[1]?parseInt(f[1]):this._format;if(!(".astc"!==d||o&&o.hasFeature(ma.FORMAT_ASTC)))continue;if(!(".pvr"!==d||o&&o.hasFeature(ma.FORMAT_PVRTC)))continue;if(!(p!==rl.RGB_ETC1&&p!==rl.RGBA_ETC1||o&&o.hasFeature(ma.FORMAT_ETC1)))continue;if(!(p!==rl.RGB_ETC2&&p!==rl.RGBA_ETC2||o&&o.hasFeature(ma.FORMAT_ETC2)))continue;if(".webp"===d&&!r.sys.capabilities.webp)continue;c=v,m=d,l=p}else s||(s=d)}m?(this._setRawAsset(m),this._format=l):s?(this._setRawAsset(s),S(3120,s,s)):S(3121)},n._onDataComplete=function(){this.loaded=!0,this.emit("load")},t}(al),ul.extnames=[".png",".jpg",".jpeg",".bmp",".webp",".pvr",".pkm",".astc"],oe((ml=_l).prototype,"_nativeAsset",[gc],Object.getOwnPropertyDescriptor(ml.prototype,"_nativeAsset"),ml.prototype),ll=ml))||ll);r.ImageAsset=vl,function(e){e[e.minFilter=0]="minFilter",e[e.magFilter=1]="magFilter",e[e.mipFilter=2]="mipFilter",e[e.addressU=3]="addressU",e[e.addressV=4]="addressV",e[e.addressW=5]="addressW",e[e.maxAnisotropy=6]="maxAnisotropy",e[e.cmpFunc=7]="cmpFunc",e[e.minLOD=8]="minLOD",e[e.maxLOD=9]="maxLOD",e[e.mipLODBias=10]="mipLODBias",e[e.total=11]="total"}(dl||(dl=e("V",{})));var pl=[qo.LINEAR,qo.LINEAR,qo.NONE,ko.WRAP,ko.WRAP,ko.WRAP,8,Bo.NEVER,0,0,0],gl=e("W",Al(pl)),xl=new Va,yl=new sr;function Al(e){for(var t=0,n=0,i=0;i<pl.length;i++)switch(t=e[i]||pl[i],i){case dl.minFilter:n|=t;break;case dl.magFilter:n|=t<<2;break;case dl.mipFilter:n|=t<<4;break;case dl.addressU:n|=t<<6;break;case dl.addressV:n|=t<<8;break;case dl.addressW:n|=t<<10;break;case dl.maxAnisotropy:n|=t<<12;break;case dl.cmpFunc:n|=t<<16;break;case dl.minLOD:n|=t<<20;break;case dl.maxLOD:n|=t<<24;break;case dl.mipLODBias:n|=t<<28}return n}var Tl,Cl,El,Sl,Il,Rl,Nl,wl,bl,Ol,Pl,Ml,Dl=function(){function e(){this._cache={}}return e.prototype.getSampler=function(e,t){return t||(t=gl),this._cache[t]||(yl.minFilter=3&t,yl.magFilter=t>>2&3,yl.mipFilter=t>>4&3,yl.addressU=t>>6&3,yl.addressV=t>>8&3,yl.addressW=t>>10&3,yl.maxAnisotropy=t>>12&15,yl.cmpFunc=t>>16&15,yl.minLOD=t>>20&15,yl.maxLOD=t>>24&15,yl.mipLODBias=t>>28&15,yl.borderColor=xl,this._cache[t]=e.createSampler(yl))},e}(),zl=e("Y",new Dl);r.samplerLib=zl;var Ll,Fl,Ul,Bl=new Se("Tex"),Gl=e("e1",Ws("cc.TextureBase")((Ml=Pl=function(e){function t(){var t;return ie(t=e.call(this)||this,"_format",El,ee(t)),ie(t,"_minFilter",Sl,ee(t)),ie(t,"_magFilter",Il,ee(t)),ie(t,"_mipFilter",Rl,ee(t)),ie(t,"_wrapS",Nl,ee(t)),ie(t,"_wrapT",wl,ee(t)),ie(t,"_wrapR",bl,ee(t)),ie(t,"_anisotropy",Ol,ee(t)),t._width=1,t._height=1,t._id=void 0,t._samplerInfo=[],t._samplerHash=0,t._gfxSampler=null,t._gfxDevice=null,t._textureHash=0,t._id=Bl.getNewId(),t.loaded=!1,t._gfxDevice=t._getGFXDevice(),t._textureHash=za(t._id,666),t}J(t,e),X(t,[{key:"isCompressed",get:function(){return this._format>=rl.RGB_ETC1&&this._format<=rl.RGBA_ASTC_12x12||this._format>=rl.RGB_A_PVRTC_2BPPV1&&this._format<=rl.RGBA_ETC1}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}}]);var n=t.prototype;return n.getId=function(){return this._id},n.getPixelFormat=function(){return this._format},n.getAnisotropy=function(){return this._anisotropy},n.setWrapMode=function(e,t,n){this._wrapS=e,this._samplerInfo[dl.addressU]=e,this._wrapT=t,this._samplerInfo[dl.addressV]=t,void 0!==n&&(this._wrapR=n,this._samplerInfo[dl.addressW]=n),this._samplerHash=Al(this._samplerInfo),this._gfxDevice&&(this._gfxSampler=zl.getSampler(this._gfxDevice,this._samplerHash))},n.setFilters=function(e,t){this._minFilter=e,this._samplerInfo[dl.minFilter]=e,this._magFilter=t,this._samplerInfo[dl.magFilter]=t,this._samplerHash=Al(this._samplerInfo),this._gfxDevice&&(this._gfxSampler=zl.getSampler(this._gfxDevice,this._samplerHash))},n.setMipFilter=function(e){this._mipFilter=e,this._samplerInfo[dl.mipFilter]=e,this._samplerInfo[dl.maxLOD]=e===cl.NONE?0:15,this._samplerHash=Al(this._samplerInfo),this._gfxDevice&&(this._gfxSampler=zl.getSampler(this._gfxDevice,this._samplerHash))},n.setAnisotropy=function(e){this._anisotropy=e,this._samplerInfo[dl.maxAnisotropy]=e,this._samplerHash=Al(this._samplerInfo),this._gfxDevice&&(this._gfxSampler=zl.getSampler(this._gfxDevice,this._samplerHash))},n.destroy=function(){var t=e.prototype.destroy.call(this);return t&&r.director.root&&r.director.root.batcher2D&&r.director.root.batcher2D._releaseDescriptorSetCache(this._textureHash),t},n.getHash=function(){return this._textureHash},n.getGFXTexture=function(){return null},n.getSamplerHash=function(){return this._samplerHash},n.getGFXSampler=function(){return this._gfxSampler||(this._gfxDevice?this._gfxSampler=zl.getSampler(this._gfxDevice,this._samplerHash):R(9302)),this._gfxSampler},n._serialize=function(){return""},n._deserialize=function(e){var t=e.split(",");t.unshift(""),t.length>=5&&(this.setFilters(parseInt(t[1]),parseInt(t[2])),this.setWrapMode(parseInt(t[3]),parseInt(t[4]))),t.length>=7&&(this.setMipFilter(parseInt(t[5])),this.setAnisotropy(parseInt(t[6])))},n._getGFXDevice=function(){return r.director.root?r.director.root.device:null},n._getGFXFormat=function(){return this._getGFXPixelFormat(this._format)},n._setGFXFormat=function(e){this._format=void 0===e?rl.RGBA8888:e},n._getGFXPixelFormat=function(e){return e===rl.RGBA_ETC1?e=rl.RGB_ETC1:e===rl.RGB_A_PVRTC_4BPPV1?e=rl.RGB_PVRTC_4BPPV1:e===rl.RGB_A_PVRTC_2BPPV1&&(e=rl.RGB_PVRTC_2BPPV1),e},t}(al),Pl.PixelFormat=rl,Pl.WrapMode=sl,Pl.Filter=cl,El=oe((Cl=Ml).prototype,"_format",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return rl.RGBA8888}}),Sl=oe(Cl.prototype,"_minFilter",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return cl.LINEAR}}),Il=oe(Cl.prototype,"_magFilter",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return cl.LINEAR}}),Rl=oe(Cl.prototype,"_mipFilter",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return cl.NONE}}),Nl=oe(Cl.prototype,"_wrapS",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return sl.REPEAT}}),wl=oe(Cl.prototype,"_wrapT",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return sl.REPEAT}}),bl=oe(Cl.prototype,"_wrapR",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return sl.REPEAT}}),Ol=oe(Cl.prototype,"_anisotropy",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 8}}),Tl=Cl))||Tl);r.TextureBase=Gl;var Vl=e("cd",Ws("cc.Script")(Ll=function(e){function t(){return e.apply(this,arguments)||this}return J(t,e),t}(al))||Ll);r._Script=Vl;var Hl=e("ce",Ws("cc.JavaScript")(Fl=function(e){function t(){return e.apply(this,arguments)||this}return J(t,e),t}(Vl))||Fl);r._JavaScript=Hl;var jl,ql,kl,Wl,Yl,Xl,Kl,Jl,Ql,Zl,$l,em=e("cf",Ws("cc.TypeScript")(Ul=function(e){function t(){return e.apply(this,arguments)||this}return J(t,e),t}(Vl))||Ul);r._TypeScript=em;var tm,nm,im,om,am=new Se("Comp"),rm=Hc.Flags.IsOnLoadCalled,sm=e("d_",(jl=Ws("cc.Component"),ql=cc(),kl=pc(Vl),Wl=lc(),jl(($l=Zl=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"node",Kl,ee(t)),ie(t,"_enabled",Jl,ee(t)),ie(t,"__prefab",Ql,ee(t)),t._sceneGetter=null,t._id=am.getNewId(),t}J(t,e);var n=t.prototype;return n._getRenderScene=function(){return this._sceneGetter?this._sceneGetter():this.node.scene._renderScene},n.addComponent=function(e){return this.node.addComponent(e)},n.getComponent=function(e){return this.node.getComponent(e)},n.getComponents=function(e){return this.node.getComponents(e)},n.getComponentInChildren=function(e){return this.node.getComponentInChildren(e)},n.getComponentsInChildren=function(e){return this.node.getComponentsInChildren(e)},n.destroy=function(){return!!e.prototype.destroy.call(this)&&(this._enabled&&this.node.activeInHierarchy&&r.director._compScheduler.disableComp(this),!0)},n._onPreDestroy=function(){this.unscheduleAllCallbacks(),r.director._nodeActivator.destroyComp(this),this.node._removeComponent(this)},n._instantiate=function(e){return e||(e=r.instantiate._clone(this,this)),e.node=null,e},n.schedule=function(e,t,n,i){void 0===t&&(t=0),void 0===n&&(n=r.macro.REPEAT_FOREVER),void 0===i&&(i=0),b(e,1619),b((t=t||0)>=0,1620),n=isNaN(n)?r.macro.REPEAT_FOREVER:n,i=i||0;var o=r.director.getScheduler(),a=o.isTargetPaused(this);o.schedule(e,this,t,n,i,a)},n.scheduleOnce=function(e,t){void 0===t&&(t=0),this.schedule(e,0,0,t)},n.unschedule=function(e){e&&r.director.getScheduler().unschedule(e,this)},n.unscheduleAllCallbacks=function(){r.director.getScheduler().unscheduleAllForTarget(this)},X(t,[{key:"name",get:function(){if(this._name)return this._name;var e=Fe(this),t=e.lastIndexOf(".");return t>=0&&(e=e.slice(t+1)),this.node.name+"<"+e+">"},set:function(e){this._name=e}},{key:"uuid",get:function(){return this._id}},{key:"__scriptAsset",get:function(){return null}},{key:"enabled",get:function(){return this._enabled},set:function(e){if(this._enabled!==e&&(this._enabled=e,this.node.activeInHierarchy)){var t=r.director._compScheduler;e?t.enableComp(this):t.disableComp(this)}}},{key:"enabledInHierarchy",get:function(){return this._enabled&&this.node&&this.node.activeInHierarchy}},{key:"_isOnLoadCalled",get:function(){return this._objFlags&rm}}]),t}(Hc),Zl.system=null,oe((Xl=$l).prototype,"__scriptAsset",[ql,kl,Wl,_c],Object.getOwnPropertyDescriptor(Xl.prototype,"__scriptAsset"),Xl.prototype),Kl=oe(Xl.prototype,"node",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Jl=oe(Xl.prototype,"_enabled",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Ql=oe(Xl.prototype,"__prefab",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Yl=Xl))||Yl)),cm=sm.prototype;cm.update=null,cm.lateUpdate=null,cm.__preload=null,cm.onLoad=null,cm.start=null,cm.onEnable=null,cm.onDisable=null,cm.onDestroy=null,cm.onFocusInEditor=null,cm.onLostFocusInEditor=null,cm.resetInEditor=null,cm._getLocalBounds=null,cm.onRestore=null,sm._requireComponent=null,sm._executionOrder=0,Pe(sm,"_registerEditorProps",(function(e,t){var n=t.requireComponent;n&&(e._requireComponent=n);var i=t.executionOrder;i&&"number"==typeof i&&(e._executionOrder=i)})),r.Component=sm;var lm=e("dZ",Ws("cc.MissingScript")(tm=ic()((om=function(e){function t(){var t;return ie(t=e.call(this)||this,"_$erialized",im,ee(t)),t}return J(t,e),t.safeFindClass=function(e){var t=st(e);if(t)return t;r.deserialize.reportMissingClass(e)},t.prototype.onLoad=function(){S(4600,this.node.name)},t}(sm),im=oe((nm=om).prototype,"_$erialized",[Qs,Zs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),tm=nm))||tm)||tm);function mm(e){var t,n,i,o=e.deserializedList,a=e._idPropList,r=e._idList,s=e._idObjList;for(e._classFinder&&e._classFinder.onDereferenced,t=0;t<r.length;t++)n=a[t],i=r[t],s[t][n]=o[i]}r._MissingScript=lm;var um=function(){function e(e,t,n){this.result=void 0,this.customEnv=void 0,this.deserializedList=void 0,this.deserializedData=void 0,this._classFinder=void 0,this._ignoreEditorOnly=void 0,this._idList=void 0,this._idObjList=void 0,this._idPropList=void 0,this.result=e,this.customEnv=n,this.deserializedList=[],this.deserializedData=null,this._classFinder=t,this._idList=[],this._idObjList=[],this._idPropList=[]}var t=e.prototype;return t.deserialize=function(e){if(Array.isArray(e)){var t=e,n=t.length;this.deserializedList.length=n;for(var i=0;i<n;i++)t[i]&&(this.deserializedList[i]=this._deserializeObject(t[i]));this.deserializedData=n>0?this.deserializedList[0]:[],mm(this)}else{var o;this.deserializedList.length=1,o=e?this._deserializeObject(e):null,mm(this),this.deserializedList[0]=o,this.deserializedData=o}return this.deserializedData},t._deserializeObject=function(e,t,n){var i,o=null,a=null,s=e.__type__;if("TypedArray"===s){var c=e.array;o=new window[e.ctor](c.length);for(var l=0;l<c.length;++l)o[l]=c[l];return o}if(s){if(!(a=this._classFinder(s,e,t,n)))return this._classFinder===st&&r.deserialize.reportMissingClass(s),null;(o=new a)._deserialize?o._deserialize(e.content,this):r.Class._isCCClass(a)?function(e,t,n,i){var o;i.hasOwnProperty("__deserialize__")?o=i.__deserialize__:(o=function(e,t){var n,i=yt.test(lt(t)),o=r.js.isChildClassOf(t,r._BaseNode)||r.js.isChildClassOf(t,r.Component),a=[],s=a,c=[],l=c,m=[];return function(){var e=t.__values__;n="_$erialized"===e[e.length-1];for(var o=Ft(t),u=0;u<e.length;u++){var _=e[u],f=_;o[_+"$_$formerlySerializedAs"]&&(f=o[_+"$_$formerlySerializedAs"]);var h=rn.getDefault(o[_+"$_$default"]),d=!1;if(i){var v=o[_+"$_$type"];if(void 0===h&&v)d=v instanceof Bt;else{var p=typeof h;d="string"===p||"number"===p||"boolean"===p}}i&&d?(f!==_&&s===a&&(s=a.slice()),a.push(_),s!==a&&s.push(f)):(f!==_&&l===c&&(l=c.slice()),c.push(_),l!==c&&l.push(f),m.push(h instanceof r.ValueType&&h.constructor))}}(),function(e,t,r){for(var u=0;u<a.length;++u){var _=r[s[u]];void 0!==_&&(t[a[u]]=_)}for(var f=0;f<c.length;++f){var h=c[f],d=r[l[f]];if(void 0!==d)if(i||"object"==typeof d){var v=m[f];v?i||d?e._deserializeTypedObject(t[h],d,v):t[h]=null:d?e._deserializeObjField(t,d,h):t[h]=null}else t[h]=d}o&&r._id&&(t._id=r._id),n&&(t._$erialized=JSON.parse(JSON.stringify(r)),e._deserializePrimitiveObject(t._$erialized,r))}}(0,i),Pe(i,"__deserialize__",o,!0)),o(e,t,n,i)}(this,o,e,a):this._deserializeTypedObject(o,e,a)}else if(Array.isArray(e)){o=new Array(e.length);for(var m=0;m<e.length;m++)"object"==typeof(i=e[m])&&i?this._deserializeObjField(o,i,""+m)&&(o[m]=null):o[m]=i}else o={},this._deserializePrimitiveObject(o,e);return o},t._deserializeObjField=function(e,t,n){var i=t.__id__;if(void 0===i){var o=t.__uuid__;if(o)return this.result.push(e,n,o),!0;e[n]=this._deserializeObject(t)}else{var a=this.deserializedList[i];a?e[n]=a:(this._idList.push(i),this._idObjList.push(e),this._idPropList.push(n))}return!1},t._deserializePrimitiveObject=function(e,t){for(var n in t)if(t.hasOwnProperty(n)){var i=t[n];"object"!=typeof i?"__type__"!==n&&(e[n]=i):i?this._deserializeObjField(e,i,n)&&(e[n]=null):e[n]=null}},t._deserializeTypedObject=function(e,t,n){if(n===r.Vec2)return e.x=t.x||0,void(e.y=t.y||0);if(n===r.Vec3)return e.x=t.x||0,e.y=t.y||0,void(e.z=t.z||0);if(n!==r.Color){if(n===r.Size)return e.width=t.width||0,void(e.height=t.height||0);for(var i=Ft(n),o=n.__props__||Object.keys(e),a=0;a<o.length;a++){var s=o[a],c=t[s];void 0!==c&&t.hasOwnProperty(s)||(c=rn.getDefault(i[s+"$_$default"])),"object"!=typeof c?e[s]=c:c?this._deserializeObjField(e,c,s):e[s]=null}}else{e.r=t.r||0,e.g=t.g||0,e.b=t.b||0;var l=t.a;e.a=void 0===l?255:l}},e}();um.pool=void 0,um.pool=new mt((function(e){e.result=null,e.customEnv=null,e.deserializedList.length=0,e.deserializedData=null,e._classFinder=null,e._idList.length=0,e._idObjList.length=0,e._idPropList.length=0}),1),um.pool.get=function(e,t,n,i){var o=this._get();return o?(o.result=e,o.customEnv=n,o._classFinder=t,o):new um(e,t,n,i)};var _m=[Gn,An,qn,Nn,xn,Yn,Kn,Ln];function fm(e,t){e.x=t[1],e.y=t[2],e.z=t[3],e.w=t[4]}var hm=[function(e,t){e.x=t[1],e.y=t[2]},function(e,t){e.x=t[1],e.y=t[2],e.z=t[3]},fm,fm,function(e,t){e._val=t[1]},function(e,t){e.width=t[1],e.height=t[2]},function(e,t){e.x=t[1],e.y=t[2],e.width=t[3],e.height=t[4]},function(e,t){Ln.fromArray(e,t,1)}],dm=0,vm=1,pm=2,gm=3,xm=4,ym=5,Am=e("bX",function(){function e(){this.uuidObjList=null,this.uuidPropList=null,this.uuidList=null}var t=e.prototype;return t.init=function(e){this.uuidObjList=e[8],this.uuidPropList=e[9],this.uuidList=e[10]},t.reset=function(){this.uuidList=null,this.uuidObjList=null,this.uuidPropList=null},t.push=function(e,t,n){this.uuidObjList.push(e),this.uuidPropList.push(t),this.uuidList.push(n)},e}());function Tm(e,t){for(var n=e[xm][t[0]],i=n[0],o=new(0,i[0]),a=i[1],r=i[2],s=n[n.length-1],c=1;c<s;++c)o[a[n[c]]]=t[c];for(;c<t.length;++c){var l=a[n[c]],m=i[n[c]+r];(0,Nm[m])(e,o,l,t[c])}return o}function Cm(e,t,n){var i=new t;return i._deserialize?i._deserialize(n,e[0]):R(5303,Fe(t)),i}function Em(e,t,n,i){i>=0?t[n]=e[5][i]:e[7][3*~i]=t}function Sm(e){return function(t,n,i,o){n[i]=o;for(var a=0;a<o.length;++a)e(t,o,a,o[a])}}function Im(e,t,n,i){t[n]=null,e[8][i]=t}function Rm(e,t,n,i){t[n]=Tm(e,i)}Am.pool=new mt((function(e){e.reset()}),5),Am.pool.get=function(){return this._get()||new Am};var Nm=new Array(13);function wm(e,t){return e||Mm.reportMissingClass(t),Object}function bm(e,t,n,i,o,a){var r=e(t);if(!r){if(o)return void(n[i]=function(t,n,i){return function(){var o=e(i)||wm(a,i);return t[n]=o,new o}}(n,i,t));r=wm(a,t)}n[i]=r}function Om(e,t,n){for(var i=n||st,o=e[gm],a=0;a<o.length;++a){var r=o[a];"string"!=typeof r?bm(i,r[0],r,0,t,n):bm(i,r,o,a,t,n)}}function Pm(e){var t=e[xm];if(t)for(var n=e[gm],i=0;i<t.length;++i){var o=t[i];o[0]=n[o[0]]}}function Mm(e,t,n){"string"==typeof e&&(e=JSON.parse(e));var i,o=!t;(t=t||Am.pool.get()).init(e),n=n||{};var a=e[dm],s=!1;if("object"==typeof a&&(s=a.preprocessed,a=a.version),a<1)throw new Error(O(5304,a));n._version=a,n.result=t,e[0]=n,s||(Om(e,!1,n.classFinder),Pm(e)),r.game._isCloning=!0;var c=e[5],l=function(e){var t=e[5],n=e[6],i=0===n?0:n.length,o=t[t.length-1],a=t.length-i;"number"!=typeof o?o=0:(o<0&&(o=~o),--a);for(var r=0;r<a;++r)t[r]=Tm(e,t[r]);for(var s=e[gm],c=0;c<i;++c,++r){var l=n[c],m=t[r];if(l>=0){var u=s[l];t[r]=Cm(e,u,m)}else(0,Nm[l=~l])(e,t,r,m)}return o}(e);return r.game._isCloning=!1,e[7]&&function(e,t,n){for(var i=e.length-1,o=0,a=3*e[i];o<a;o+=3){var r=e[o],s=t[e[o+2]],c=e[o+1];c>=0?r[n[c]]=s:r[~c]=s}for(;o<i;o+=3){var l=t[e[o]],m=t[e[o+2]],u=e[o+1];u>=0?l[n[u]]=m:l[~u]=m}}(e[7],c,e[pm]),function(e){for(var t=e[5],n=e[pm],i=e[vm],o=e[8],a=e[9],r=e[10],s=0;s<o.length;++s){var c=o[s];"number"==typeof c&&(o[s]=t[c]);var l=a[s];"number"==typeof l&&(l=l>=0?n[l]:~l,a[s]=l);var m=r[s];"number"==typeof m&&(r[s]=i[m])}}(e),i=c[l],o&&Am.pool.put(t),i}Nm[0]=function(e,t,n,i){t[n]=i},Nm[1]=Em,Nm[2]=Sm(Em),Nm[3]=Sm(Im),Nm[4]=Rm,Nm[5]=function(e,t,n,i){hm[i[0]](t[n],i)},Nm[6]=Im,Nm[7]=function(e,t,n,i){t[n].set(i)},Nm[8]=function(e,t,n,i){var o=new _m[i[0]];hm[i[0]](o,i),t[n]=o},Nm[9]=Sm(Rm),Nm[10]=function(e,t,n,i){var o=e[gm][i[0]];t[n]=Cm(e,o,i[1])},Nm[11]=function(e,t,n,i){var o=i[0];t[n]=o;for(var a=1;a<i.length;a+=3){var r=i[a],s=i[a+1],c=i[a+2];(0,Nm[s])(e,o,r,c)}},Nm[12]=function(e,t,n,i){var o=i[0];t[n]=o;for(var a=0;a<o.length;++a){var r=o[a],s=i[a+1];0!==s&&(0,Nm[s])(e,o,a,r)}},Mm.Details=Am,Mm.reportMissingClass=function(e){S(5302,e)};var Dm=function(e){this.preprocessed=!0,this.version=e};function zm(e,t){var n;n=lm.safeFindClass;var i,o=Am.pool.get();try{i=Mm(e,o,{classFinder:n,customEnv:t})}catch(e){throw p(e),Am.pool.put(o),e}i._uuid=t.__uuid__||"";for(var a=o.uuidList,r=o.uuidObjList,s=o.uuidPropList,c=[],l=0;l<a.length;l++){var m=a[l];c[l]={uuid:Pc(m),owner:r[l],prop:s[l]}}return i.__depends__=c,i._native&&(i.__nativeDepend__=!0),Am.pool.put(o),i}r.deserialize=Mm;var Lm,Fm=function(){function e(){this._depends=new xc}var t=e.prototype;return t.init=function(){this._depends.clear()},t.getNativeDep=function(e){var t=this._depends.get(e);return t&&t.nativeDep?K({},t.nativeDep):null},t.getDeps=function(e){return this._depends.has(e)?this._depends.get(e).deps:[]},t.getDepsRecursively=function(e){var t=Object.create(null),n=[];return this._descend(e,t,n),n},t.remove=function(e){this._depends.remove(e)},t.parse=function(e,t){var n,i,o=null;if(Array.isArray(t)||t.__type__){if(this._depends.has(e))return this._depends.get(e);if(!Array.isArray(t)||"number"==typeof(i=(n=t[5])[n.length-1])&&i<0)try{var a=zm(t,{__uuid__:e});(o=this._parseDepsFromAsset(a)).nativeDep&&(o.nativeDep.uuid=e),Ec.add(e+"@import",a)}catch(t){Cc.remove(e+"@import"),o={deps:[]}}else o={deps:this._parseDepsFromJson(t)}}else{if(this._depends.has(e)&&(o=this._depends.get(e)).parsedFromExistAsset)return o;o=this._parseDepsFromAsset(t)}return this._depends.add(e,o),o},t._parseDepsFromAsset=function(e){for(var t={deps:[],parsedFromExistAsset:!0,preventPreloadNativeObject:e.constructor.preventPreloadNativeObject,preventDeferredLoadDependents:e.constructor.preventDeferredLoadDependents},n=e.__depends__,i=0,o=n.length;i<o;i++)t.deps.push(n[i].uuid);return e.__nativeDepend__&&(t.nativeDep=e._nativeDep),t},t._parseDepsFromJson=function(e){var t=null;return(t=function(e){var t=e[vm];return e[10].map((function(e){return t[e]}))}(e)).forEach((function(e,n){return t[n]=Pc(e)})),t},t._descend=function(e,t,n){for(var i=this.getDeps(e),o=0;o<i.length;o++){var a=i[o];t[a]||(t[a]=!0,n.push(a),this._descend(a,t,n))}},e}(),Um=e("eY",new Fm),Bm=[new Wa];function Gm(e){return e&&0==(e&e-1)}var Vm,Hm,jm,qm,km,Wm,Ym=Ws("cc.SimpleTexture")(Lm=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this)._gfxTexture=null,t._mipmapLevel=1,t._textureWidth=0,t._textureHeight=0,t}J(t,e);var n=t.prototype;return n.getGFXTexture=function(){return this._gfxTexture},n.destroy=function(){return this._tryDestroyTexture(),e.prototype.destroy.call(this)},n.updateImage=function(){this.updateMipmaps(0)},n.updateMipmaps=function(){},n.uploadData=function(e,t,n){if(void 0===t&&(t=0),void 0===n&&(n=0),this._gfxTexture&&!(this._mipmapLevel<=t)){var i=this._getGFXDevice();if(i){var o=Bm[0];o.texExtent.width=this._textureWidth>>t,o.texExtent.height=this._textureHeight>>t,o.texSubres.mipLevel=t,o.texSubres.baseArrayLayer=n,ArrayBuffer.isView(e)?i.copyBuffersToTexture([e],this._gfxTexture,Bm):i.copyTexImagesToTexture([e],this._gfxTexture,Bm)}}},n._assignImage=function(e,t,n){var i=this,o=function(){var o=e.data;if(o&&(i.uploadData(o,t,n),i._checkTextureLoaded(),xt.CLEANUP_IMAGE_CACHE)){var a=Um.getDeps(i._uuid),r=a.indexOf(e._uuid);-1!==r&&(Ae(a,r),e.decRef())}};if(e.loaded)o();else{if(e.once("load",(function(){o()})),!this.isCompressed){var a=r.builtinResMgr.get("black-texture").image;this.uploadData(a.data,t,n)}r.assetManager.postLoadNative(e)}},n._checkTextureLoaded=function(){this._textureReady()},n._textureReady=function(){this.loaded=!0,this.emit("load")},n._setMipmapLevel=function(e){this._mipmapLevel=e<1?1:e},n._getGfxTextureCreateInfo=function(){return null},n._tryReset=function(){if(this._tryDestroyTexture(),0!==this._mipmapLevel){var e=this._getGFXDevice();e&&this._createTexture(e)}},n._createTexture=function(e){if(0!==this._width&&0!==this._height){var t=Ko.NONE;this._mipFilter!==cl.NONE&&function(e,t,n){return!(e.gfxAPI===ca.WEBGL)||Gm(t)&&Gm(n)}(e,this._width,this._height)&&(this._mipmapLevel=function(e,t){for(var n=Math.max(e,t),i=0;n;)n>>=1,i++;return i}(this._width,this._height),t=Ko.GEN_MIPMAP);var n=this._getGfxTextureCreateInfo({usage:Yo.SAMPLED|Yo.TRANSFER_DST,format:this._getGFXFormat(),levelCount:this._mipmapLevel,flags:t|Ko.IMMUTABLE});if(n){var i=e.createTexture(n);this._textureWidth=n.width,this._textureHeight=n.height,this._gfxTexture=i}}},n._tryDestroyTexture=function(){this._gfxTexture&&(this._gfxTexture.destroy(),this._gfxTexture=null)},X(t,[{key:"mipmapLevel",get:function(){return this._mipmapLevel}}]),t}(Gl))||Lm;r.SimpleTexture=Ym;var Xm,Km,Jm,Qm,Zm,$m,eu=e("c8",(Vm=Ws("cc.Texture2D"),Hm=pc([vl]),Vm((Wm=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"_mipmaps",km,ee(t)),t}J(t,e);var n=t.prototype;return n.initialize=function(){this.mipmaps=this._mipmaps},n.onLoaded=function(){this.initialize()},n.reset=function(e){this._width=e.width,this._height=e.height,this._setGFXFormat(e.format),this._setMipmapLevel(e.mipmapLevel||1),this._tryReset()},n.create=function(e,t,n,i){void 0===n&&(n=rl.RGBA8888),void 0===i&&(i=1),this.reset({width:e,height:t,format:n,mipmapLevel:i})},n.toString=function(){return 0!==this._mipmaps.length?this._mipmaps[0].url:""},n.updateMipmaps=function(e,t){if(void 0===e&&(e=0),!(e>=this._mipmaps.length))for(var n=Math.min(void 0===t?this._mipmaps.length:t,this._mipmaps.length-e),i=0;i<n;++i){var o=e+i;this._assignImage(this._mipmaps[o],o)}},n.getHtmlElementObj=function(){return this._mipmaps[0]&&this._mipmaps[0].data instanceof HTMLElement?this._mipmaps[0].data:null},n.destroy=function(){return this._mipmaps=[],e.prototype.destroy.call(this)},n.description=function(){return"<cc.Texture2D | Name = "+(this._mipmaps[0]?this._mipmaps[0].url:"")+" | Dimension = "+this.width+" x "+this.height+">"},n.releaseTexture=function(){this.destroy()},n._serialize=function(){},n._deserialize=function(t,n){var i=t;e.prototype._deserialize.call(this,i.base,n),this._mipmaps=new Array(i.mipmaps.length);for(var o=0;o<i.mipmaps.length;++o)if(this._mipmaps[o]=new vl,i.mipmaps[o]){var a=i.mipmaps[o];n.result.push(this._mipmaps,""+o,a),this._mipmaps[o]._texture=this}},n._getGfxTextureCreateInfo=function(e){var t=new dr(Wo.TEX2D);return t.width=this._width,t.height=this._height,Object.assign(t,e)},n._checkTextureLoaded=function(){for(var t=!0,n=0;n<this._mipmaps.length;++n)if(!this._mipmaps[n].loaded){t=!1;break}t&&e.prototype._textureReady.call(this)},X(t,[{key:"mipmaps",get:function(){return this._mipmaps},set:function(e){var t=this;if(this._mipmaps=e,this._setMipmapLevel(this._mipmaps.length),this._mipmaps.length>0){var n=this._mipmaps[0];this.reset({width:n.width,height:n.height,format:n.format,mipmapLevel:this._mipmaps.length}),this._mipmaps.forEach((function(e,n){t._assignImage(e,n)}))}else this.reset({width:0,height:0,mipmapLevel:this._mipmaps.length})}},{key:"image",get:function(){return 0===this._mipmaps.length?null:this._mipmaps[0]},set:function(e){this.mipmaps=e?[e]:[]}}]),t}(Ym),km=oe((qm=Wm).prototype,"_mipmaps",[Hm],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),jm=qm))||jm));r.Texture2D=eu,function(e){e[e.right=0]="right",e[e.left=1]="left",e[e.top=2]="top",e[e.bottom=3]="bottom",e[e.front=4]="front",e[e.back=5]="back"}($m||($m={}));var tu=e("c9",Ws("cc.TextureCube")((Zm=Qm=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"_mipmaps",Jm,ee(t)),t}J(t,e),t.fromTexture2DArray=function(e,n){for(var i=[],o=e.length/6,a=0;a<o;a++){var r=6*a;i.push({front:e[r+$m.front].image,back:e[r+$m.back].image,left:e[r+$m.left].image,right:e[r+$m.right].image,top:e[r+$m.top].image,bottom:e[r+$m.bottom].image})}return(n=n||new t).mipmaps=i,n};var n=t.prototype;return n.onLoaded=function(){this.mipmaps=this._mipmaps,this.loaded=!0,this.emit("load")},n.reset=function(e){this._width=e.width,this._height=e.height,this._setGFXFormat(e.format),this._setMipmapLevel(e.mipmapLevel||1),this._tryReset()},n.updateMipmaps=function(e,t){var n=this;if(void 0===e&&(e=0),!(e>=this._mipmaps.length))for(var i=Math.min(void 0===t?this._mipmaps.length:t,this._mipmaps.length-e),o=function(t){var i=e+t;nu(n._mipmaps[i],(function(e,t){n._assignImage(e,i,t)}))},a=0;a<i;++a)o(a)},n.destroy=function(){return this._mipmaps=[],e.prototype.destroy.call(this)},n.releaseTexture=function(){this.mipmaps=[]},n._serialize=function(){},n._deserialize=function(t,n){var i=t;e.prototype._deserialize.call(this,i.base,n),this._mipmaps=new Array(i.mipmaps.length);for(var o=0;o<i.mipmaps.length;++o){this._mipmaps[o]={front:new vl,back:new vl,left:new vl,right:new vl,top:new vl,bottom:new vl};var a=i.mipmaps[o];n.result.push(this._mipmaps[o],"front",a.front),n.result.push(this._mipmaps[o],"back",a.back),n.result.push(this._mipmaps[o],"left",a.left),n.result.push(this._mipmaps[o],"right",a.right),n.result.push(this._mipmaps[o],"top",a.top),n.result.push(this._mipmaps[o],"bottom",a.bottom)}},n._getGfxTextureCreateInfo=function(e){var t=new dr(Wo.CUBE);return t.width=this._width,t.height=this._height,t.layerCount=6,Object.assign(t,e),t.flags|=Ko.CUBEMAP,t},X(t,[{key:"mipmaps",get:function(){return this._mipmaps},set:function(e){var t=this;if(this._mipmaps=e,this._setMipmapLevel(this._mipmaps.length),this._mipmaps.length>0){var n=this._mipmaps[0].front;this.reset({width:n.width,height:n.height,format:n.format,mipmapLevel:this._mipmaps.length}),this._mipmaps.forEach((function(e,n){nu(e,(function(e,i){t._assignImage(e,n,i)}))}))}else this.reset({width:0,height:0,mipmapLevel:this._mipmaps.length})}},{key:"image",get:function(){return 0===this._mipmaps.length?null:this._mipmaps[0]},set:function(e){this.mipmaps=e?[e]:[]}}]),t}(Ym),Qm.FaceIndex=$m,Jm=oe((Km=Zm).prototype,"_mipmaps",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Xm=Km))||Xm);function nu(e,t){t(e.front,$m.front),t(e.back,$m.back),t(e.left,$m.left),t(e.right,$m.right),t(e.top,$m.top),t(e.bottom,$m.bottom)}r.TextureCube=tu;var iu,ou,au,ru=e("d$",[{name:"billboard",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"billboard|vert:vs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"billboard|vert:vs_main|tinted-fs:add",hash:2143664850,builtins:{globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplers:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplers:[]}},defines:[{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1}]},{name:"builtin",defines:[],binding:1,stageFlags:1,members:[{name:"cc_size_rotation",type:16,count:1}]},{name:"FragConstants",defines:[],binding:2,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplers:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:3}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:1},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:2}]}]},{name:"clear-stencil",techniques:[{passes:[{blendState:{targets:[{blend:!0}]},rasterizerState:{cullMode:0},program:"clear-stencil|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"clear-stencil|sprite-vs:vert|sprite-fs:frag",hash:1062464958,builtins:{globals:{blocks:[],samplers:[]},locals:{blocks:[],samplers:[]}},defines:[],blocks:[],samplers:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0}]}]},{name:"graphics",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:1,blendDst:4,blendSrcAlpha:1,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"graphics|vs:vert|fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"graphics|vs:vert|fs:frag",hash:3946667351,builtins:{globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplers:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplers:[]}},defines:[],blocks:[],samplers:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:1},{name:"a_dist",type:13,count:1,defines:[],stageFlags:1,format:11,location:2}]}]},{name:"particle-gpu",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle-gpu|particle-vs-gpu:gpvs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle-gpu|particle-vs-gpu:gpvs_main|tinted-fs:add",hash:3696836305,builtins:{globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplers:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplers:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"COLOR_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"ROTATION_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"SIZE_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"FORCE_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"VELOCITY_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"TEXTURE_ANIMATION_MODULE_ENABLE",type:"boolean"},{name:"CC_USE_WORLD_SPACE",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1}]},{name:"SampleConstants",defines:[],binding:1,stageFlags:1,members:[{name:"u_sampleInfo",type:16,count:1}]},{name:"TickConstants",defines:[],binding:2,stageFlags:1,members:[{name:"u_worldRot",type:16,count:1},{name:"u_timeDelta",type:16,count:1}]},{name:"ColorConstant",defines:["COLOR_OVER_TIME_MODULE_ENABLE"],binding:3,stageFlags:1,members:[{name:"u_color_mode",type:5,count:1}]},{name:"RotationConstant",defines:["ROTATION_OVER_TIME_MODULE_ENABLE"],binding:4,stageFlags:1,members:[{name:"u_rotation_mode",type:5,count:1}]},{name:"SizeConstant",defines:["SIZE_OVER_TIME_MODULE_ENABLE"],binding:5,stageFlags:1,members:[{name:"u_size_mode",type:5,count:1}]},{name:"ForceConstant",defines:["FORCE_OVER_TIME_MODULE_ENABLE"],binding:6,stageFlags:1,members:[{name:"u_force_mode",type:5,count:1},{name:"u_force_space",type:5,count:1}]},{name:"VelocityConstant",defines:["VELOCITY_OVER_TIME_MODULE_ENABLE"],binding:7,stageFlags:1,members:[{name:"u_velocity_mode",type:5,count:1},{name:"u_velocity_space",type:5,count:1}]},{name:"AnimationConstant",defines:["TEXTURE_ANIMATION_MODULE_ENABLE"],binding:8,stageFlags:1,members:[{name:"u_anim_info",type:16,count:1}]},{name:"FragConstants",defines:[],binding:9,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplers:[{name:"color_over_time_tex0",type:28,count:1,defines:["COLOR_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:10},{name:"rotation_over_time_tex0",type:28,count:1,defines:["ROTATION_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:11},{name:"size_over_time_tex0",type:28,count:1,defines:["SIZE_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:12},{name:"force_over_time_tex0",type:28,count:1,defines:["FORCE_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:13},{name:"velocity_over_time_tex0",type:28,count:1,defines:["VELOCITY_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:14},{name:"texture_animation_tex0",type:28,count:1,defines:["TEXTURE_ANIMATION_MODULE_ENABLE"],stageFlags:1,binding:15},{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:16}],attributes:[{name:"a_position_starttime",type:16,count:1,defines:[],stageFlags:1,format:44,location:0},{name:"a_size_uv",type:16,count:1,defines:[],stageFlags:1,format:44,location:1},{name:"a_rotation_uv",type:16,count:1,defines:[],stageFlags:1,format:44,location:2},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_dir_life",type:16,count:1,defines:[],stageFlags:1,format:44,location:4},{name:"a_rndSeed",type:13,count:1,defines:[],stageFlags:1,format:11,location:5},{name:"a_texCoord",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:6},{name:"a_texCoord3",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:7},{name:"a_normal",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:8},{name:"a_color1",type:16,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:44,location:9}]}]},{name:"particle-trail",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle-trail|particle-trail:vs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},frameTile_velLenScale:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle-trail|particle-trail:vs_main|tinted-fs:add",hash:4115155772,builtins:{globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplers:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplers:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"CC_DRAW_WIRE_FRAME",type:"boolean"},{name:"CC_USE_WORLD_SPACE",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1}]},{name:"FragConstants",defines:[],binding:1,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplers:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:16,count:1,defines:[],stageFlags:1,format:44,location:1},{name:"a_texCoord1",type:15,count:1,defines:[],stageFlags:1,format:32,location:2},{name:"a_texCoord2",type:15,count:1,defines:[],stageFlags:1,format:32,location:3},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:4}]}]},{name:"particle",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle|particle-vs-legacy:lpvs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle|particle-vs-legacy:lpvs_main|tinted-fs:add",hash:66662317,builtins:{globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplers:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplers:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"CC_USE_WORLD_SPACE",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1}]},{name:"FragConstants",defines:[],binding:1,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplers:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord1",type:15,count:1,defines:[],stageFlags:1,format:32,location:2},{name:"a_texCoord2",type:15,count:1,defines:[],stageFlags:1,format:32,location:3},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:4},{name:"a_color1",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:8},{name:"a_texCoord3",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:6},{name:"a_normal",type:15,count:1,defines:["CC_RENDER_MODE"],stageFlags:1,format:32,location:7}]}]},{name:"spine",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"spine|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{alphaThreshold:{value:[.5],type:13}}}]}],shaders:[{name:"spine|sprite-vs:vert|sprite-fs:frag",hash:4078504952,builtins:{globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplers:[]},locals:{blocks:[{name:"CCLocal",defines:["USE_LOCAL"]}],samplers:[{name:"cc_spriteTexture",defines:[]}]}},defines:[{name:"USE_LOCAL",type:"boolean"},{name:"TWO_COLORED",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"}],blocks:[{name:"ALPHA_TEST_DATA",defines:["USE_ALPHA_TEST"],binding:0,stageFlags:16,members:[{name:"alphaThreshold",type:13,count:1}]}],samplers:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:1},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:2},{name:"a_color2",type:16,count:1,defines:["TWO_COLORED"],stageFlags:1,format:44,location:3}]}]},{name:"sprite",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"sprite|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{alphaThreshold:{value:[.5],type:13}}}]}],shaders:[{name:"sprite|sprite-vs:vert|sprite-fs:frag",hash:3990469549,builtins:{globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplers:[]},locals:{blocks:[{name:"CCLocal",defines:["USE_LOCAL"]}],samplers:[{name:"cc_spriteTexture",defines:["USE_TEXTURE"]}]}},defines:[{name:"USE_LOCAL",type:"boolean"},{name:"USE_PIXEL_ALIGNMENT",type:"boolean"},{name:"CC_USE_EMBEDDED_ALPHA",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"USE_TEXTURE",type:"boolean"},{name:"IS_GRAY",type:"boolean"}],blocks:[{name:"ALPHA_TEST_DATA",defines:["USE_ALPHA_TEST"],binding:0,stageFlags:16,members:[{name:"alphaThreshold",type:13,count:1}]}],samplers:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:1},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:2}]}]},{name:"standard",techniques:[{name:"opaque",passes:[{program:"standard|standard-vs:vert|standard-fs:frag",properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},occlusion:{value:[1],type:13,handleInfo:["pbrParams",0,13]},roughness:{value:[.8],type:13,handleInfo:["pbrParams",1,13]},metallic:{value:[.6],type:13,handleInfo:["pbrParams",2,13]},normalStrenth:{value:[1],type:13,handleInfo:["pbrParams",3,13]},emissive:{value:[0,0,0,1],type:16},emissiveScale:{value:[1,1,1],type:15,handleInfo:["emissiveScaleParam",0,15]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},normalMap:{value:"normal",type:28},pbrMap:{value:"grey",type:28},metallicRoughnessMap:{value:"grey",type:28},occlusionMap:{value:"white",type:28},emissiveMap:{value:"grey",type:28},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},pbrParams:{type:16,value:[1,.8,.6,1]},emissiveScaleParam:{type:16,value:[1,1,1,0]},albedoMap:{type:28,value:"grey"}}},{phase:"forward-add",propertyIndex:0,embeddedMacros:{CC_FORWARD_ADD:!0},blendState:{targets:[{blend:!0,blendSrc:1,blendDst:1,blendSrcAlpha:0,blendDstAlpha:1}]},program:"standard|standard-vs:vert|standard-fs:frag",depthStencilState:{depthFunc:2,depthTest:!0,depthWrite:!1},properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},occlusion:{value:[1],type:13,handleInfo:["pbrParams",0,13]},roughness:{value:[.8],type:13,handleInfo:["pbrParams",1,13]},metallic:{value:[.6],type:13,handleInfo:["pbrParams",2,13]},normalStrenth:{value:[1],type:13,handleInfo:["pbrParams",3,13]},emissive:{value:[0,0,0,1],type:16},emissiveScale:{value:[1,1,1],type:15,handleInfo:["emissiveScaleParam",0,15]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},normalMap:{value:"normal",type:28},pbrMap:{value:"grey",type:28},metallicRoughnessMap:{value:"grey",type:28},occlusionMap:{value:"white",type:28},emissiveMap:{value:"grey",type:28},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},pbrParams:{type:16,value:[1,.8,.6,1]},emissiveScaleParam:{type:16,value:[1,1,1,0]},albedoMap:{type:28,value:"grey"}}},{phase:"shadow-caster",propertyIndex:0,rasterizerState:{cullMode:1},program:"standard|shadow-caster-vs:vert|shadow-caster-fs:frag",properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},occlusion:{value:[1],type:13,handleInfo:["pbrParams",0,13]},roughness:{value:[.8],type:13,handleInfo:["pbrParams",1,13]},metallic:{value:[.6],type:13,handleInfo:["pbrParams",2,13]},normalStrenth:{value:[1],type:13,handleInfo:["pbrParams",3,13]},emissive:{value:[0,0,0,1],type:16},emissiveScale:{value:[1,1,1],type:15,handleInfo:["emissiveScaleParam",0,15]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},pbrParams:{type:16,value:[1,.8,.6,1]},emissiveScaleParam:{type:16,value:[1,1,1,0]},albedoMap:{type:28,value:"grey"}}}]}],shaders:[{name:"standard|standard-vs:vert|standard-fs:frag",hash:2668109714,builtins:{globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplers:[{name:"cc_environment",defines:["CC_USE_IBL"]},{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]}]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]},{name:"CCForwardLight",defines:["CC_FORWARD_ADD"]}],samplers:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"cc_lightingMap",defines:["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_SUPPORT_FLOAT_TEXTURE",type:"boolean"},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"USE_VERTEX_COLOR",type:"boolean"},{name:"USE_NORMAL_MAP",type:"boolean"},{name:"HAS_SECOND_UV",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_ALBEDO_MAP",type:"boolean"},{name:"ALBEDO_UV",type:"string",options:["v_uv","v_uv1"]},{name:"NORMAL_UV",type:"string",options:["v_uv","v_uv1"]},{name:"PBR_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_PBR_MAP",type:"boolean"},{name:"USE_METALLIC_ROUGHNESS_MAP",type:"boolean"},{name:"USE_OCCLUSION_MAP",type:"boolean"},{name:"USE_EMISSIVE_MAP",type:"boolean"},{name:"EMISSIVE_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r"]}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:17,members:[{name:"tilingOffset",type:16,count:1},{name:"albedo",type:16,count:1},{name:"albedoScaleAndCutoff",type:16,count:1},{name:"pbrParams",type:16,count:1},{name:"emissive",type:16,count:1},{name:"emissiveScaleParam",type:16,count:1}]}],samplers:[{name:"albedoMap",type:28,count:1,defines:["USE_ALBEDO_MAP"],stageFlags:16,binding:1},{name:"normalMap",type:28,count:1,defines:["USE_NORMAL_MAP"],stageFlags:16,binding:2},{name:"pbrMap",type:28,count:1,defines:["USE_PBR_MAP"],stageFlags:16,binding:3},{name:"metallicRoughnessMap",type:28,count:1,defines:["USE_METALLIC_ROUGHNESS_MAP"],stageFlags:16,binding:4},{name:"occlusionMap",type:28,count:1,defines:["USE_OCCLUSION_MAP"],stageFlags:16,binding:5},{name:"emissiveMap",type:28,count:1,defines:["USE_EMISSIVE_MAP"],stageFlags:16,binding:6}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_vertexId",type:13,count:1,defines:["CC_USE_MORPH"],stageFlags:1,format:11,location:6},{name:"a_joints",type:12,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:42,location:4},{name:"a_weights",type:16,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:44,location:5},{name:"a_jointAnimInfo",type:16,count:1,defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:7},{name:"a_matWorld0",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:8},{name:"a_matWorld1",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:9},{name:"a_matWorld2",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",type:16,count:1,defines:["USE_INSTANCING","USE_LIGHTMAP"],stageFlags:1,format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",type:13,count:1,defines:["!USE_INSTANCING","USE_BATCHING"],stageFlags:1,format:11,location:12},{name:"a_color",type:16,count:1,defines:["USE_VERTEX_COLOR"],stageFlags:1,format:44,location:13},{name:"a_texCoord1",type:14,count:1,defines:[],stageFlags:1,format:21,location:14}]},{name:"standard|shadow-caster-vs:vert|shadow-caster-fs:frag",hash:3020491,builtins:{globals:{blocks:[{name:"CCShadow",defines:[]}],samplers:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplers:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_SUPPORT_FLOAT_TEXTURE",type:"boolean"},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"HAS_SECOND_UV",type:"boolean"},{name:"USE_ALBEDO_MAP",type:"boolean"},{name:"ALBEDO_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r"]}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:17,members:[{name:"tilingOffset",type:16,count:1},{name:"albedo",type:16,count:1},{name:"albedoScaleAndCutoff",type:16,count:1},{name:"pbrParams",type:16,count:1},{name:"emissive",type:16,count:1},{name:"emissiveScaleParam",type:16,count:1}]}],samplers:[{name:"albedoMap",type:28,count:1,defines:["USE_ALBEDO_MAP"],stageFlags:16,binding:1}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_vertexId",type:13,count:1,defines:["CC_USE_MORPH"],stageFlags:1,format:11,location:6},{name:"a_joints",type:12,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:42,location:4},{name:"a_weights",type:16,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:44,location:5},{name:"a_jointAnimInfo",type:16,count:1,defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:7},{name:"a_matWorld0",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:8},{name:"a_matWorld1",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:9},{name:"a_matWorld2",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",type:16,count:1,defines:["USE_INSTANCING","USE_LIGHTMAP"],stageFlags:1,format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",type:13,count:1,defines:["!USE_INSTANCING","USE_BATCHING"],stageFlags:1,format:11,location:12},{name:"a_texCoord1",type:14,count:1,defines:[],stageFlags:1,format:21,location:13}]}]},{name:"terrain",techniques:[{name:"opaque",passes:[{program:"terrain|terrain-vs:vert|terrain-fs:frag",properties:{UVScale:{value:[1,1,1,1],type:16},lightMapUVParam:{value:[0,0,0,0],type:16},metallic:{value:[0,0,0,0],type:16},roughness:{value:[1,1,1,1],type:16},weightMap:{value:"black",type:28},detailMap0:{value:"grey",type:28},detailMap1:{value:"grey",type:28},detailMap2:{value:"grey",type:28},detailMap3:{value:"grey",type:28},normalMap0:{value:"normal-texture",type:28},normalMap1:{value:"normal-texture",type:28},normalMap2:{value:"normal-texture",type:28},normalMap3:{value:"normal-texture",type:28},lightMap:{value:"grey",type:28}}},{phase:"forward-add",propertyIndex:0,embeddedMacros:{CC_FORWARD_ADD:!0},blendState:{targets:[{blend:!0,blendSrc:1,blendDst:1,blendSrcAlpha:0,blendDstAlpha:1}]},program:"terrain|terrain-vs:vert|terrain-fs:frag",depthStencilState:{depthFunc:2,depthTest:!0,depthWrite:!1},properties:{UVScale:{value:[1,1,1,1],type:16},lightMapUVParam:{value:[0,0,0,0],type:16},metallic:{value:[0,0,0,0],type:16},roughness:{value:[1,1,1,1],type:16},weightMap:{value:"black",type:28},detailMap0:{value:"grey",type:28},detailMap1:{value:"grey",type:28},detailMap2:{value:"grey",type:28},detailMap3:{value:"grey",type:28},normalMap0:{value:"normal-texture",type:28},normalMap1:{value:"normal-texture",type:28},normalMap2:{value:"normal-texture",type:28},normalMap3:{value:"normal-texture",type:28},lightMap:{value:"grey",type:28}}},{phase:"shadow-add",propertyIndex:0,rasterizerState:{cullMode:2},program:"terrain|shadow-caster-vs:vert|shadow-caster-fs:frag"}]}],shaders:[{name:"terrain|terrain-vs:vert|terrain-fs:frag",hash:2952542850,builtins:{globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplers:[{name:"cc_environment",defines:["CC_USE_IBL"]},{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]}]},locals:{blocks:[{name:"CCLocal",defines:[]},{name:"CCForwardLight",defines:["CC_FORWARD_ADD"]}],samplers:[]}},defines:[{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"USE_NORMALMAP",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"LAYERS",type:"number",range:[0,4]},{name:"USE_PBR",type:"boolean"}],blocks:[{name:"TexCoords",defines:[],binding:0,stageFlags:1,members:[{name:"UVScale",type:16,count:1},{name:"lightMapUVParam",type:16,count:1}]},{name:"PbrParams",defines:[],binding:1,stageFlags:16,members:[{name:"metallic",type:16,count:1},{name:"roughness",type:16,count:1}]}],samplers:[{name:"weightMap",type:28,count:1,defines:[],stageFlags:16,binding:2},{name:"detailMap0",type:28,count:1,defines:[],stageFlags:16,binding:3},{name:"detailMap1",type:28,count:1,defines:[],stageFlags:16,binding:4},{name:"detailMap2",type:28,count:1,defines:[],stageFlags:16,binding:5},{name:"detailMap3",type:28,count:1,defines:[],stageFlags:16,binding:6},{name:"normalMap0",type:28,count:1,defines:[],stageFlags:16,binding:7},{name:"normalMap1",type:28,count:1,defines:[],stageFlags:16,binding:8},{name:"normalMap2",type:28,count:1,defines:[],stageFlags:16,binding:9},{name:"normalMap3",type:28,count:1,defines:[],stageFlags:16,binding:10},{name:"lightMap",type:28,count:1,defines:[],stageFlags:16,binding:11}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2}]},{name:"terrain|shadow-caster-vs:vert|shadow-caster-fs:frag",hash:3874167763,builtins:{globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplers:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplers:[]}},defines:[],blocks:[],samplers:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2}]}]},{name:"unlit",techniques:[{name:"opaque",passes:[{program:"unlit|unlit-vs:vert|unlit-fs:frag",properties:{mainTexture:{value:"grey",type:28},tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16},colorScale:{value:[1,1,1],type:15,handleInfo:["colorScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["colorScaleAndCutoff",3,13]},color:{type:16,handleInfo:["mainColor",0,16]},colorScaleAndCutoff:{type:16,value:[1,1,1,.5]}}}]}],shaders:[{name:"unlit|unlit-vs:vert|unlit-fs:frag",hash:3822871803,builtins:{globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplers:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplers:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_SUPPORT_FLOAT_TEXTURE",type:"boolean"},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"USE_VERTEX_COLOR",type:"boolean"},{name:"USE_TEXTURE",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r","g","b"]}],blocks:[{name:"TexCoords",defines:["USE_TEXTURE"],binding:0,stageFlags:1,members:[{name:"tilingOffset",type:16,count:1}]},{name:"Constant",defines:[],binding:1,stageFlags:16,members:[{name:"mainColor",type:16,count:1},{name:"colorScaleAndCutoff",type:16,count:1}]}],samplers:[{name:"mainTexture",type:28,count:1,defines:["USE_TEXTURE"],stageFlags:16,binding:2}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_vertexId",type:13,count:1,defines:["CC_USE_MORPH"],stageFlags:1,format:11,location:6},{name:"a_joints",type:12,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:42,location:4},{name:"a_weights",type:16,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:44,location:5},{name:"a_jointAnimInfo",type:16,count:1,defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:7},{name:"a_matWorld0",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:8},{name:"a_matWorld1",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:9},{name:"a_matWorld2",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",type:16,count:1,defines:["USE_INSTANCING","USE_LIGHTMAP"],stageFlags:1,format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",type:13,count:1,defines:["!USE_INSTANCING","USE_BATCHING"],stageFlags:1,format:11,location:12},{name:"a_color",type:16,count:1,defines:["USE_VERTEX_COLOR"],stageFlags:1,format:44,location:13}]}]},{name:"planar-shadow",techniques:[{passes:[{phase:"planarShadow",blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"planar-shadow|planar-shadow-vs:vert|planar-shadow-fs:frag",depthStencilState:{depthTest:!0,depthWrite:!1,stencilTestFront:!0,stencilFuncFront:5,stencilPassOpFront:2,stencilRefBack:128,stencilRefFront:128,stencilReadMaskBack:128,stencilReadMaskFront:128,stencilWriteMaskBack:128,stencilWriteMaskFront:128}}]}],shaders:[{name:"planar-shadow|planar-shadow-vs:vert|planar-shadow-fs:frag",hash:2901856202,builtins:{globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplers:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplers:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]}},defines:[{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_SUPPORT_FLOAT_TEXTURE",type:"boolean"},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"}],blocks:[],samplers:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3},{name:"a_vertexId",type:13,count:1,defines:["CC_USE_MORPH"],stageFlags:1,format:11,location:6},{name:"a_joints",type:12,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:42,location:4},{name:"a_weights",type:16,count:1,defines:["CC_USE_SKINNING"],stageFlags:1,format:44,location:5},{name:"a_jointAnimInfo",type:16,count:1,defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:7},{name:"a_matWorld0",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:8},{name:"a_matWorld1",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:9},{name:"a_matWorld2",type:16,count:1,defines:["USE_INSTANCING"],stageFlags:1,format:44,isInstanced:!0,location:10},{name:"a_lightingMapUVParam",type:16,count:1,defines:["USE_INSTANCING","USE_LIGHTMAP"],stageFlags:1,format:44,isInstanced:!0,location:11},{name:"a_dyn_batch_id",type:13,count:1,defines:["!USE_INSTANCING","USE_BATCHING"],stageFlags:1,format:11,location:12}]}]},{name:"skybox",techniques:[{passes:[{rasterizerState:{cullMode:0},program:"skybox|sky-vs:vert|sky-fs:frag",priority:245,depthStencilState:{depthTest:!0,depthWrite:!1}}]}],shaders:[{name:"skybox|sky-vs:vert|sky-fs:frag",hash:2319917655,builtins:{globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplers:[{name:"cc_environment",defines:[]}]},locals:{blocks:[],samplers:[]}},defines:[{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_RGBE_CUBEMAP",type:"boolean"}],blocks:[],samplers:[],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_normal",type:15,count:1,defines:[],stageFlags:1,format:32,location:1},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:2},{name:"a_tangent",type:16,count:1,defines:[],stageFlags:1,format:44,location:3}]}]},{name:"profiler",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"profiler|profiler-vs:vert|profiler-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"profiler|profiler-vs:vert|profiler-fs:frag",hash:2029303284,builtins:{globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplers:[]},locals:{blocks:[],samplers:[]}},defines:[{name:"CC_USE_HDR",type:"boolean"}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"offset",type:16,count:1}]},{name:"PerFrameInfo",defines:[],binding:1,stageFlags:1,members:[{name:"digits",type:16,count:20}]}],samplers:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],attributes:[{name:"a_position",type:15,count:1,defines:[],stageFlags:1,format:32,location:0},{name:"a_color",type:16,count:1,defines:[],stageFlags:1,format:44,location:1}]}]},{name:"splash-screen",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"splash-screen|splash-screen-vs:vert|splash-screen-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"splash-screen|splash-screen-vs:vert|splash-screen-fs:frag",hash:2106901053,builtins:{globals:{blocks:[],samplers:[]},locals:{blocks:[],samplers:[]}},defines:[],blocks:[{name:"splashFrag",defines:[],binding:0,stageFlags:16,members:[{name:"u_precent",type:13,count:1}]}],samplers:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:1}],attributes:[{name:"a_position",type:14,count:1,defines:[],stageFlags:1,format:21,location:0},{name:"a_texCoord",type:14,count:1,defines:[],stageFlags:1,format:21,location:1}]}]}]);!function(e){e[e.UBO=0]="UBO",e[e.SAMPLER=1]="SAMPLER"}(au||(au=e("x",{})));var su=e("y",(function(e,t,n,i,o){return void 0===o&&(o=0),e<<28&4026531840|i<<22&264241152|t<<20&3145728|n<<14&1032192|16383&o})),cu=e("z",(function(e){return(4026531840&e)>>>28})),lu=e("D",(function(e){return(264241152&e)>>>22})),mu=(e("E",(function(e){return(3145728&e)>>>20})),e("G",(function(e){return(1032192&e)>>>14}))),uu=e("H",(function(e){return 16383&e})),_u=e("J",(function(e,t){return-264241153&e|t<<22&264241152})),fu=e("K",((iu={})[wo.UNKNOWN]=function(){return console.warn("illegal uniform handle")},iu[wo.INT]=function(e,t,n){return void 0===n&&(n=0),e[n]},iu[wo.INT2]=function(e,t,n){return void 0===n&&(n=0),Gn.fromArray(t,e,n)},iu[wo.INT3]=function(e,t,n){return void 0===n&&(n=0),An.fromArray(t,e,n)},iu[wo.INT4]=function(e,t,n){return void 0===n&&(n=0),qn.fromArray(t,e,n)},iu[wo.FLOAT]=function(e,t,n){return void 0===n&&(n=0),e[n]},iu[wo.FLOAT2]=function(e,t,n){return void 0===n&&(n=0),Gn.fromArray(t,e,n)},iu[wo.FLOAT3]=function(e,t,n){return void 0===n&&(n=0),An.fromArray(t,e,n)},iu[wo.FLOAT4]=function(e,t,n){return void 0===n&&(n=0),qn.fromArray(t,e,n)},iu[wo.MAT3]=function(e,t,n){return void 0===n&&(n=0),Sn.fromArray(t,e,n)},iu[wo.MAT4]=function(e,t,n){return void 0===n&&(n=0),Ln.fromArray(t,e,n)},iu)),hu=e("L",((ou={})[wo.UNKNOWN]=function(){return console.warn("illegal uniform handle")},ou[wo.INT]=function(e,t,n){return void 0===n&&(n=0),e[n]=t},ou[wo.INT2]=function(e,t,n){return void 0===n&&(n=0),Gn.toArray(e,t,n)},ou[wo.INT3]=function(e,t,n){return void 0===n&&(n=0),An.toArray(e,t,n)},ou[wo.INT4]=function(e,t,n){return void 0===n&&(n=0),qn.toArray(e,t,n)},ou[wo.FLOAT]=function(e,t,n){return void 0===n&&(n=0),e[n]=t},ou[wo.FLOAT2]=function(e,t,n){return void 0===n&&(n=0),Gn.toArray(e,t,n)},ou[wo.FLOAT3]=function(e,t,n){return void 0===n&&(n=0),An.toArray(e,t,n)},ou[wo.FLOAT4]=function(e,t,n){return void 0===n&&(n=0),qn.toArray(e,t,n)},ou[wo.MAT3]=function(e,t,n){return void 0===n&&(n=0),Sn.toArray(e,t,n)},ou[wo.MAT4]=function(e,t,n){return void 0===n&&(n=0),Ln.toArray(e,t,n)},ou)),du=[Object.freeze([0]),Object.freeze([0,0]),Object.freeze([0,0,0,0]),Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])];function vu(e){switch(e){case wo.BOOL:case wo.INT:case wo.UINT:case wo.FLOAT:return du[0];case wo.BOOL2:case wo.INT2:case wo.UINT2:case wo.FLOAT2:return du[1];case wo.BOOL4:case wo.INT4:case wo.UINT4:case wo.FLOAT4:return du[2];case wo.MAT4:return du[3];case wo.SAMPLER2D:return"default-texture";case wo.SAMPLER_CUBE:return"default-cube-texture"}return du[0]}var pu=new Sr;function gu(e){return Math.ceil(Math.log2(Math.max(e,2)))}function xu(e,t){switch(e.type){case"boolean":return"number"==typeof t?t.toString():t?"1":"0";case"string":return void 0!==t?t:e.options[0];case"number":return void 0!==t?t.toString():e.range[0].toString();default:return console.warn("unknown define type '"+e.type+"'"),"-1"}}function yu(e,t,n,i,o){for(var a=e.builtins[i],r=[],s=function(e){var t=a.blocks[e],i=n.layouts[t.name],s=i&&n.bindings.find((function(e){return e.binding===i.binding}));if(!(i&&s&&s.descriptorType&yr))return console.warn("builtin UBO '"+t.name+"' not available!"),"continue";r.push(i),o&&!o.includes(s)&&o.push(s)},c=0;c<a.blocks.length;c++)s(c);Array.prototype.unshift.apply(t.gfxBlocks,r);for(var l=[],m=function(e){var t=a.samplers[e],i=n.layouts[t.name],r=i&&n.bindings.find((function(e){return e.binding===i.binding}));if(!(i&&r&&r.descriptorType&Ar))return console.warn("builtin sampler '"+t.name+"' not available!"),"continue";l.push(i),o&&!o.includes(r)&&o.push(r)},u=0;u<a.samplers.length;u++)m(u);Array.prototype.unshift.apply(t.gfxSamplers,l),o&&o.sort((function(e,t){return e.binding-t.binding}))}function Au(e){return e.members.reduce((function(e,t){return e+ga(t.type)*t.count}),0)}function Tu(e,t){for(var n=0;n<e.length;n++){var i=e[n];if("!"===i[0]){if(t[i.slice(1)])return!1}else if(!t[i])return!1}return!0}var Cu=function(){function e(){this._templates={},this._cache={},this._templateInfos={}}var t=e.prototype;return t.register=function(e){for(var t=0;t<e.shaders.length;t++)this.define(e.shaders[t]).effectName=e.name},t.define=function(e){var t=this._templates[e.name];if(t&&t.hash===e.hash)return t;for(var n=K({},e),i=0,o=function(e){var t=n.defines[e],o=1;if("number"===t.type){var a=t.range;o=gu(a[1]-a[0]+1),t._map=function(e){return e-a[0]}}else"string"===t.type?(o=gu(t.options.length),t._map=function(e){return Math.max(0,t.options.findIndex((function(t){return t===e})))}):"boolean"===t.type&&(t._map=function(e){return e?1:0});t._offset=i,i+=o},a=0;a<n.defines.length;a++)o(a);if(i>31&&(n.uber=!0),this._templates[e.name]=n,!this._templateInfos[n.hash]){var r={};r.samplerStartBinding=n.blocks.length,r.gfxBlocks=[],r.gfxSamplers=[],r.bindings=[],r.blockSizes=[];for(var s=0;s<n.blocks.length;s++){var c=n.blocks[s];r.blockSizes.push(Au(c)),r.bindings.push(new Er(c.binding,c.descriptorType||Qo.UNIFORM_BUFFER,1,c.stageFlags)),r.gfxBlocks.push(new ur(Yr.MATERIAL,c.binding,c.name,c.members.map((function(e){return new mr(e.name,e.type,e.count)})),1))}for(var l=0;l<n.samplers.length;l++){var m=n.samplers[l];r.bindings.push(new Er(m.binding,m.descriptorType||Qo.SAMPLER,m.count,m.stageFlags)),r.gfxSamplers.push(new _r(Yr.MATERIAL,m.binding,m.name,m.type,m.count))}r.gfxAttributes=[];for(var u=0;u<n.attributes.length;u++){var _=n.attributes[u];r.gfxAttributes.push(new La(_.name,_.format,_.isNormalized,0,_.isInstanced,_.location))}yu(n,r,jr,"locals"),r.gfxStages=[],r.gfxStages.push(new lr(Jo.VERTEX,"")),r.gfxStages.push(new lr(Jo.FRAGMENT,"")),r.handleMap=function(e){for(var t={},n=0;n<e.blocks.length;n++)for(var i=e.blocks[n],o=i.members,a=0,r=0;r<o.length;r++){var s=o[r];t[s.name]=su(au.UBO,Yr.MATERIAL,i.binding,s.type,a),a+=(ga(s.type)>>2)*s.count}for(var c=0;c<e.samplers.length;c++){var l=e.samplers[c];t[l.name]=su(au.SAMPLER,Yr.MATERIAL,l.binding,l.type)}return t}(n),r.hPipelineLayout=bi,r.setLayouts=[],this._templateInfos[n.hash]=r}return n},t.getTemplate=function(e){return this._templates[e]},t.getTemplateInfo=function(e){var t=this._templates[e].hash;return this._templateInfos[t]},t.getDescriptorSetLayout=function(e,t,n){void 0===n&&(n=!1);var i=this._templates[t],o=this._templateInfos[i.hash];return o.setLayouts.length||(pu.bindings=o.bindings,o.setLayouts[Yr.MATERIAL]=e.createDescriptorSetLayout(pu),pu.bindings=jr.bindings,o.setLayouts[Yr.LOCAL]=e.createDescriptorSetLayout(pu)),o.setLayouts[n?Yr.LOCAL:Yr.MATERIAL]},t.hasProgram=function(e){return void 0!==this._templates[e]},t.getKey=function(e,t){var n=this._templates[e],i=n.defines;if(n.uber){for(var o="",a=0;a<i.length;a++){var r=i[a],s=t[r.name];if(s&&r._map){var c=r._map(s);o+=""+r._offset+c+"|"}}return""+o+n.hash}for(var l=0,m=0;m<i.length;m++){var u=i[m],_=t[u.name];_&&u._map&&(l|=u._map(_)<<u._offset)}return l.toString(16)+"|"+n.hash},t.destroyShaderByDefines=function(e){var t=this,n=Object.keys(e);if(n.length)for(var i=n.map((function(t){var n=e[t];return"boolean"==typeof n&&(n=n?"1":"0"),new RegExp(""+t+n)})),o=Object.keys(this._cache).filter((function(e){return i.every((function(n){return n.test(Oi.get(t._cache[e]).name)}))})),a=0;a<o.length;a++){var r=o[a],s=Oi.get(this._cache[r]);console.log("destroyed shader "+s.name),s.destroy(),delete this._cache[r]}},t.getGFXShader=function(e,t,n,i,o){Object.assign(n,i.macros),o||(o=this.getKey(t,n));var a=this._cache[o];if(a)return a;var r=this._templates[t],s=this._templateInfos[r.hash];s.hPipelineLayout||(this.getDescriptorSetLayout(e,t),yu(r,s,Hr,"globals"),s.setLayouts[Yr.GLOBAL]=i.descriptorSetLayout,s.hPipelineLayout=Mi.alloc(e,new Nr(s.setLayouts)));var c=function(e,t){for(var n=[],i=0;i<t.length;i++){var o=t[i],a=o.name,r=e[a],s=xu(o,r),c=!r||"0"===r;n.push({name:a,value:s,isDefault:c})}return n}(n,r.defines),l=c.reduce((function(e,t){return e+"#define "+t.name+" "+t.value+"\n"}),"")+"\n",m=r.glsl3,u=Eu(e);u?m=r[u]:console.error("Invalid GFX API!"),s.gfxStages[0].source=l+m.vert,s.gfxStages[1].source=l+m.frag;var _=function(e,t,n){for(var i=[],o=e.attributes,a=t.gfxAttributes,r=0;r<o.length;r++)Tu(o[r].defines,n)&&i.push(a[r]);return i}(r,s,n),f=function(e,t){return e+t.reduce((function(e,t){return t.isDefault?e:e+"|"+t.name+t.value}),"")}(t,c),h=new fr(f,s.gfxStages,_,s.gfxBlocks,s.gfxSamplers);return this._cache[o]=Oi.alloc(e,h)},e}();function Eu(e){switch(e.gfxAPI){case ca.GLES2:case ca.WEBGL:return"glsl1";case ca.GLES3:case ca.WEBGL2:return"glsl3";default:return"glsl4"}}var Su=e("U",new Cu);r.programLib=Su;var Iu,Ru,Nu,wu={glsl1:[[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nvoid rotateCorner (inout vec2 corner, float angle){\n  float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n  float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n  corner.x = xOS;\n  corner.y = yOS;\n}\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n  , mat4 viewInv\n) {\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n}\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nuniform vec4 cc_size_rotation;\nvec4 vs_main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matWorld * pos;\n  vec2 vertOffset = a_texCoord.xy - 0.5;\n  computeVertPos(pos, vertOffset, quaternionFromEuler(vec3(0., 0., cc_size_rotation.z)), vec3(cc_size_rotation.xy, 0.), cc_matViewInv);\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.xy;\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n  #endif\n  return color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nattribute vec3 a_position;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  return pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 frag () {\n  vec4 o = vec4(1.0);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute float a_dist;\nvarying float v_dist;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_color = a_color;\n  v_dist = a_dist;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\nprecision highp float;\nvarying vec4 v_color;\nvarying float v_dist;\nvec4 frag () {\n  vec4 o = v_color;\n    #ifdef GL_OES_standard_derivatives\n      float aa = fwidth(v_dist);\n    #else\n      float aa = 0.05;\n    #endif\n  float alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\n  o.rgb *= o.a;\n  o *= alpha;\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nvoid rotateCorner (inout vec2 corner, float angle){\n  float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n  float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n  corner.x = xOS;\n  corner.y = yOS;\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n  rotateCorner(viewSpaceVert, q.z);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nuniform vec4 u_sampleInfo;\nuniform vec4 u_worldRot;\nuniform vec4 u_timeDelta;\nattribute vec4 a_position_starttime;\nattribute vec4 a_size_uv;\nattribute vec4 a_rotation_uv;\nattribute vec4 a_color;\nattribute vec4 a_dir_life;\nattribute float a_rndSeed;\n#if CC_RENDER_MODE == 4\n  attribute vec3 a_texCoord;\n  attribute vec3 a_texCoord3;\n  attribute vec3 a_normal;\n  attribute vec4 a_color1;\n#endif\nvec3 unpackCurveData (sampler2D tex, vec2 coord) {\n    vec4 a = texture2D(tex, coord);\n    vec4 b = texture2D(tex, coord + u_sampleInfo.y);\n    float c = fract(coord.x * u_sampleInfo.x);\n    return mix(a.xyz, b.xyz, c);\n}\nvec3 unpackCurveData (sampler2D tex, vec2 coord, out float w) {\n    vec4 a = texture2D(tex, coord);\n    vec4 b = texture2D(tex, coord + u_sampleInfo.y);\n    float c = fract(coord.x * u_sampleInfo.x);\n    w = mix(a.w, b.w, c);\n    return mix(a.xyz, b.xyz, c);\n}\nfloat pseudoRandom (float seed) {\n  seed = mod(seed, 233280.);\n  float q = (seed * 9301. + 49297.) / 233280.;\n  return fract(q);\n}\n#if COLOR_OVER_TIME_MODULE_ENABLE\n  uniform sampler2D color_over_time_tex0;\n  uniform int u_color_mode;\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\n  uniform sampler2D rotation_over_time_tex0;\n  uniform int u_rotation_mode;\n#endif\n#if SIZE_OVER_TIME_MODULE_ENABLE\n  uniform sampler2D size_over_time_tex0;\n  uniform int u_size_mode;\n#endif\n#if FORCE_OVER_TIME_MODULE_ENABLE\n  uniform sampler2D force_over_time_tex0;\n  uniform int u_force_mode;\nuniform int u_force_space;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\n  uniform sampler2D velocity_over_time_tex0;\n  uniform int u_velocity_mode;\nuniform int u_velocity_space;\n#endif\n#if TEXTURE_ANIMATION_MODULE_ENABLE\n  uniform sampler2D texture_animation_tex0;\n  uniform vec4 u_anim_info;\n#endif\nfloat repeat (float t, float length) {\n  return t - floor(t / length) * length;\n}\nvec4 rotateQuat (vec4 p, vec4 q) {\n  vec3 iv = cross(q.xyz, p.xyz) + q.w * p.xyz;\n  vec3 res = p.xyz + 2.0 * cross(q.xyz, iv);\n  return vec4(res.xyz, p.w);\n}\nvec4 gpvs_main () {\n  float activeTime = u_timeDelta.x - a_position_starttime.w;\n  float normalizedTime = clamp(activeTime / a_dir_life.w, 0.0, 1.0);\n  vec2 timeCoord0 = vec2(normalizedTime, 0.);\n  vec2 timeCoord1 = vec2(normalizedTime, 1.);\n  #if CC_RENDER_MODE == 4\n    vec2 vertIdx = vec2(a_texCoord.x, a_texCoord.y);\n  #else\n    vec2 vertIdx = vec2(a_size_uv.w, a_rotation_uv.w);\n  #endif\n  vec4 velocity = vec4(a_dir_life.xyz, 0.);\n  vec4 pos = vec4(a_position_starttime.xyz, 1.);\n  vec3 size = a_size_uv.xyz;\n  #if SIZE_OVER_TIME_MODULE_ENABLE\n    if (u_size_mode == 1) {\n      size *= unpackCurveData(size_over_time_tex0, timeCoord0);\n    } else {\n      vec3 size_0 = unpackCurveData(size_over_time_tex0, timeCoord0);\n      vec3 size_1 = unpackCurveData(size_over_time_tex0, timeCoord1);\n      float factor_s = pseudoRandom(a_rndSeed + 39825.);\n      size *= mix(size_0, size_1, factor_s);\n    }\n  #endif\n  vec3 compScale = scale.xyz * size;\n  #if FORCE_OVER_TIME_MODULE_ENABLE\n    vec3 forceAnim = vec3(0.);\n    if (u_force_mode == 1) {\n      forceAnim = unpackCurveData(force_over_time_tex0, timeCoord0);\n    } else {\n      vec3 force_0 = unpackCurveData(force_over_time_tex0, timeCoord0);\n      vec3 force_1 = unpackCurveData(force_over_time_tex0, timeCoord1);\n      float factor_f =  pseudoRandom(a_rndSeed + 212165.);\n      forceAnim = mix(force_0, force_1, factor_f);\n    }\n    vec4 forceTrack = vec4(forceAnim, 0.);\n    if (u_force_space == 0) {\n      forceTrack = rotateQuat(forceTrack, u_worldRot);\n    }\n    velocity.xyz += forceTrack.xyz;\n  #endif\n  #if VELOCITY_OVER_TIME_MODULE_ENABLE\n    float speedModifier0 = 1.;\n    float speedModifier1 = 1.;\n    vec3 velocityAnim = vec3(0.);\n    if (u_velocity_mode == 1) {\n      velocityAnim = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n    } else {\n      vec3 vectory_0 = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n      vec3 vectory_1 = unpackCurveData(velocity_over_time_tex0, timeCoord1, speedModifier1);\n      float factor_v = pseudoRandom(a_rndSeed + 197866.);\n      velocityAnim = mix(vectory_0, vectory_1, factor_v);\n      speedModifier0 = mix(speedModifier0, speedModifier1, factor_v);\n    }\n    vec4 velocityTrack = vec4(velocityAnim, 0.);\n    if (u_velocity_space == 0) {\n      velocityTrack = rotateQuat(velocityTrack, u_worldRot);\n    }\n    velocity.xyz += velocityTrack.xyz;\n    velocity.xyz *= speedModifier0;\n  #endif\n  pos.xyz += velocity.xyz * normalizedTime * a_dir_life.w;\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = rotateQuat(velocity, u_worldRot);\n    #endif\n  #endif\n  vec3 rotation = a_rotation_uv.xyz;\n  #if ROTATION_OVER_TIME_MODULE_ENABLE\n    if (u_rotation_mode == 1) {\n      rotation += unpackCurveData(rotation_over_time_tex0, timeCoord0) * normalizedTime * a_dir_life.w;\n    } else {\n      vec3 rotation_0 = unpackCurveData(rotation_over_time_tex0, timeCoord0);\n      vec3 rotation_1 = unpackCurveData(rotation_over_time_tex0, timeCoord1);\n      float factor_r = pseudoRandom(a_rndSeed + 125292.);\n      rotation += mix(rotation_0, rotation_1, factor_r) * normalizedTime * a_dir_life.w;\n    }\n  #endif\n  #if COLOR_OVER_TIME_MODULE_ENABLE\n    if (u_color_mode == 1) {\n      color = a_color * texture2D(color_over_time_tex0, timeCoord0);\n    } else {\n      vec4 color_0 = texture2D(color_over_time_tex0, timeCoord0);\n      vec4 color_1 = texture2D(color_over_time_tex0, timeCoord1);\n      float factor_c = pseudoRandom(a_rndSeed + 91041.);\n      color = a_color * mix(color_0, color_1, factor_c);\n    }\n  #else\n    color = a_color;\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((vertIdx - 0.5));\n    #if CC_RENDER_MODE == 0\n      vec3 rotEuler = rotation.xyz;\n    #elif CC_RENDER_MODE == 1\n      vec3 rotEuler = vec3(0.);\n    #else\n      vec3 rotEuler = vec3(0., 0., rotation.z);\n    #endif\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n      #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n        , cc_matViewInv\n      #endif\n      #if CC_RENDER_MODE == 1\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_size_uv.w\n      #endif\n    );\n  #else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(rotation), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(rotation), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color *= a_color1;\n  #endif\n  pos = cc_matViewProj * pos;\n  float frameIndex = 0.;\n  #if TEXTURE_ANIMATION_MODULE_ENABLE\n    float startFrame = 0.;\n    vec3 frameInfo = vec3(0.);\n    if (int(u_anim_info.x) == 1) {\n      frameInfo = unpackCurveData(texture_animation_tex0, timeCoord0);\n    } else {\n      vec3 frameInfo0 = unpackCurveData(texture_animation_tex0, timeCoord0);\n      vec3 frameInfo1 = unpackCurveData(texture_animation_tex0, timeCoord1);\n      float factor_t = pseudoRandom(a_rndSeed + 90794.);\n      frameInfo = mix(frameInfo0, frameInfo1, factor_t);\n    }\n    startFrame = frameInfo.x / u_anim_info.y;\n    frameIndex = repeat(u_anim_info.z * (frameInfo.y + startFrame), 1.);\n  #endif\n  uv = computeUV(frameIndex, vertIdx, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  return pos;\n}\nvoid main() { gl_Position = gpvs_main(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n  #endif\n  return color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision mediump float;\nuniform vec4 mainTiling_Offset;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nattribute vec3 a_position;\nattribute vec4 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  varying vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\n  precision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n  #endif\n  return color;\n}\n  varying vec2 uv;\n  varying vec4 color;\n  #if CC_DRAW_WIRE_FRAME\n    varying vec3 vBarycentric;\n  #endif\n  uniform sampler2D mainTexture;\n  uniform vec4 tintColor;\n  vec4 add () {\n    vec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\n    if (any(lessThan(vBarycentric, vec3(0.02)))) {\n        col = vec4(0., 1., 1., 1.);\n    }\n#endif\n    return CCFragOutput(col);\n  }\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nvoid rotateCorner (inout vec2 corner, float angle){\n  float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n  float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n  corner.x = xOS;\n  corner.y = yOS;\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n  rotateCorner(viewSpaceVert, q.z);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_RENDER_MODE == 1\n  attribute vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\n  attribute vec3 a_texCoord3;\n  attribute vec3 a_normal;\n  attribute vec4 a_color1;\n#endif\nvec4 lpvs_main () {\n  vec3 compScale = scale.xyz * a_texCoord1;\n  vec4 pos = vec4(a_position, 1);\n  #if CC_RENDER_MODE == 1\n    vec4 velocity = vec4(a_color1.xyz, 0);\n  #endif\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = cc_matWorld * velocity;\n    #endif\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_RENDER_MODE == 0\n      vec3 rotEuler = a_texCoord2;\n    #elif CC_RENDER_MODE == 1\n      vec3 rotEuler = vec3(0.);\n    #else\n      vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n      , cc_matViewInv\n    #endif\n    #if CC_RENDER_MODE == 1\n      , cc_cameraPos.xyz\n      , velocity\n      , frameTile_velLenScale.z\n      , frameTile_velLenScale.w\n      , a_texCoord.x\n    #endif\n    );\n    color = a_color;\n  #else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n  #endif\n  uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  pos = cc_matViewProj * pos;\n  return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n  #endif\n  return color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\n#if USE_LOCAL\nuniform highp mat4 cc_matWorld;\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 v_light;\nvarying vec2 uv0;\n#if TWO_COLORED\n  attribute vec4 a_color2;\n  varying vec4 v_dark;\n#endif\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  pos = cc_matViewProj * pos;\n  uv0 = a_texCoord;\n  v_light = a_color;\n  #if TWO_COLORED\n    v_dark = a_color2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_light;\n#if TWO_COLORED\n  varying vec4 v_dark;\n#endif\nvarying vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if TWO_COLORED\n    vec4 texColor = vec4(1, 1, 1, 1);\n    texColor *= texture2D(cc_spriteTexture, uv0);\n     o.a = texColor.a * v_light.a;\n    o.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n  #else\n    o *= texture2D(cc_spriteTexture, uv0);\n    o *= v_light;\n  #endif\n  ALPHA_TEST(o);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp mat4 cc_matViewProj;\n#if USE_LOCAL\nuniform highp mat4 cc_matWorld;\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n    return vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\n    return texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 color;\n#if USE_TEXTURE\n  varying vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    #if IS_GRAY\n      float gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n      o.r = o.g = o.b = gray;\n    #endif\n  #endif\n  o *= color;\n  ALPHA_TEST(o);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n        return int(a_vertexId);\n    }\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_SUPPORT_FLOAT_TEXTURE\n        vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n            int pixelIndex = elementIndex;\n            vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n            vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n            return texture2D(tex, uv);\n        }\n#else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex * 4;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n        return vec4(\n            decode32(texture2D(tex, x)),\n            decode32(texture2D(tex, y)),\n            decode32(texture2D(tex, z)),\n            1.0\n        );\n    }\n#endif\nfloat getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n        return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n        return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n        return cc_displacementWeights[quot].z;\n    } else {\n        return cc_displacementWeights[quot].w;\n    }\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n        result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n  attribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n  #if USE_INSTANCING\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  uniform highp vec4 cc_jointTextureInfo;\n  uniform highp vec4 cc_jointAnimInfo;\n  uniform highp sampler2D cc_jointTexture;\n  #else\n  uniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n  #if CC_SUPPORT_FLOAT_TEXTURE\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n      vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n      vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #else\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = vec4(\n        decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n      );\n      vec4 v2 = vec4(\n        decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n      );\n      vec4 v3 = vec4(\n        decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n      );\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n#else\n  mat4 getJointMatrix (float i) {\n    int idx = int(i);\n    vec4 v1 = cc_joints[idx * 3];\n    vec4 v2 = cc_joints[idx * 3 + 1];\n    vec4 v3 = cc_joints[idx * 3 + 2];\n    return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n  }\n#endif\nmat4 skinMatrix () {\n  vec4 joints = vec4(a_joints);\n  return getJointMatrix(joints.x) * a_weights.x\n       + getJointMatrix(joints.y) * a_weights.y\n       + getJointMatrix(joints.z) * a_weights.z\n       + getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\n  mat4 m = skinMatrix();\n  position = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\n  mat4 m = skinMatrix();\n  attr.position = m * attr.position;\n  attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n  attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\n#if USE_INSTANCING\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n  uniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matWorldIT;\nuniform highp vec4 cc_lightingMapUVParam;\n#endif\nuniform vec4 tilingOffset;\nfloat LinearFog(vec4 pos) {\n    vec4 wPos = pos;\n    float cam_dis = distance(cc_cameraPos, wPos);\n    float fogStart = cc_fogBase.x;\n    float fogEnd = cc_fogBase.y;\n    return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float fogDensity = cc_fogBase.z;\n    float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n    float f = exp(-cam_dis * fogDensity);\n    return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float fogDensity = cc_fogBase.z;\n    float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n    float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n    return f;\n}\nfloat LayeredFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float _FogTop = cc_fogAdd.x;\n    float _FogRange = cc_fogAdd.y;\n    vec3 camWorldProj = cc_cameraPos.xyz;\n    camWorldProj.y = 0.;\n    vec3 worldPosProj = wPos.xyz;\n    worldPosProj.y = 0.;\n    float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n    float fDeltaY, fDensityIntegral;\n    if (cc_cameraPos.y > _FogTop) {\n        if (wPos.y < _FogTop) {\n            fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n            fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n        } else {\n            fDeltaY = 0.;\n            fDensityIntegral = 0.;\n        }\n    } else {\n        if (wPos.y < _FogTop) {\n            float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n            float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n            fDeltaY = abs(fDeltaA - fDeltaB);\n            fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n        } else {\n            fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n            fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n        }\n    }\n    float fDensity;\n    if (fDeltaY != 0.) {\n        fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n    } else {\n        fDensity = 0.;\n    }\n    float f = exp(-fDensity);\n    return f;\n}\nfloat CC_TRANSFER_FOG(vec4 pos) {\n    #if CC_USE_FOG == 0\n        return LinearFog(pos);\n\t#elif CC_USE_FOG == 1\n        return ExpFog(pos);\n    #elif CC_USE_FOG == 2\n        return ExpSquaredFog(pos);\n    #elif CC_USE_FOG == 3\n        return LayeredFog(pos);\n    #endif\n    return 1.;\n}\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if USE_VERTEX_COLOR\n  attribute vec4 a_color;\n  varying vec4 v_color;\n#endif\nvarying vec3 v_position;\nvarying vec3 v_normal;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying float v_fog_factor;\n#if USE_NORMAL_MAP\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  attribute vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  varying vec2 v_luv;\nvoid CCLightingMapCaclUV()\n{\n#if !USE_INSTANCING\n      v_luv = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\n#else\n      v_luv = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\n#endif\n}\n#endif\nvec4 vert () {\n  StandardVertInput In;\n  In.position = vec4(a_position, 1.0);\n  In.normal = a_normal;\n  In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In);\n  #endif\n  mat4 matWorld, matWorldIT;\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    matWorldIT = matWorld;\n  #elif USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n  v_fog_factor = CC_TRANSFER_FOG(pos);\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    CCLightingMapCaclUV();\n  #endif\n    v_shadowPos = cc_matLightViewProj * pos;\n  return cc_matProj * (cc_matView * matWorld) * In.position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_exposure;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform lowp vec4 cc_shadowColor;\nuniform lowp vec4 cc_shadowInfo;\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\n  return rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n    #ifdef GL_EXT_shader_texture_lod\n      return texture2DLodEXT(tex, coord, lod);\n    #else\n      return texture2D(tex, coord, lod);\n    #endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n    #ifdef GL_EXT_shader_texture_lod\n      return textureCubeLodEXT(tex, coord, lod);\n    #else\n      return textureCube(tex, coord, lod);\n    #endif\n}\n#endif\n#if CC_RECEIVE_SHADOW\nvarying highp vec4 v_shadowPos;\n#if CC_RECEIVE_SHADOW\n  uniform sampler2D cc_shadowMap;\n  uniform sampler2D cc_spotLightingMap;\n  float CCGetShadowFactorX1 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float closestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    float shadow = step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    return shadow;\n  }\n  float CCGetShadowFactorX5 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    return shadow / 5.0;\n  }\n  float CCGetShadowFactorX9 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -1; i <= 1; i++) {\n      for (int j = -1; j <= 1; j++) {\n        float closestDepth = dot(texture2D(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 9.0;\n  }\n  float CCGetShadowFactorX25 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -2; i <= 2; i++) {\n      for (int j = -2; j <= 2; j++) {\n        float closestDepth = dot(texture2D(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 25.0;\n  }\n  float CCGetDirLightShadowFactorX1 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float closestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    float shadow = step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    return shadow;\n  }\n  float CCGetDirLightShadowFactorX5 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    return shadow / 5.0;\n  }\n  float CCGetDirLightShadowFactorX9 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -1; i <= 1; i++) {\n      for (int j = -1; j <= 1; j++) {\n        float closestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 9.0;\n  }\n  float CCGetDirLightShadowFactorX25 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -2; i <= 2; i++) {\n      for (int j = -2; j <= 2; j++) {\n        float closestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 25.0;\n  }\n#endif\n#endif\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness*0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min( r.x * r.x, exp2( -9.28 * NoV ) ) * r.x + r.y;\n  vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\nstruct StandardSurface {\n  vec4 albedo;\n  vec3 position;\n  vec3 normal;\n  vec3 emissive;\n  vec4 lightmap;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\n#if CC_FORWARD_ADD\nuniform highp vec4 cc_lightPos[1];\nuniform vec4 cc_lightColor[1];\nuniform vec4 cc_lightSizeRangeAngle[1];\nuniform vec4 cc_lightDir[1];\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n  float factor = distSqr * invSqrAttRadius;\n  float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n  return smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\n  float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n  attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n  return attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n  float cd = dot(litDir, L);\n  float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n  return (attenuation * attenuation);\n}\n  vec4 CCStandardShading (StandardSurface s) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - s.position);\n    float NV = max(abs(dot(N, V)), 0.001);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    for (int i = 0; i < 1; i++) {\n      vec3 SLU = cc_lightPos[i].xyz - s.position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.001);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = cc_lightColor[i].rgb;\n    #if CC_RECEIVE_SHADOW\n      if (cc_lightPos[i].w > 0.0) {\n    {\n      float pcf = cc_shadowInfo.z + 0.001;\n      float shadowAttenuation = 0.0;\n      if (pcf > 3.0) shadowAttenuation = CCGetDirLightShadowFactorX25();\n      else if (3.0 > pcf && pcf > 2.0) shadowAttenuation = CCGetDirLightShadowFactorX9();\n      else if (2.0 > pcf && pcf > 1.0) shadowAttenuation = CCGetDirLightShadowFactorX5();\n      else shadowAttenuation = CCGetDirLightShadowFactorX1();\n      lightColor *= 1.0 - shadowAttenuation;\n    }\n      }\n    #endif\n      finalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n    }\n    finalColor = finalColor * s.occlusion;\n    return vec4(finalColor, 0.0);\n  }\n#else\n  vec4 CCStandardShading (StandardSurface s) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - s.position);\n    float NV = max(abs(dot(N, V)), 0.001);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 L = normalize(-cc_mainLitDir.xyz);\n    vec3 H = normalize(L+V);\n    float NH = max(dot(N, H), 0.0);\n    float NL = max(dot(N, L), 0.001);\n    vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n    #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n      finalColor = s.lightmap.a * s.lightmap.rgb + (1.0 - s.lightmap.a) * finalColor;\n    #endif\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n    finalColor *= (diffuseContrib + specularContrib);\n    float fAmb = 0.5 - N.y * 0.5;\n    vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\n    finalColor += (ambDiff.rgb * diffuse);\n    #if CC_USE_IBL\n      vec3 R = normalize(reflect(-V, N));\n      vec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n      #if CC_USE_IBL == 2\n        vec3 env = unpackRGBE(envmap);\n      #else\n        vec3 env = SRGBToLinear(envmap.rgb);\n      #endif\n      finalColor += env * cc_ambientSky.w * specular;\n    #endif\n    finalColor = finalColor * s.occlusion;\n    #if CC_USE_HDR\n      s.emissive *= cc_exposure.w;\n    #endif\n    finalColor += s.emissive;\n    #if CC_RECEIVE_SHADOW\n    {\n      float pcf = cc_shadowInfo.z + 0.001;\n      float shadowAttenuation = 0.0;\n      if (pcf > 3.0) shadowAttenuation = CCGetShadowFactorX25();\n      else if (3.0 > pcf && pcf > 2.0) shadowAttenuation = CCGetShadowFactorX9();\n      else if (2.0 > pcf && pcf > 1.0) shadowAttenuation = CCGetShadowFactorX5();\n      else shadowAttenuation = CCGetShadowFactorX1();\n      vec3 shadowColor = cc_shadowColor.rgb * cc_shadowColor.a + finalColor.rgb * (1.0 - cc_shadowColor.a);\n      finalColor.rgb = shadowColor.rgb * shadowAttenuation * NL + finalColor.rgb * (1.0 - shadowAttenuation * NL);\n    }\n    #endif\n    return vec4(finalColor, s.albedo.a);\n  }\n#endif\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if !CC_USE_HDR\n    color.rgb = sqrt(ACESToneMap(color.rgb));\n  #endif\n  return color;\n}\nuniform vec4 albedo;\nuniform vec4 albedoScaleAndCutoff;\nuniform vec4 pbrParams;\nuniform vec4 emissive;\nuniform vec4 emissiveScaleParam;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  varying vec2 v_luv;\nuniform sampler2D cc_lightingMap;\n#endif\nvarying vec3 v_position;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec3 v_normal;\nvarying float v_fog_factor;\n#if USE_VERTEX_COLOR\n  varying vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n  uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = albedo;\n  #if USE_VERTEX_COLOR\n    baseColor *= v_color;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture2D(albedoMap, ALBEDO_UV);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  s.albedo = baseColor;\n  s.albedo.rgb *= albedoScaleAndCutoff.xyz;\n  #if USE_ALPHA_TEST\n    if (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    s.lightmap = texture2D(cc_lightingMap, v_luv);\n  #endif\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture2D(normalMap, NORMAL_UV).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * pbrParams.w) * normalize(v_tangent) +\n      (nmmp.y * pbrParams.w) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n  s.position = v_position;\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n    vec4 res = texture2D(pbrMap, PBR_UV);\n    pbr.x *= res.r;\n    pbr.y *= res.g;\n    pbr.z *= res.b;\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture2D(metallicRoughnessMap, PBR_UV);\n    pbr.z *= metallicRoughness.b;\n    pbr.y *= metallicRoughness.g;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.x *= texture2D(occlusionMap, PBR_UV).r;\n  #endif\n  s.occlusion = clamp(pbr.x, 0.0, 0.96);\n  s.roughness = clamp(pbr.y, 0.04, 1.0);\n  s.metallic = pbr.z;\n  s.emissive = emissive.rgb * emissiveScaleParam.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture2D(emissiveMap, EMISSIVE_UV).rgb);\n  #endif\n}\nvec4 frag () {\n  StandardSurface s; surf(s);\n  vec4 color = CCStandardShading(s);\n  color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n  return CCFragOutput(color);\n}\nvoid main() { gl_FragColor = frag(); }"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n        return int(a_vertexId);\n    }\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_SUPPORT_FLOAT_TEXTURE\n        vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n            int pixelIndex = elementIndex;\n            vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n            vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n            return texture2D(tex, uv);\n        }\n#else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex * 4;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n        return vec4(\n            decode32(texture2D(tex, x)),\n            decode32(texture2D(tex, y)),\n            decode32(texture2D(tex, z)),\n            1.0\n        );\n    }\n#endif\nfloat getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n        return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n        return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n        return cc_displacementWeights[quot].z;\n    } else {\n        return cc_displacementWeights[quot].w;\n    }\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n        result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n  attribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n  #if USE_INSTANCING\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  uniform highp vec4 cc_jointTextureInfo;\n  uniform highp vec4 cc_jointAnimInfo;\n  uniform highp sampler2D cc_jointTexture;\n  #else\n  uniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n  #if CC_SUPPORT_FLOAT_TEXTURE\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n      vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n      vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #else\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = vec4(\n        decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n      );\n      vec4 v2 = vec4(\n        decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n      );\n      vec4 v3 = vec4(\n        decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n      );\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n#else\n  mat4 getJointMatrix (float i) {\n    int idx = int(i);\n    vec4 v1 = cc_joints[idx * 3];\n    vec4 v2 = cc_joints[idx * 3 + 1];\n    vec4 v3 = cc_joints[idx * 3 + 2];\n    return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n  }\n#endif\nmat4 skinMatrix () {\n  vec4 joints = vec4(a_joints);\n  return getJointMatrix(joints.x) * a_weights.x\n       + getJointMatrix(joints.y) * a_weights.y\n       + getJointMatrix(joints.z) * a_weights.z\n       + getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\n  mat4 m = skinMatrix();\n  position = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\n  mat4 m = skinMatrix();\n  attr.position = m * attr.position;\n  attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n  attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\n#if USE_INSTANCING\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n  uniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matWorldIT;\n#endif\nuniform vec4 tilingOffset;\nuniform highp mat4 cc_matLightViewProj;\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  attribute vec2 a_texCoord1;\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying float v_clip_depth;\nvec4 vert () {\n  StandardVertInput In;\n  In.position = vec4(a_position, 1.0);\n  In.normal = a_normal;\n  In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In);\n  #endif\n  mat4 matWorld, matWorldIT;\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    matWorldIT = matWorld;\n  #elif USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n  vec4 worldPos = matWorld * In.position;\n  vec4 clipPos = cc_matLightViewProj * worldPos;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  v_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nuniform vec4 albedo;\nuniform vec4 albedoScaleAndCutoff;\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 160581375.0) * depth;\n  ret = fract(ret);\n  ret -= ret.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n  return ret;\n}\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying float v_clip_depth;\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = albedo;\n  #if USE_ALBEDO_MAP\n    baseColor *= texture2D(albedoMap, ALBEDO_UV);\n  #endif\n  #if USE_ALPHA_TEST\n    if (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  return packDepthToRGBA(v_clip_depth);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform highp mat4 cc_matWorld;\nfloat LinearFog(vec4 pos) {\n    vec4 wPos = pos;\n    float cam_dis = distance(cc_cameraPos, wPos);\n    float fogStart = cc_fogBase.x;\n    float fogEnd = cc_fogBase.y;\n    return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float fogDensity = cc_fogBase.z;\n    float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n    float f = exp(-cam_dis * fogDensity);\n    return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float fogDensity = cc_fogBase.z;\n    float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n    float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n    return f;\n}\nfloat LayeredFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float _FogTop = cc_fogAdd.x;\n    float _FogRange = cc_fogAdd.y;\n    vec3 camWorldProj = cc_cameraPos.xyz;\n    camWorldProj.y = 0.;\n    vec3 worldPosProj = wPos.xyz;\n    worldPosProj.y = 0.;\n    float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n    float fDeltaY, fDensityIntegral;\n    if (cc_cameraPos.y > _FogTop) {\n        if (wPos.y < _FogTop) {\n            fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n            fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n        } else {\n            fDeltaY = 0.;\n            fDensityIntegral = 0.;\n        }\n    } else {\n        if (wPos.y < _FogTop) {\n            float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n            float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n            fDeltaY = abs(fDeltaA - fDeltaB);\n            fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n        } else {\n            fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n            fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n        }\n    }\n    float fDensity;\n    if (fDeltaY != 0.) {\n        fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n    } else {\n        fDensity = 0.;\n    }\n    float f = exp(-fDensity);\n    return f;\n}\nfloat CC_TRANSFER_FOG(vec4 pos) {\n    #if CC_USE_FOG == 0\n        return LinearFog(pos);\n\t#elif CC_USE_FOG == 1\n        return ExpFog(pos);\n    #elif CC_USE_FOG == 2\n        return ExpSquaredFog(pos);\n    #elif CC_USE_FOG == 3\n        return LayeredFog(pos);\n    #endif\n    return 1.;\n}\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nvarying highp vec3 v_position;\nvarying mediump vec3 v_normal;\n#if USE_NORMALMAP\n  varying mediump vec3 v_tangent;\n  varying mediump vec3 v_binormal;\n#endif\nvarying mediump vec2 uvw;\nvarying mediump vec2 uv0;\nvarying mediump vec2 uv1;\nvarying mediump vec2 uv2;\nvarying mediump vec2 uv3;\nvarying mediump vec2 luv;\nvarying mediump vec3 diffuse;\nvarying mediump float v_fog_factor;\nuniform vec4 UVScale;\nuniform vec4 lightMapUVParam;\nvec4 vert () {\n  vec3 worldPos;\n  worldPos.x = cc_matWorld[3][0] + a_position.x;\n  worldPos.y = cc_matWorld[3][1] + a_position.y;\n  worldPos.z = cc_matWorld[3][2] + a_position.z;\n  vec4 pos = vec4(worldPos, 1.0);\n  pos = cc_matViewProj * pos;\n  uvw = a_texCoord;\n  uv0 = a_position.xz * UVScale.x;\n  uv1 = a_position.xz * UVScale.y;\n  uv2 = a_position.xz * UVScale.z;\n  uv3 = a_position.xz * UVScale.w;\n  #if USE_LIGHTMAP\n    luv = lightMapUVParam.xy + a_texCoord * lightMapUVParam.zw;\n  #endif\n  v_position = worldPos;\n  v_normal = a_normal;\n  v_fog_factor = CC_TRANSFER_FOG(vec4(worldPos, 1.0));\n  #if USE_NORMALMAP\n    v_tangent = vec3(1.0, 0.0, 0.0);\n    v_binormal = vec3(0.0, 0.0, 1.0);\n    v_binormal = cross(v_tangent, a_normal);\n    v_tangent = cross(a_normal, v_binormal);\n  #endif\n    v_shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\n  return pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_exposure;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform lowp vec4 cc_shadowColor;\nuniform lowp vec4 cc_shadowInfo;\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\n  return rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n    #ifdef GL_EXT_shader_texture_lod\n      return texture2DLodEXT(tex, coord, lod);\n    #else\n      return texture2D(tex, coord, lod);\n    #endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n    #ifdef GL_EXT_shader_texture_lod\n      return textureCubeLodEXT(tex, coord, lod);\n    #else\n      return textureCube(tex, coord, lod);\n    #endif\n}\n#endif\n#if CC_RECEIVE_SHADOW\nvarying highp vec4 v_shadowPos;\n#if CC_RECEIVE_SHADOW\n  uniform sampler2D cc_shadowMap;\n  uniform sampler2D cc_spotLightingMap;\n  float CCGetShadowFactorX1 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float closestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    float shadow = step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    return shadow;\n  }\n  float CCGetShadowFactorX5 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    return shadow / 5.0;\n  }\n  float CCGetShadowFactorX9 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -1; i <= 1; i++) {\n      for (int j = -1; j <= 1; j++) {\n        float closestDepth = dot(texture2D(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 9.0;\n  }\n  float CCGetShadowFactorX25 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -2; i <= 2; i++) {\n      for (int j = -2; j <= 2; j++) {\n        float closestDepth = dot(texture2D(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 25.0;\n  }\n  float CCGetDirLightShadowFactorX1 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float closestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    float shadow = step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    return shadow;\n  }\n  float CCGetDirLightShadowFactorX5 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture2D(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    return shadow / 5.0;\n  }\n  float CCGetDirLightShadowFactorX9 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -1; i <= 1; i++) {\n      for (int j = -1; j <= 1; j++) {\n        float closestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 9.0;\n  }\n  float CCGetDirLightShadowFactorX25 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -2; i <= 2; i++) {\n      for (int j = -2; j <= 2; j++) {\n        float closestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 25.0;\n  }\n#endif\n#endif\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness*0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min( r.x * r.x, exp2( -9.28 * NoV ) ) * r.x + r.y;\n  vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\nstruct StandardSurface {\n  vec4 albedo;\n  vec3 position;\n  vec3 normal;\n  vec3 emissive;\n  vec4 lightmap;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\n#if CC_FORWARD_ADD\nuniform highp vec4 cc_lightPos[1];\nuniform vec4 cc_lightColor[1];\nuniform vec4 cc_lightSizeRangeAngle[1];\nuniform vec4 cc_lightDir[1];\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n  float factor = distSqr * invSqrAttRadius;\n  float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n  return smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\n  float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n  attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n  return attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n  float cd = dot(litDir, L);\n  float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n  return (attenuation * attenuation);\n}\n  vec4 CCStandardShading (StandardSurface s) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - s.position);\n    float NV = max(abs(dot(N, V)), 0.001);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    for (int i = 0; i < 1; i++) {\n      vec3 SLU = cc_lightPos[i].xyz - s.position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.001);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = cc_lightColor[i].rgb;\n    #if CC_RECEIVE_SHADOW\n      if (cc_lightPos[i].w > 0.0) {\n    {\n      float pcf = cc_shadowInfo.z + 0.001;\n      float shadowAttenuation = 0.0;\n      if (pcf > 3.0) shadowAttenuation = CCGetDirLightShadowFactorX25();\n      else if (3.0 > pcf && pcf > 2.0) shadowAttenuation = CCGetDirLightShadowFactorX9();\n      else if (2.0 > pcf && pcf > 1.0) shadowAttenuation = CCGetDirLightShadowFactorX5();\n      else shadowAttenuation = CCGetDirLightShadowFactorX1();\n      lightColor *= 1.0 - shadowAttenuation;\n    }\n      }\n    #endif\n      finalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n    }\n    finalColor = finalColor * s.occlusion;\n    return vec4(finalColor, 0.0);\n  }\n#else\n  vec4 CCStandardShading (StandardSurface s) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - s.position);\n    float NV = max(abs(dot(N, V)), 0.001);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 L = normalize(-cc_mainLitDir.xyz);\n    vec3 H = normalize(L+V);\n    float NH = max(dot(N, H), 0.0);\n    float NL = max(dot(N, L), 0.001);\n    vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n    #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n      finalColor = s.lightmap.a * s.lightmap.rgb + (1.0 - s.lightmap.a) * finalColor;\n    #endif\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n    finalColor *= (diffuseContrib + specularContrib);\n    float fAmb = 0.5 - N.y * 0.5;\n    vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\n    finalColor += (ambDiff.rgb * diffuse);\n    #if CC_USE_IBL\n      vec3 R = normalize(reflect(-V, N));\n      vec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n      #if CC_USE_IBL == 2\n        vec3 env = unpackRGBE(envmap);\n      #else\n        vec3 env = SRGBToLinear(envmap.rgb);\n      #endif\n      finalColor += env * cc_ambientSky.w * specular;\n    #endif\n    finalColor = finalColor * s.occlusion;\n    #if CC_USE_HDR\n      s.emissive *= cc_exposure.w;\n    #endif\n    finalColor += s.emissive;\n    #if CC_RECEIVE_SHADOW\n    {\n      float pcf = cc_shadowInfo.z + 0.001;\n      float shadowAttenuation = 0.0;\n      if (pcf > 3.0) shadowAttenuation = CCGetShadowFactorX25();\n      else if (3.0 > pcf && pcf > 2.0) shadowAttenuation = CCGetShadowFactorX9();\n      else if (2.0 > pcf && pcf > 1.0) shadowAttenuation = CCGetShadowFactorX5();\n      else shadowAttenuation = CCGetShadowFactorX1();\n      vec3 shadowColor = cc_shadowColor.rgb * cc_shadowColor.a + finalColor.rgb * (1.0 - cc_shadowColor.a);\n      finalColor.rgb = shadowColor.rgb * shadowAttenuation * NL + finalColor.rgb * (1.0 - shadowAttenuation * NL);\n    }\n    #endif\n    return vec4(finalColor, s.albedo.a);\n  }\n#endif\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if !CC_USE_HDR\n    color.rgb = sqrt(ACESToneMap(color.rgb));\n  #endif\n  return color;\n}\nvarying highp vec3 v_position;\nvarying mediump vec3 v_normal;\n#if USE_NORMALMAP\n  varying mediump vec3 v_tangent;\n  varying mediump vec3 v_binormal;\n#endif\nvarying mediump vec2 uvw;\nvarying mediump vec2 uv0;\nvarying mediump vec2 uv1;\nvarying mediump vec2 uv2;\nvarying mediump vec2 uv3;\nvarying mediump vec3 diffuse;\nvarying mediump vec2 luv;\nvarying mediump float v_fog_factor;\nuniform vec4 metallic;\nuniform vec4 roughness;\nuniform sampler2D weightMap;\nuniform sampler2D detailMap0;\nuniform sampler2D detailMap1;\nuniform sampler2D detailMap2;\nuniform sampler2D detailMap3;\nuniform sampler2D normalMap0;\nuniform sampler2D normalMap1;\nuniform sampler2D normalMap2;\nuniform sampler2D normalMap3;\nuniform sampler2D lightMap;\nvoid surf (out StandardSurface s) {\n  #if LAYERS > 1\n    vec4 w = texture2D(weightMap, uvw);\n  #endif\n  vec4 baseColor = vec4(0, 0, 0, 0);\n  #if LAYERS == 1\n    baseColor = texture2D(detailMap0, uv0);\n  #elif LAYERS == 2\n    baseColor += texture2D(detailMap0, uv0) * w.r;\n    baseColor += texture2D(detailMap1, uv1) * w.g;\n  #elif LAYERS == 3\n    baseColor += texture2D(detailMap0, uv0) * w.r;\n    baseColor += texture2D(detailMap1, uv1) * w.g;\n    baseColor += texture2D(detailMap2, uv2) * w.b;\n  #elif LAYERS == 4\n    baseColor += texture2D(detailMap0, uv0) * w.r;\n    baseColor += texture2D(detailMap1, uv1) * w.g;\n    baseColor += texture2D(detailMap2, uv2) * w.b;\n    baseColor += texture2D(detailMap3, uv3) * w.a;\n  #else\n    baseColor = texture2D(detailMap0, uv0);\n  #endif\n  s.position = v_position;\n  #if USE_NORMALMAP\n    vec4 baseNormal = vec4(0, 0, 0, 0);\n    #if LAYERS == 1\n      baseNormal = texture2D(normalMap0, uv0);\n    #elif LAYERS == 2\n      baseNormal += texture2D(normalMap0, uv0) * w.r;\n      baseNormal += texture2D(normalMap1, uv1) * w.g;\n    #elif LAYERS == 3\n      baseNormal += texture2D(normalMap0, uv0) * w.r;\n      baseNormal += texture2D(normalMap1, uv1) * w.g;\n      baseNormal += texture2D(normalMap2, uv2) * w.b;\n    #elif LAYERS == 4\n      baseNormal += texture2D(normalMap0, uv0) * w.r;\n      baseNormal += texture2D(normalMap1, uv1) * w.g;\n      baseNormal += texture2D(normalMap2, uv2) * w.b;\n      baseNormal += texture2D(normalMap3, uv3) * w.a;\n    #else\n      baseNormal = texture2D(normalMap0, uv0);\n    #endif\n    vec3 nmmp = baseNormal.xyz - vec3(0.5);\n    s.normal =\n      nmmp.x * normalize(v_tangent) +\n      nmmp.y * normalize(v_binormal) +\n      nmmp.z * normalize(v_normal);\n  #else\n    s.normal = v_normal;\n  #endif\n  s.albedo = vec4(SRGBToLinear(baseColor.rgb), 1.0);\n  s.occlusion = 1.0;\n  #if USE_PBR\n    s.roughness = 0.0;\n    #if LAYERS == 1\n      s.roughness = roughness.x;\n    #elif LAYERS == 2\n      s.roughness += roughness.x * w.r;\n      s.roughness += roughness.y * w.g;\n    #elif LAYERS == 3\n      s.roughness += roughness.x * w.r;\n      s.roughness += roughness.y * w.g;\n      s.roughness += roughness.z * w.b;\n    #elif LAYERS == 4\n      s.roughness += roughness.x * w.r;\n      s.roughness += roughness.y * w.g;\n      s.roughness += roughness.z * w.b;\n      s.roughness += roughness.w * w.a;\n    #else\n      s.roughness = 1.0;\n    #endif\n    s.metallic = 0.0;\n    #if LAYERS == 1\n      s.metallic = metallic.x;\n    #elif LAYERS == 2\n      s.metallic += metallic.x * w.r;\n      s.metallic += metallic.y * w.g;\n    #elif LAYERS == 3\n      s.metallic += metallic.x * w.r;\n      s.metallic += metallic.y * w.g;\n      s.metallic += metallic.z * w.b;\n    #elif LAYERS == 4\n      s.metallic += metallic.x * w.r;\n      s.metallic += metallic.y * w.g;\n      s.metallic += metallic.z * w.b;\n      s.metallic += metallic.w * w.a;\n    #else\n      s.metallic = 0.0;\n    #endif\n  #else\n    s.roughness = 1.0;\n    s.metallic = 0.0;\n  #endif\n  s.emissive = vec3(0.0, 0.0, 0.0);\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    s.lightmap = texture2D(lightMap, luv);\n  #else\n    s.lightmap = vec4(0.0, 0.0, 0.0, 0.0);\n  #endif\n}\nvec4 frag () {\n  StandardSurface s; surf(s);\n  vec4 color = CCStandardShading(s);\n  color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n  return CCFragOutput(color);\n}\nvoid main() { gl_FragColor = frag(); }"},{vert:"\nprecision highp float;\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matLightViewProj;\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nvarying vec2 v_clip_depth;\nvec4 vert () {\n  vec4 worldPos;\n  worldPos.x = cc_matWorld[3][0] + a_position.x;\n  worldPos.y = cc_matWorld[3][1] + a_position.y;\n  worldPos.z = cc_matWorld[3][2] + a_position.z;\n  worldPos.w = 1.0;\n  vec4 clipPos = cc_matLightViewProj * worldPos;\n  v_clip_depth = clipPos.zw;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 160581375.0) * depth;\n  ret = fract(ret);\n  ret -= ret.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n  return ret;\n}\nvarying vec2 v_clip_depth;\nvec4 frag () {\n  return packDepthToRGBA(v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n        return int(a_vertexId);\n    }\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_SUPPORT_FLOAT_TEXTURE\n        vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n            int pixelIndex = elementIndex;\n            vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n            vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n            return texture2D(tex, uv);\n        }\n#else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex * 4;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n        return vec4(\n            decode32(texture2D(tex, x)),\n            decode32(texture2D(tex, y)),\n            decode32(texture2D(tex, z)),\n            1.0\n        );\n    }\n#endif\nfloat getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n        return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n        return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n        return cc_displacementWeights[quot].z;\n    } else {\n        return cc_displacementWeights[quot].w;\n    }\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n        result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n  attribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n  #if USE_INSTANCING\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  uniform highp vec4 cc_jointTextureInfo;\n  uniform highp vec4 cc_jointAnimInfo;\n  uniform highp sampler2D cc_jointTexture;\n  #else\n  uniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n  #if CC_SUPPORT_FLOAT_TEXTURE\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n      vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n      vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #else\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = vec4(\n        decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n      );\n      vec4 v2 = vec4(\n        decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n      );\n      vec4 v3 = vec4(\n        decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n      );\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n#else\n  mat4 getJointMatrix (float i) {\n    int idx = int(i);\n    vec4 v1 = cc_joints[idx * 3];\n    vec4 v2 = cc_joints[idx * 3 + 1];\n    vec4 v3 = cc_joints[idx * 3 + 2];\n    return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n  }\n#endif\nmat4 skinMatrix () {\n  vec4 joints = vec4(a_joints);\n  return getJointMatrix(joints.x) * a_weights.x\n       + getJointMatrix(joints.y) * a_weights.y\n       + getJointMatrix(joints.z) * a_weights.z\n       + getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\n  mat4 m = skinMatrix();\n  position = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\n  mat4 m = skinMatrix();\n  attr.position = m * attr.position;\n  attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n  attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\n#if USE_INSTANCING\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n  uniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\n#endif\nfloat LinearFog(vec4 pos) {\n    vec4 wPos = pos;\n    float cam_dis = distance(cc_cameraPos, wPos);\n    float fogStart = cc_fogBase.x;\n    float fogEnd = cc_fogBase.y;\n    return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float fogDensity = cc_fogBase.z;\n    float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n    float f = exp(-cam_dis * fogDensity);\n    return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float fogDensity = cc_fogBase.z;\n    float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n    float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n    return f;\n}\nfloat LayeredFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float _FogTop = cc_fogAdd.x;\n    float _FogRange = cc_fogAdd.y;\n    vec3 camWorldProj = cc_cameraPos.xyz;\n    camWorldProj.y = 0.;\n    vec3 worldPosProj = wPos.xyz;\n    worldPosProj.y = 0.;\n    float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n    float fDeltaY, fDensityIntegral;\n    if (cc_cameraPos.y > _FogTop) {\n        if (wPos.y < _FogTop) {\n            fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n            fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n        } else {\n            fDeltaY = 0.;\n            fDensityIntegral = 0.;\n        }\n    } else {\n        if (wPos.y < _FogTop) {\n            float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n            float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n            fDeltaY = abs(fDeltaA - fDeltaB);\n            fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n        } else {\n            fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n            fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n        }\n    }\n    float fDensity;\n    if (fDeltaY != 0.) {\n        fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n    } else {\n        fDensity = 0.;\n    }\n    float f = exp(-fDensity);\n    return f;\n}\nfloat CC_TRANSFER_FOG(vec4 pos) {\n    #if CC_USE_FOG == 0\n        return LinearFog(pos);\n\t#elif CC_USE_FOG == 1\n        return ExpFog(pos);\n    #elif CC_USE_FOG == 2\n        return ExpSquaredFog(pos);\n    #elif CC_USE_FOG == 3\n        return LayeredFog(pos);\n    #endif\n    return 1.;\n}\n#if USE_VERTEX_COLOR\n  attribute lowp vec4 a_color;\n  varying lowp vec4 v_color;\n#endif\n#if USE_TEXTURE\n  varying vec2 v_uv;\n  uniform vec4 tilingOffset;\n#endif\nvarying float factor_fog;\nvec4 vert () {\n  vec4 position;\n  position = vec4(a_position, 1.0);\n  #if CC_USE_MORPH\n    applyMorph(position);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(position);\n  #endif\n  mat4 matWorld;\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n  #elif USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n  #else\n    matWorld = cc_matWorld;\n  #endif\n  #if USE_TEXTURE\n    v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n  factor_fog = CC_TRANSFER_FOG(matWorld * position);\n  return cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nuniform mediump vec4 cc_exposure;\nuniform mediump vec4 cc_fogColor;\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n  #endif\n  return color;\n}\n#if USE_ALPHA_TEST\n#endif\n#if USE_TEXTURE\n  varying vec2 v_uv;\n  uniform sampler2D mainTexture;\n#endif\nuniform vec4 mainColor;\nuniform vec4 colorScaleAndCutoff;\n#if USE_VERTEX_COLOR\n  varying lowp vec4 v_color;\n#endif\nvarying float factor_fog;\nvec4 frag () {\n  vec4 o = mainColor;\n  o.rgb *= colorScaleAndCutoff.xyz;\n  #if USE_VERTEX_COLOR\n    o *= v_color;\n  #endif\n  #if USE_TEXTURE\n    o *= texture2D(mainTexture, v_uv);\n  #endif\n  #if USE_ALPHA_TEST\n    if (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n  #endif\n  o = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, o.rgb, factor_fog), o.a);\n  return CCFragOutput(o);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n        return int(a_vertexId);\n    }\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_SUPPORT_FLOAT_TEXTURE\n        vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n            int pixelIndex = elementIndex;\n            vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n            vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n            return texture2D(tex, uv);\n        }\n#else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex * 4;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n        return vec4(\n            decode32(texture2D(tex, x)),\n            decode32(texture2D(tex, y)),\n            decode32(texture2D(tex, z)),\n            1.0\n        );\n    }\n#endif\nfloat getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n        return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n        return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n        return cc_displacementWeights[quot].z;\n    } else {\n        return cc_displacementWeights[quot].w;\n    }\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n        result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n  attribute vec4 a_joints;\nattribute vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n  #if USE_INSTANCING\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  uniform highp vec4 cc_jointTextureInfo;\n  uniform highp vec4 cc_jointAnimInfo;\n  uniform highp sampler2D cc_jointTexture;\n  #else\n  uniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n  #if CC_SUPPORT_FLOAT_TEXTURE\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n      vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n      vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #else\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = vec4(\n        decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n      );\n      vec4 v2 = vec4(\n        decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n      );\n      vec4 v3 = vec4(\n        decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n        decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n      );\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n#else\n  mat4 getJointMatrix (float i) {\n    int idx = int(i);\n    vec4 v1 = cc_joints[idx * 3];\n    vec4 v2 = cc_joints[idx * 3 + 1];\n    vec4 v3 = cc_joints[idx * 3 + 2];\n    return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n  }\n#endif\nmat4 skinMatrix () {\n  vec4 joints = vec4(a_joints);\n  return getJointMatrix(joints.x) * a_weights.x\n       + getJointMatrix(joints.y) * a_weights.y\n       + getJointMatrix(joints.z) * a_weights.z\n       + getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\n  mat4 m = skinMatrix();\n  position = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\n  mat4 m = skinMatrix();\n  attr.position = m * attr.position;\n  attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n  attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\n#if USE_INSTANCING\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n  uniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\n#endif\nuniform highp mat4 cc_matLightPlaneProj;\nvec4 vert () {\n  vec4 position;\n  position = vec4(a_position, 1.0);\n  #if CC_USE_MORPH\n    applyMorph(position);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(position);\n  #endif\n  mat4 matWorld;\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n  #elif USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n  #else\n    matWorld = cc_matWorld;\n  #endif\n  position = cc_matProj * (cc_matView * cc_matLightPlaneProj * matWorld) * position;\n  position.z -= 0.0001;\n  return position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform lowp vec4 cc_shadowColor;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n  #endif\n  return color;\n}\nvec4 frag () {\n  return CCFragOutput(cc_shadowColor);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\nvarying mediump vec4 viewDir;\nvec4 vert () {\n  viewDir = vec4(a_position, 1.0);\n  mat4 matViewRotOnly = mat4(mat3(cc_matView));\n  mat4 matProj = cc_matProj;\n  if (matProj[3].w > 0.0) {\n    vec2 scale = vec2(48.0, 24.0);\n    matProj[0].xy *= scale;\n    matProj[1].xy *= scale;\n    matProj[2].zw = vec2(-1.0);\n    matProj[3].zw = vec2(0.0);\n  }\n  vec4 pos = matProj * matViewRotOnly * viewDir;\n  pos.z = 0.99999 * pos.w;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_ambientSky;\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\n  return rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if !CC_USE_HDR\n    color.rgb = sqrt(ACESToneMap(color.rgb));\n  #endif\n  return color;\n}\nvarying mediump vec4 viewDir;\nvec4 frag () {\n  #if USE_RGBE_CUBEMAP\n    vec3 c = unpackRGBE(textureCube(cc_environment, viewDir.xyz));\n  #else\n    vec3 c = SRGBToLinear(textureCube(cc_environment, viewDir.xyz).rgb);\n  #endif\n  return CCFragOutput(vec4(c * cc_ambientSky.w, 1.0));\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec2 v_uv;\nuniform vec4 offset;\nuniform vec4 digits[20];\nfloat getComponent(vec4 v, float i) {\n  if (i < 1.0) { return v.x; }\n  else if (i < 2.0) { return v.y; }\n  else if (i < 3.0) { return v.z; }\n  else { return v.w; }\n}\nvec4 vert () {\n  vec4 position = cc_matViewProj * vec4(a_position, 1.0);\n  position.xy += offset.xy;\n  v_uv = a_color.xy;\n  if (a_color.z >= 0.0) {\n    float n = getComponent(digits[int(a_color.z)], a_color.w);\n    v_uv += vec2(offset.z * n, 0.0);\n  }\n  return position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_exposure;\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n  #endif\n  return color;\n}\nvarying vec2 v_uv;\nuniform sampler2D mainTexture;\nvec4 frag () {\n  return CCFragOutput(texture2D(mainTexture, v_uv));\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nattribute vec2 a_position;\nattribute vec2 a_texCoord;\nvarying vec2 v_uv;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 0, 1);\n  v_uv = a_texCoord;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvarying vec2 v_uv;\nuniform sampler2D mainTexture;\nuniform float u_precent;\nvec4 frag () {\n  vec4 color = texture2D(mainTexture, v_uv);\n  float precent = clamp(u_precent, 0.0, 1.0);\n  color.xyz *= precent;\n  return color;\n}\nvoid main() { gl_FragColor = frag(); }"}]],glsl3:[[{vert:"\nprecision mediump float;\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nvoid rotateCorner (inout vec2 corner, float angle){\n  float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n  float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n  corner.x = xOS;\n  corner.y = yOS;\n}\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n  , mat4 viewInv\n) {\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n}\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nlayout(std140) uniform builtin {\n  vec4 cc_size_rotation;\n};\nvec4 vs_main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matWorld * pos;\n  vec2 vertOffset = a_texCoord.xy - 0.5;\n  computeVertPos(pos, vertOffset, quaternionFromEuler(vec3(0., 0., cc_size_rotation.z)), vec3(cc_size_rotation.xy, 0.), cc_matViewInv);\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.xy;\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n  #endif\n  return color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\n  vec4 tintColor;\n};\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nin vec3 a_position;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  return pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 frag () {\n  vec4 o = vec4(1.0);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin float a_dist;\nout float v_dist;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_color = a_color;\n  v_dist = a_dist;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nin vec4 v_color;\nin float v_dist;\nvec4 frag () {\n  vec4 o = v_color;\n    float aa = fwidth(v_dist);\n  float alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\n  o.rgb *= o.a;\n  o *= alpha;\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nvoid rotateCorner (inout vec2 corner, float angle){\n  float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n  float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n  corner.x = xOS;\n  corner.y = yOS;\n}\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n  rotateCorner(viewSpaceVert, q.z);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nlayout(std140) uniform SampleConstants {\n  vec4 u_sampleInfo;\n};\nlayout(std140) uniform TickConstants {\n  vec4 u_worldRot;\n  vec4 u_timeDelta;\n};\nin vec4 a_position_starttime;\nin vec4 a_size_uv;\nin vec4 a_rotation_uv;\nin vec4 a_color;\nin vec4 a_dir_life;\nin float a_rndSeed;\n#if CC_RENDER_MODE == 4\n  in vec3 a_texCoord;\n  in vec3 a_texCoord3;\n  in vec3 a_normal;\n  in vec4 a_color1;\n#endif\nvec3 unpackCurveData (sampler2D tex, vec2 coord) {\n    vec4 a = texture(tex, coord);\n    vec4 b = texture(tex, coord + u_sampleInfo.y);\n    float c = fract(coord.x * u_sampleInfo.x);\n    return mix(a.xyz, b.xyz, c);\n}\nvec3 unpackCurveData (sampler2D tex, vec2 coord, out float w) {\n    vec4 a = texture(tex, coord);\n    vec4 b = texture(tex, coord + u_sampleInfo.y);\n    float c = fract(coord.x * u_sampleInfo.x);\n    w = mix(a.w, b.w, c);\n    return mix(a.xyz, b.xyz, c);\n}\nfloat pseudoRandom (float seed) {\n  seed = mod(seed, 233280.);\n  float q = (seed * 9301. + 49297.) / 233280.;\n  return fract(q);\n}\n#if COLOR_OVER_TIME_MODULE_ENABLE\n  uniform sampler2D color_over_time_tex0;\n  layout(std140) uniform ColorConstant {\n    int u_color_mode;\n  };\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\n  uniform sampler2D rotation_over_time_tex0;\n  layout(std140) uniform RotationConstant {\n    int u_rotation_mode;\n  };\n#endif\n#if SIZE_OVER_TIME_MODULE_ENABLE\n  uniform sampler2D size_over_time_tex0;\n  layout(std140) uniform SizeConstant {\n    int u_size_mode;\n  };\n#endif\n#if FORCE_OVER_TIME_MODULE_ENABLE\n  uniform sampler2D force_over_time_tex0;\n  layout(std140) uniform ForceConstant {\n    int u_force_mode;\n    int u_force_space;\n  };\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\n  uniform sampler2D velocity_over_time_tex0;\n  layout(std140) uniform VelocityConstant {\n    int u_velocity_mode;\n    int u_velocity_space;\n  };\n#endif\n#if TEXTURE_ANIMATION_MODULE_ENABLE\n  uniform sampler2D texture_animation_tex0;\n  layout(std140) uniform AnimationConstant {\n    vec4 u_anim_info;\n  };\n#endif\nfloat repeat (float t, float length) {\n  return t - floor(t / length) * length;\n}\nvec4 rotateQuat (vec4 p, vec4 q) {\n  vec3 iv = cross(q.xyz, p.xyz) + q.w * p.xyz;\n  vec3 res = p.xyz + 2.0 * cross(q.xyz, iv);\n  return vec4(res.xyz, p.w);\n}\nvec4 gpvs_main () {\n  float activeTime = u_timeDelta.x - a_position_starttime.w;\n  float normalizedTime = clamp(activeTime / a_dir_life.w, 0.0, 1.0);\n  vec2 timeCoord0 = vec2(normalizedTime, 0.);\n  vec2 timeCoord1 = vec2(normalizedTime, 1.);\n  #if CC_RENDER_MODE == 4\n    vec2 vertIdx = vec2(a_texCoord.x, a_texCoord.y);\n  #else\n    vec2 vertIdx = vec2(a_size_uv.w, a_rotation_uv.w);\n  #endif\n  vec4 velocity = vec4(a_dir_life.xyz, 0.);\n  vec4 pos = vec4(a_position_starttime.xyz, 1.);\n  vec3 size = a_size_uv.xyz;\n  #if SIZE_OVER_TIME_MODULE_ENABLE\n    if (u_size_mode == 1) {\n      size *= unpackCurveData(size_over_time_tex0, timeCoord0);\n    } else {\n      vec3 size_0 = unpackCurveData(size_over_time_tex0, timeCoord0);\n      vec3 size_1 = unpackCurveData(size_over_time_tex0, timeCoord1);\n      float factor_s = pseudoRandom(a_rndSeed + 39825.);\n      size *= mix(size_0, size_1, factor_s);\n    }\n  #endif\n  vec3 compScale = scale.xyz * size;\n  #if FORCE_OVER_TIME_MODULE_ENABLE\n    vec3 forceAnim = vec3(0.);\n    if (u_force_mode == 1) {\n      forceAnim = unpackCurveData(force_over_time_tex0, timeCoord0);\n    } else {\n      vec3 force_0 = unpackCurveData(force_over_time_tex0, timeCoord0);\n      vec3 force_1 = unpackCurveData(force_over_time_tex0, timeCoord1);\n      float factor_f =  pseudoRandom(a_rndSeed + 212165.);\n      forceAnim = mix(force_0, force_1, factor_f);\n    }\n    vec4 forceTrack = vec4(forceAnim, 0.);\n    if (u_force_space == 0) {\n      forceTrack = rotateQuat(forceTrack, u_worldRot);\n    }\n    velocity.xyz += forceTrack.xyz;\n  #endif\n  #if VELOCITY_OVER_TIME_MODULE_ENABLE\n    float speedModifier0 = 1.;\n    float speedModifier1 = 1.;\n    vec3 velocityAnim = vec3(0.);\n    if (u_velocity_mode == 1) {\n      velocityAnim = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n    } else {\n      vec3 vectory_0 = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n      vec3 vectory_1 = unpackCurveData(velocity_over_time_tex0, timeCoord1, speedModifier1);\n      float factor_v = pseudoRandom(a_rndSeed + 197866.);\n      velocityAnim = mix(vectory_0, vectory_1, factor_v);\n      speedModifier0 = mix(speedModifier0, speedModifier1, factor_v);\n    }\n    vec4 velocityTrack = vec4(velocityAnim, 0.);\n    if (u_velocity_space == 0) {\n      velocityTrack = rotateQuat(velocityTrack, u_worldRot);\n    }\n    velocity.xyz += velocityTrack.xyz;\n    velocity.xyz *= speedModifier0;\n  #endif\n  pos.xyz += velocity.xyz * normalizedTime * a_dir_life.w;\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = rotateQuat(velocity, u_worldRot);\n    #endif\n  #endif\n  vec3 rotation = a_rotation_uv.xyz;\n  #if ROTATION_OVER_TIME_MODULE_ENABLE\n    if (u_rotation_mode == 1) {\n      rotation += unpackCurveData(rotation_over_time_tex0, timeCoord0) * normalizedTime * a_dir_life.w;\n    } else {\n      vec3 rotation_0 = unpackCurveData(rotation_over_time_tex0, timeCoord0);\n      vec3 rotation_1 = unpackCurveData(rotation_over_time_tex0, timeCoord1);\n      float factor_r = pseudoRandom(a_rndSeed + 125292.);\n      rotation += mix(rotation_0, rotation_1, factor_r) * normalizedTime * a_dir_life.w;\n    }\n  #endif\n  #if COLOR_OVER_TIME_MODULE_ENABLE\n    if (u_color_mode == 1) {\n      color = a_color * texture(color_over_time_tex0, timeCoord0);\n    } else {\n      vec4 color_0 = texture(color_over_time_tex0, timeCoord0);\n      vec4 color_1 = texture(color_over_time_tex0, timeCoord1);\n      float factor_c = pseudoRandom(a_rndSeed + 91041.);\n      color = a_color * mix(color_0, color_1, factor_c);\n    }\n  #else\n    color = a_color;\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((vertIdx - 0.5));\n    #if CC_RENDER_MODE == 0\n      vec3 rotEuler = rotation.xyz;\n    #elif CC_RENDER_MODE == 1\n      vec3 rotEuler = vec3(0.);\n    #else\n      vec3 rotEuler = vec3(0., 0., rotation.z);\n    #endif\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n      #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n        , cc_matViewInv\n      #endif\n      #if CC_RENDER_MODE == 1\n        , cc_cameraPos.xyz\n        , velocity\n        , frameTile_velLenScale.z\n        , frameTile_velLenScale.w\n        , a_size_uv.w\n      #endif\n    );\n  #else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(rotation), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(rotation), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color *= a_color1;\n  #endif\n  pos = cc_matViewProj * pos;\n  float frameIndex = 0.;\n  #if TEXTURE_ANIMATION_MODULE_ENABLE\n    float startFrame = 0.;\n    vec3 frameInfo = vec3(0.);\n    if (int(u_anim_info.x) == 1) {\n      frameInfo = unpackCurveData(texture_animation_tex0, timeCoord0);\n    } else {\n      vec3 frameInfo0 = unpackCurveData(texture_animation_tex0, timeCoord0);\n      vec3 frameInfo1 = unpackCurveData(texture_animation_tex0, timeCoord1);\n      float factor_t = pseudoRandom(a_rndSeed + 90794.);\n      frameInfo = mix(frameInfo0, frameInfo1, factor_t);\n    }\n    startFrame = frameInfo.x / u_anim_info.y;\n    frameIndex = repeat(u_anim_info.z * (frameInfo.y + startFrame), 1.);\n  #endif\n  uv = computeUV(frameIndex, vertIdx, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  return pos;\n}\nvoid main() { gl_Position = gpvs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n  #endif\n  return color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\n  vec4 tintColor;\n};\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nin vec3 a_position;\nin vec4 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\n  precision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n  #endif\n  return color;\n}\n  in vec2 uv;\n  in vec4 color;\n  #if CC_DRAW_WIRE_FRAME\n    in vec3 vBarycentric;\n  #endif\n  uniform sampler2D mainTexture;\n  layout(std140) uniform FragConstants {\n    vec4 tintColor;\n  };\n  vec4 add () {\n    vec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\n    if (any(lessThan(vBarycentric, vec3(0.02)))) {\n        col = vec4(0., 1., 1., 1.);\n    }\n#endif\n    return CCFragOutput(col);\n  }\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\n  mat3 m = mat3(xAxis,yAxis,zAxis);\n  float trace = m[0][0] + m[1][1] + m[2][2];\n  vec4 quat;\n  if (trace > 0.) {\n    float s = 0.5 / sqrt(trace + 1.0);\n    quat.w = 0.25 / s;\n    quat.x = (m[2][1] - m[1][2]) * s;\n    quat.y = (m[0][2] - m[2][0]) * s;\n    quat.z = (m[1][0] - m[0][1]) * s;\n  } else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\n    float s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\n    quat.w = (m[2][1] - m[1][2]) / s;\n    quat.x = 0.25 * s;\n    quat.y = (m[0][1] + m[1][0]) / s;\n    quat.z = (m[0][2] + m[2][0]) / s;\n  } else if (m[1][1] > m[2][2]) {\n    float s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\n    quat.w = (m[0][2] - m[2][0]) / s;\n    quat.x = (m[0][1] + m[1][0]) / s;\n    quat.y = 0.25 * s;\n    quat.z = (m[1][2] + m[2][1]) / s;\n  } else {\n    float s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\n    quat.w = (m[1][0] - m[0][1]) / s;\n    quat.x = (m[0][2] + m[2][0]) / s;\n    quat.y = (m[1][2] + m[2][1]) / s;\n    quat.z = 0.25 * s;\n  }\n  float len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\n  if (len > 0.) {\n    len = 1. / sqrt(len);\n    quat.x = quat.x * len;\n    quat.y = quat.y * len;\n    quat.z = quat.z * len;\n    quat.w = quat.w * len;\n  }\n  return quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\n  float x = angle.x / 2.;\n  float y = angle.y / 2.;\n  float z = angle.z / 2.;\n  float sx = sin(x);\n  float cx = cos(x);\n  float sy = sin(y);\n  float cy = cos(y);\n  float sz = sin(z);\n  float cz = cos(z);\n  vec4 quat = vec4(0);\n  quat.x = sx * cy * cz + cx * sy * sz;\n  quat.y = cx * sy * cz + sx * cy * sz;\n  quat.z = cx * cy * sz - sx * sy * cz;\n  quat.w = cx * cy * cz - sx * sy * sz;\n  return quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\n  float x2 = q.x + q.x;\n  float y2 = q.y + q.y;\n  float z2 = q.z + q.z;\n  float xx = q.x * x2;\n  float xy = q.x * y2;\n  float xz = q.x * z2;\n  float yy = q.y * y2;\n  float yz = q.y * z2;\n  float zz = q.z * z2;\n  float wx = q.w * x2;\n  float wy = q.w * y2;\n  float wz = q.w * z2;\n  return mat4(\n    1. - (yy + zz), xy + wz, xz - wy, 0,\n    xy - wz, 1. - (xx + zz), yz + wx, 0,\n    xz + wy, yz - wx, 1. - (xx + yy), 0,\n    p.x, p.y, p.z, 1\n  );\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\n  float x = q.x, y = q.y, z = q.z, w = q.w;\n  float x2 = x + x;\n  float y2 = y + y;\n  float z2 = z + z;\n  float xx = x * x2;\n  float xy = x * y2;\n  float xz = x * z2;\n  float yy = y * y2;\n  float yz = y * z2;\n  float zz = z * z2;\n  float wx = w * x2;\n  float wy = w * y2;\n  float wz = w * z2;\n  float sx = s.x;\n  float sy = s.y;\n  float sz = s.z;\n  return mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n    (xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n    (xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\n    t.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\n  vec4 quat;\n  quat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\n  quat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\n  quat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\n  quat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n  return quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\n  float ix = q.w * v.x + q.y * v.z - q.z * v.y;\n  float iy = q.w * v.y + q.z * v.x - q.x * v.z;\n  float iz = q.w * v.z + q.x * v.y - q.y * v.x;\n  float iw = -q.x * v.x - q.y * v.y - q.z * v.z;\n  v.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  v.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  v.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\n  vec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\n  vec4 rotQuat = quatMultiply(viewQuat, q);\n  rotateVecFromQuat(pos, rotQuat);\n  return pos;\n}\nvoid rotateCorner (inout vec2 corner, float angle){\n  float xOS = cos(angle) * corner.x - sin(angle) * corner.y;\n  float yOS = sin(angle) * corner.x + cos(angle) * corner.y;\n  corner.x = xOS;\n  corner.y = yOS;\n}\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n  , mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n  , vec3 eye\n  , vec4 velocity\n  , float velocityScale\n  , float lengthScale\n  , float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\n  vec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\n  vec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\n  vec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\n  vec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\n  pos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\n  vec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\n  vec3 camX = vec3(1, 0, 0);\n  vec3 camY = vec3(0, 0, -1);\n  pos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\n  vec2 viewSpaceVert = vec2(vertOffset.x * s.x, vertOffset.y * s.y);\n  rotateCorner(viewSpaceVert, q.z);\n  vec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\n  vec3 camY = vec3(0, 1, 0);\n  vec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\n  pos.xyz += offset;\n#else\n  pos.x += vertOffset.x;\n  pos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\n  vec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\n  aniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\n  vertIndex.y = 1. - vertIndex.y;\n#endif\n  return (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_RENDER_MODE == 1\n  in vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\n  in vec3 a_texCoord3;\n  in vec3 a_normal;\n  in vec4 a_color1;\n#endif\nvec4 lpvs_main () {\n  vec3 compScale = scale.xyz * a_texCoord1;\n  vec4 pos = vec4(a_position, 1);\n  #if CC_RENDER_MODE == 1\n    vec4 velocity = vec4(a_color1.xyz, 0);\n  #endif\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    #if CC_RENDER_MODE == 1\n      velocity = cc_matWorld * velocity;\n    #endif\n  #endif\n  #if CC_RENDER_MODE != 4\n    vec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n    #if CC_RENDER_MODE == 0\n      vec3 rotEuler = a_texCoord2;\n    #elif CC_RENDER_MODE == 1\n      vec3 rotEuler = vec3(0.);\n    #else\n      vec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n    #endif\n    computeVertPos(pos, cornerOffset, quaternionFromEuler(rotEuler), compScale\n    #if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n      , cc_matViewInv\n    #endif\n    #if CC_RENDER_MODE == 1\n      , cc_cameraPos.xyz\n      , velocity\n      , frameTile_velLenScale.z\n      , frameTile_velLenScale.w\n      , a_texCoord.x\n    #endif\n    );\n    color = a_color;\n  #else\n    mat4 xformNoScale = matrixFromRT(quaternionFromEuler(a_texCoord2), pos.xyz);\n    mat4 xform = matFromRTS(quaternionFromEuler(a_texCoord2), pos.xyz, compScale);\n    pos = xform * vec4(a_texCoord3, 1);\n    vec4 normal = xformNoScale * vec4(a_normal, 0);\n    color = a_color * a_color1;\n  #endif\n  uv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\n  pos = cc_matViewProj * pos;\n  return pos;\n}\nvoid main() { gl_Position = lpvs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n  #endif\n  return color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\n  vec4 tintColor;\n};\nvec4 add () {\n  vec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\n#if USE_LOCAL\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 v_light;\nout vec2 uv0;\n#if TWO_COLORED\n  in vec4 a_color2;\n  out vec4 v_dark;\n#endif\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  pos = cc_matViewProj * pos;\n  uv0 = a_texCoord;\n  v_light = a_color;\n  #if TWO_COLORED\n    v_dark = a_color2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_light;\n#if TWO_COLORED\n  in vec4 v_dark;\n#endif\nin vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if TWO_COLORED\n    vec4 texColor = vec4(1, 1, 1, 1);\n    texColor *= texture(cc_spriteTexture, uv0);\n     o.a = texColor.a * v_light.a;\n    o.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n  #else\n    o *= texture(cc_spriteTexture, uv0);\n    o *= v_light;\n  #endif\n  ALPHA_TEST(o);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\n#if USE_LOCAL\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n    return vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\n    return texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 color;\n#if USE_TEXTURE\n  in vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    #if IS_GRAY\n      float gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n      o.r = o.g = o.b = gray;\n    #endif\n  #endif\n  o *= color;\n  ALPHA_TEST(o);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n        return int(a_vertexId);\n    }\nlayout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_SUPPORT_FLOAT_TEXTURE\n        vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n            ivec2 texSize = textureSize(tex, 0);\n            return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n        }\n#else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex * 4;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n        return vec4(\n            decode32(texture(tex, x)),\n            decode32(texture(tex, y)),\n            decode32(texture(tex, z)),\n            1.0\n        );\n    }\n#endif\nfloat getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n        return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n        return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n        return cc_displacementWeights[quot].z;\n    } else {\n        return cc_displacementWeights[quot].w;\n    }\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n        result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n  in vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n  #if USE_INSTANCING\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  layout(std140) uniform CCSkinningTexture {\n    highp vec4 cc_jointTextureInfo;\n  };\n  layout(std140) uniform CCSkinningAnimation {\n    highp vec4 cc_jointAnimInfo;\n  };\n  uniform highp sampler2D cc_jointTexture;\n  #else\n  layout(std140) uniform CCSkinning {\n    highp vec4 cc_joints[30 * 3];\n  };\n#endif\n#if CC_USE_BAKED_ANIMATION\n  #if CC_SUPPORT_FLOAT_TEXTURE\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n      vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n      vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #else\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = vec4(\n        decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n      );\n      vec4 v2 = vec4(\n        decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n      );\n      vec4 v3 = vec4(\n        decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n      );\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n#else\n  mat4 getJointMatrix (float i) {\n    int idx = int(i);\n    vec4 v1 = cc_joints[idx * 3];\n    vec4 v2 = cc_joints[idx * 3 + 1];\n    vec4 v3 = cc_joints[idx * 3 + 2];\n    return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n  }\n#endif\nmat4 skinMatrix () {\n  vec4 joints = vec4(a_joints);\n  return getJointMatrix(joints.x) * a_weights.x\n       + getJointMatrix(joints.y) * a_weights.y\n       + getJointMatrix(joints.z) * a_weights.z\n       + getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\n  mat4 m = skinMatrix();\n  position = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\n  mat4 m = skinMatrix();\n  attr.position = m * attr.position;\n  attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n  attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n  layout(std140) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\n    vec4 wPos = pos;\n    float cam_dis = distance(cc_cameraPos, wPos);\n    float fogStart = cc_fogBase.x;\n    float fogEnd = cc_fogBase.y;\n    return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float fogDensity = cc_fogBase.z;\n    float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n    float f = exp(-cam_dis * fogDensity);\n    return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float fogDensity = cc_fogBase.z;\n    float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n    float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n    return f;\n}\nfloat LayeredFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float _FogTop = cc_fogAdd.x;\n    float _FogRange = cc_fogAdd.y;\n    vec3 camWorldProj = cc_cameraPos.xyz;\n    camWorldProj.y = 0.;\n    vec3 worldPosProj = wPos.xyz;\n    worldPosProj.y = 0.;\n    float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n    float fDeltaY, fDensityIntegral;\n    if (cc_cameraPos.y > _FogTop) {\n        if (wPos.y < _FogTop) {\n            fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n            fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n        } else {\n            fDeltaY = 0.;\n            fDensityIntegral = 0.;\n        }\n    } else {\n        if (wPos.y < _FogTop) {\n            float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n            float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n            fDeltaY = abs(fDeltaA - fDeltaB);\n            fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n        } else {\n            fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n            fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n        }\n    }\n    float fDensity;\n    if (fDeltaY != 0.) {\n        fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n    } else {\n        fDensity = 0.;\n    }\n    float f = exp(-fDensity);\n    return f;\n}\nfloat CC_TRANSFER_FOG(vec4 pos) {\n    #if CC_USE_FOG == 0\n        return LinearFog(pos);\n\t#elif CC_USE_FOG == 1\n        return ExpFog(pos);\n    #elif CC_USE_FOG == 2\n        return ExpSquaredFog(pos);\n    #elif CC_USE_FOG == 3\n        return LayeredFog(pos);\n    #endif\n    return 1.;\n}\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowColor;\n  lowp  vec4 cc_shadowInfo;\n};\n#if USE_VERTEX_COLOR\n  in vec4 a_color;\n  out vec4 v_color;\n#endif\nout vec3 v_position;\nout vec3 v_normal;\nout vec2 v_uv;\nout vec2 v_uv1;\nout float v_fog_factor;\n#if USE_NORMAL_MAP\n  out vec3 v_tangent;\n  out vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  in vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  out vec2 v_luv;\nvoid CCLightingMapCaclUV()\n{\n#if !USE_INSTANCING\n      v_luv = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\n#else\n      v_luv = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\n#endif\n}\n#endif\nvec4 vert () {\n  StandardVertInput In;\n  In.position = vec4(a_position, 1.0);\n  In.normal = a_normal;\n  In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In);\n  #endif\n  mat4 matWorld, matWorldIT;\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    matWorldIT = matWorld;\n  #elif USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n  v_fog_factor = CC_TRANSFER_FOG(pos);\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    CCLightingMapCaclUV();\n  #endif\n    v_shadowPos = cc_matLightViewProj * pos;\n  return cc_matProj * (cc_matView * matWorld) * In.position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowColor;\n  lowp  vec4 cc_shadowInfo;\n};\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\n  return rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n    return textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n    return textureLod(tex, coord, lod);\n}\n#endif\n#if CC_RECEIVE_SHADOW\nin highp vec4 v_shadowPos;\n#if CC_RECEIVE_SHADOW\n  uniform sampler2D cc_shadowMap;\n  uniform sampler2D cc_spotLightingMap;\n  float CCGetShadowFactorX1 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float closestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    float shadow = step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    return shadow;\n  }\n  float CCGetShadowFactorX5 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    return shadow / 5.0;\n  }\n  float CCGetShadowFactorX9 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -1; i <= 1; i++) {\n      for (int j = -1; j <= 1; j++) {\n        float closestDepth = dot(texture(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 9.0;\n  }\n  float CCGetShadowFactorX25 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -2; i <= 2; i++) {\n      for (int j = -2; j <= 2; j++) {\n        float closestDepth = dot(texture(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 25.0;\n  }\n  float CCGetDirLightShadowFactorX1 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    float shadow = step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    return shadow;\n  }\n  float CCGetDirLightShadowFactorX5 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    return shadow / 5.0;\n  }\n  float CCGetDirLightShadowFactorX9 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -1; i <= 1; i++) {\n      for (int j = -1; j <= 1; j++) {\n        float closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 9.0;\n  }\n  float CCGetDirLightShadowFactorX25 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -2; i <= 2; i++) {\n      for (int j = -2; j <= 2; j++) {\n        float closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 25.0;\n  }\n#endif\n#endif\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness*0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min( r.x * r.x, exp2( -9.28 * NoV ) ) * r.x + r.y;\n  vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\nstruct StandardSurface {\n  vec4 albedo;\n  vec3 position;\n  vec3 normal;\n  vec3 emissive;\n  vec4 lightmap;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\n#if CC_FORWARD_ADD\nlayout(std140) uniform CCForwardLight {\n  highp vec4 cc_lightPos[1];\n  vec4 cc_lightColor[1];\n  vec4 cc_lightSizeRangeAngle[1];\n  vec4 cc_lightDir[1];\n};\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n  float factor = distSqr * invSqrAttRadius;\n  float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n  return smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\n  float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n  attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n  return attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n  float cd = dot(litDir, L);\n  float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n  return (attenuation * attenuation);\n}\n  vec4 CCStandardShading (StandardSurface s) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - s.position);\n    float NV = max(abs(dot(N, V)), 0.001);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    for (int i = 0; i < 1; i++) {\n      vec3 SLU = cc_lightPos[i].xyz - s.position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.001);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = cc_lightColor[i].rgb;\n    #if CC_RECEIVE_SHADOW\n      if (cc_lightPos[i].w > 0.0) {\n    {\n      float pcf = cc_shadowInfo.z + 0.001;\n      float shadowAttenuation = 0.0;\n      if (pcf > 3.0) shadowAttenuation = CCGetDirLightShadowFactorX25();\n      else if (3.0 > pcf && pcf > 2.0) shadowAttenuation = CCGetDirLightShadowFactorX9();\n      else if (2.0 > pcf && pcf > 1.0) shadowAttenuation = CCGetDirLightShadowFactorX5();\n      else shadowAttenuation = CCGetDirLightShadowFactorX1();\n      lightColor *= 1.0 - shadowAttenuation;\n    }\n      }\n    #endif\n      finalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n    }\n    finalColor = finalColor * s.occlusion;\n    return vec4(finalColor, 0.0);\n  }\n#else\n  vec4 CCStandardShading (StandardSurface s) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - s.position);\n    float NV = max(abs(dot(N, V)), 0.001);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 L = normalize(-cc_mainLitDir.xyz);\n    vec3 H = normalize(L+V);\n    float NH = max(dot(N, H), 0.0);\n    float NL = max(dot(N, L), 0.001);\n    vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n    #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n      finalColor = s.lightmap.a * s.lightmap.rgb + (1.0 - s.lightmap.a) * finalColor;\n    #endif\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n    finalColor *= (diffuseContrib + specularContrib);\n    float fAmb = 0.5 - N.y * 0.5;\n    vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\n    finalColor += (ambDiff.rgb * diffuse);\n    #if CC_USE_IBL\n      vec3 R = normalize(reflect(-V, N));\n      vec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n      #if CC_USE_IBL == 2\n        vec3 env = unpackRGBE(envmap);\n      #else\n        vec3 env = SRGBToLinear(envmap.rgb);\n      #endif\n      finalColor += env * cc_ambientSky.w * specular;\n    #endif\n    finalColor = finalColor * s.occlusion;\n    #if CC_USE_HDR\n      s.emissive *= cc_exposure.w;\n    #endif\n    finalColor += s.emissive;\n    #if CC_RECEIVE_SHADOW\n    {\n      float pcf = cc_shadowInfo.z + 0.001;\n      float shadowAttenuation = 0.0;\n      if (pcf > 3.0) shadowAttenuation = CCGetShadowFactorX25();\n      else if (3.0 > pcf && pcf > 2.0) shadowAttenuation = CCGetShadowFactorX9();\n      else if (2.0 > pcf && pcf > 1.0) shadowAttenuation = CCGetShadowFactorX5();\n      else shadowAttenuation = CCGetShadowFactorX1();\n      vec3 shadowColor = cc_shadowColor.rgb * cc_shadowColor.a + finalColor.rgb * (1.0 - cc_shadowColor.a);\n      finalColor.rgb = shadowColor.rgb * shadowAttenuation * NL + finalColor.rgb * (1.0 - shadowAttenuation * NL);\n    }\n    #endif\n    return vec4(finalColor, s.albedo.a);\n  }\n#endif\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if !CC_USE_HDR\n    color.rgb = sqrt(ACESToneMap(color.rgb));\n  #endif\n  return color;\n}\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  in vec2 v_luv;\nuniform sampler2D cc_lightingMap;\n#endif\nin vec3 v_position;\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec3 v_normal;\nin float v_fog_factor;\n#if USE_VERTEX_COLOR\n  in vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  in vec3 v_tangent;\n  in vec3 v_bitangent;\n  uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = albedo;\n  #if USE_VERTEX_COLOR\n    baseColor *= v_color;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture(albedoMap, ALBEDO_UV);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  s.albedo = baseColor;\n  s.albedo.rgb *= albedoScaleAndCutoff.xyz;\n  #if USE_ALPHA_TEST\n    if (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    s.lightmap = texture(cc_lightingMap, v_luv);\n  #endif\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture(normalMap, NORMAL_UV).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * pbrParams.w) * normalize(v_tangent) +\n      (nmmp.y * pbrParams.w) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n  s.position = v_position;\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n    vec4 res = texture(pbrMap, PBR_UV);\n    pbr.x *= res.r;\n    pbr.y *= res.g;\n    pbr.z *= res.b;\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture(metallicRoughnessMap, PBR_UV);\n    pbr.z *= metallicRoughness.b;\n    pbr.y *= metallicRoughness.g;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.x *= texture(occlusionMap, PBR_UV).r;\n  #endif\n  s.occlusion = clamp(pbr.x, 0.0, 0.96);\n  s.roughness = clamp(pbr.y, 0.04, 1.0);\n  s.metallic = pbr.z;\n  s.emissive = emissive.rgb * emissiveScaleParam.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture(emissiveMap, EMISSIVE_UV).rgb);\n  #endif\n}\nvec4 frag () {\n  StandardSurface s; surf(s);\n  vec4 color = CCStandardShading(s);\n  color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n  return CCFragOutput(color);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n        return int(a_vertexId);\n    }\nlayout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_SUPPORT_FLOAT_TEXTURE\n        vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n            ivec2 texSize = textureSize(tex, 0);\n            return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n        }\n#else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex * 4;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n        return vec4(\n            decode32(texture(tex, x)),\n            decode32(texture(tex, y)),\n            decode32(texture(tex, z)),\n            1.0\n        );\n    }\n#endif\nfloat getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n        return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n        return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n        return cc_displacementWeights[quot].z;\n    } else {\n        return cc_displacementWeights[quot].w;\n    }\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n        result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n  in vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n  #if USE_INSTANCING\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  layout(std140) uniform CCSkinningTexture {\n    highp vec4 cc_jointTextureInfo;\n  };\n  layout(std140) uniform CCSkinningAnimation {\n    highp vec4 cc_jointAnimInfo;\n  };\n  uniform highp sampler2D cc_jointTexture;\n  #else\n  layout(std140) uniform CCSkinning {\n    highp vec4 cc_joints[30 * 3];\n  };\n#endif\n#if CC_USE_BAKED_ANIMATION\n  #if CC_SUPPORT_FLOAT_TEXTURE\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n      vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n      vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #else\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = vec4(\n        decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n      );\n      vec4 v2 = vec4(\n        decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n      );\n      vec4 v3 = vec4(\n        decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n      );\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n#else\n  mat4 getJointMatrix (float i) {\n    int idx = int(i);\n    vec4 v1 = cc_joints[idx * 3];\n    vec4 v2 = cc_joints[idx * 3 + 1];\n    vec4 v3 = cc_joints[idx * 3 + 2];\n    return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n  }\n#endif\nmat4 skinMatrix () {\n  vec4 joints = vec4(a_joints);\n  return getJointMatrix(joints.x) * a_weights.x\n       + getJointMatrix(joints.y) * a_weights.y\n       + getJointMatrix(joints.z) * a_weights.z\n       + getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\n  mat4 m = skinMatrix();\n  position = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\n  mat4 m = skinMatrix();\n  attr.position = m * attr.position;\n  attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n  attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\n#if USE_INSTANCING\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n  layout(std140) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowColor;\n  lowp  vec4 cc_shadowInfo;\n};\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  in vec2 a_texCoord1;\n#endif\nout vec2 v_uv;\nout vec2 v_uv1;\nout float v_clip_depth;\nvec4 vert () {\n  StandardVertInput In;\n  In.position = vec4(a_position, 1.0);\n  In.normal = a_normal;\n  In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In);\n  #endif\n  mat4 matWorld, matWorldIT;\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    matWorldIT = matWorld;\n  #elif USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n  vec4 worldPos = matWorld * In.position;\n  vec4 clipPos = cc_matLightViewProj * worldPos;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  v_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 160581375.0) * depth;\n  ret = fract(ret);\n  ret -= ret.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n  return ret;\n}\nin vec2 v_uv;\nin vec2 v_uv1;\nin float v_clip_depth;\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = albedo;\n  #if USE_ALBEDO_MAP\n    baseColor *= texture(albedoMap, ALBEDO_UV);\n  #endif\n  #if USE_ALPHA_TEST\n    if (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  return packDepthToRGBA(v_clip_depth);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nfloat LinearFog(vec4 pos) {\n    vec4 wPos = pos;\n    float cam_dis = distance(cc_cameraPos, wPos);\n    float fogStart = cc_fogBase.x;\n    float fogEnd = cc_fogBase.y;\n    return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float fogDensity = cc_fogBase.z;\n    float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n    float f = exp(-cam_dis * fogDensity);\n    return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float fogDensity = cc_fogBase.z;\n    float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n    float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n    return f;\n}\nfloat LayeredFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float _FogTop = cc_fogAdd.x;\n    float _FogRange = cc_fogAdd.y;\n    vec3 camWorldProj = cc_cameraPos.xyz;\n    camWorldProj.y = 0.;\n    vec3 worldPosProj = wPos.xyz;\n    worldPosProj.y = 0.;\n    float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n    float fDeltaY, fDensityIntegral;\n    if (cc_cameraPos.y > _FogTop) {\n        if (wPos.y < _FogTop) {\n            fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n            fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n        } else {\n            fDeltaY = 0.;\n            fDensityIntegral = 0.;\n        }\n    } else {\n        if (wPos.y < _FogTop) {\n            float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n            float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n            fDeltaY = abs(fDeltaA - fDeltaB);\n            fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n        } else {\n            fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n            fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n        }\n    }\n    float fDensity;\n    if (fDeltaY != 0.) {\n        fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n    } else {\n        fDensity = 0.;\n    }\n    float f = exp(-fDensity);\n    return f;\n}\nfloat CC_TRANSFER_FOG(vec4 pos) {\n    #if CC_USE_FOG == 0\n        return LinearFog(pos);\n\t#elif CC_USE_FOG == 1\n        return ExpFog(pos);\n    #elif CC_USE_FOG == 2\n        return ExpSquaredFog(pos);\n    #elif CC_USE_FOG == 3\n        return LayeredFog(pos);\n    #endif\n    return 1.;\n}\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowColor;\n  lowp  vec4 cc_shadowInfo;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nout highp vec3 v_position;\nout mediump vec3 v_normal;\n#if USE_NORMALMAP\n  out mediump vec3 v_tangent;\n  out mediump vec3 v_binormal;\n#endif\nout mediump vec2 uvw;\nout mediump vec2 uv0;\nout mediump vec2 uv1;\nout mediump vec2 uv2;\nout mediump vec2 uv3;\nout mediump vec2 luv;\nout mediump vec3 diffuse;\nout mediump float v_fog_factor;\nlayout(std140) uniform TexCoords {\n  vec4 UVScale;\n  vec4 lightMapUVParam;\n};\nvec4 vert () {\n  vec3 worldPos;\n  worldPos.x = cc_matWorld[3][0] + a_position.x;\n  worldPos.y = cc_matWorld[3][1] + a_position.y;\n  worldPos.z = cc_matWorld[3][2] + a_position.z;\n  vec4 pos = vec4(worldPos, 1.0);\n  pos = cc_matViewProj * pos;\n  uvw = a_texCoord;\n  uv0 = a_position.xz * UVScale.x;\n  uv1 = a_position.xz * UVScale.y;\n  uv2 = a_position.xz * UVScale.z;\n  uv3 = a_position.xz * UVScale.w;\n  #if USE_LIGHTMAP\n    luv = lightMapUVParam.xy + a_texCoord * lightMapUVParam.zw;\n  #endif\n  v_position = worldPos;\n  v_normal = a_normal;\n  v_fog_factor = CC_TRANSFER_FOG(vec4(worldPos, 1.0));\n  #if USE_NORMALMAP\n    v_tangent = vec3(1.0, 0.0, 0.0);\n    v_binormal = vec3(0.0, 0.0, 1.0);\n    v_binormal = cross(v_tangent, a_normal);\n    v_tangent = cross(a_normal, v_binormal);\n  #endif\n    v_shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\n  return pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowColor;\n  lowp  vec4 cc_shadowInfo;\n};\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\n  return rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n    return textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n    return textureLod(tex, coord, lod);\n}\n#endif\n#if CC_RECEIVE_SHADOW\nin highp vec4 v_shadowPos;\n#if CC_RECEIVE_SHADOW\n  uniform sampler2D cc_shadowMap;\n  uniform sampler2D cc_spotLightingMap;\n  float CCGetShadowFactorX1 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float closestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    float shadow = step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    return shadow;\n  }\n  float CCGetShadowFactorX5 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_shadowMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    return shadow / 5.0;\n  }\n  float CCGetShadowFactorX9 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -1; i <= 1; i++) {\n      for (int j = -1; j <= 1; j++) {\n        float closestDepth = dot(texture(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 9.0;\n  }\n  float CCGetShadowFactorX25 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -2; i <= 2; i++) {\n      for (int j = -2; j <= 2; j++) {\n        float closestDepth = dot(texture(cc_shadowMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 25.0;\n  }\n  float CCGetDirLightShadowFactorX1 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    float shadow = step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    return shadow;\n  }\n  float CCGetDirLightShadowFactorX5 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x - offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y - offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n    closestDepth = dot(texture(cc_spotLightingMap, vec2(clipPos.x + offsetx, clipPos.y + offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n    return shadow / 5.0;\n  }\n  float CCGetDirLightShadowFactorX9 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -1; i <= 1; i++) {\n      for (int j = -1; j <= 1; j++) {\n        float closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 9.0;\n  }\n  float CCGetDirLightShadowFactorX25 () {\n    vec3 clipPos = v_shadowPos.xyz / v_shadowPos.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z <-1.0 || clipPos.z > 1.0) { return 0.0; }\n    float offsetx = 1.0 / cc_shadowInfo.x;\n    float offsety = 1.0 / cc_shadowInfo.y;\n    float shadow = 0.0;\n    for (int i = -2; i <= 2; i++) {\n      for (int j = -2; j <= 2; j++) {\n        float closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy + vec2(i, j) * vec2(offsetx, offsety)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n        shadow += step(closestDepth, clipPos.z - cc_shadowInfo.w);\n      }\n    }\n    return shadow / 25.0;\n  }\n#endif\n#endif\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness*0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min( r.x * r.x, exp2( -9.28 * NoV ) ) * r.x + r.y;\n  vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\nstruct StandardSurface {\n  vec4 albedo;\n  vec3 position;\n  vec3 normal;\n  vec3 emissive;\n  vec4 lightmap;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\n#if CC_FORWARD_ADD\nlayout(std140) uniform CCForwardLight {\n  highp vec4 cc_lightPos[1];\n  vec4 cc_lightColor[1];\n  vec4 cc_lightSizeRangeAngle[1];\n  vec4 cc_lightDir[1];\n};\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n  float factor = distSqr * invSqrAttRadius;\n  float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n  return smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\n  float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n  attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n  return attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n  float cd = dot(litDir, L);\n  float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n  return (attenuation * attenuation);\n}\n  vec4 CCStandardShading (StandardSurface s) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - s.position);\n    float NV = max(abs(dot(N, V)), 0.001);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    for (int i = 0; i < 1; i++) {\n      vec3 SLU = cc_lightPos[i].xyz - s.position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.001);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = cc_lightColor[i].rgb;\n    #if CC_RECEIVE_SHADOW\n      if (cc_lightPos[i].w > 0.0) {\n    {\n      float pcf = cc_shadowInfo.z + 0.001;\n      float shadowAttenuation = 0.0;\n      if (pcf > 3.0) shadowAttenuation = CCGetDirLightShadowFactorX25();\n      else if (3.0 > pcf && pcf > 2.0) shadowAttenuation = CCGetDirLightShadowFactorX9();\n      else if (2.0 > pcf && pcf > 1.0) shadowAttenuation = CCGetDirLightShadowFactorX5();\n      else shadowAttenuation = CCGetDirLightShadowFactorX1();\n      lightColor *= 1.0 - shadowAttenuation;\n    }\n      }\n    #endif\n      finalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n    }\n    finalColor = finalColor * s.occlusion;\n    return vec4(finalColor, 0.0);\n  }\n#else\n  vec4 CCStandardShading (StandardSurface s) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - s.position);\n    float NV = max(abs(dot(N, V)), 0.001);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 L = normalize(-cc_mainLitDir.xyz);\n    vec3 H = normalize(L+V);\n    float NH = max(dot(N, H), 0.0);\n    float NL = max(dot(N, L), 0.001);\n    vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n    #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n      finalColor = s.lightmap.a * s.lightmap.rgb + (1.0 - s.lightmap.a) * finalColor;\n    #endif\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n    finalColor *= (diffuseContrib + specularContrib);\n    float fAmb = 0.5 - N.y * 0.5;\n    vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\n    finalColor += (ambDiff.rgb * diffuse);\n    #if CC_USE_IBL\n      vec3 R = normalize(reflect(-V, N));\n      vec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n      #if CC_USE_IBL == 2\n        vec3 env = unpackRGBE(envmap);\n      #else\n        vec3 env = SRGBToLinear(envmap.rgb);\n      #endif\n      finalColor += env * cc_ambientSky.w * specular;\n    #endif\n    finalColor = finalColor * s.occlusion;\n    #if CC_USE_HDR\n      s.emissive *= cc_exposure.w;\n    #endif\n    finalColor += s.emissive;\n    #if CC_RECEIVE_SHADOW\n    {\n      float pcf = cc_shadowInfo.z + 0.001;\n      float shadowAttenuation = 0.0;\n      if (pcf > 3.0) shadowAttenuation = CCGetShadowFactorX25();\n      else if (3.0 > pcf && pcf > 2.0) shadowAttenuation = CCGetShadowFactorX9();\n      else if (2.0 > pcf && pcf > 1.0) shadowAttenuation = CCGetShadowFactorX5();\n      else shadowAttenuation = CCGetShadowFactorX1();\n      vec3 shadowColor = cc_shadowColor.rgb * cc_shadowColor.a + finalColor.rgb * (1.0 - cc_shadowColor.a);\n      finalColor.rgb = shadowColor.rgb * shadowAttenuation * NL + finalColor.rgb * (1.0 - shadowAttenuation * NL);\n    }\n    #endif\n    return vec4(finalColor, s.albedo.a);\n  }\n#endif\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if !CC_USE_HDR\n    color.rgb = sqrt(ACESToneMap(color.rgb));\n  #endif\n  return color;\n}\nin highp vec3 v_position;\nin mediump vec3 v_normal;\n#if USE_NORMALMAP\n  in mediump vec3 v_tangent;\n  in mediump vec3 v_binormal;\n#endif\nin mediump vec2 uvw;\nin mediump vec2 uv0;\nin mediump vec2 uv1;\nin mediump vec2 uv2;\nin mediump vec2 uv3;\nin mediump vec3 diffuse;\nin mediump vec2 luv;\nin mediump float v_fog_factor;\nlayout(std140) uniform PbrParams {\n  vec4 metallic;\n  vec4 roughness;\n};\nuniform sampler2D weightMap;\nuniform sampler2D detailMap0;\nuniform sampler2D detailMap1;\nuniform sampler2D detailMap2;\nuniform sampler2D detailMap3;\nuniform sampler2D normalMap0;\nuniform sampler2D normalMap1;\nuniform sampler2D normalMap2;\nuniform sampler2D normalMap3;\nuniform sampler2D lightMap;\nvoid surf (out StandardSurface s) {\n  #if LAYERS > 1\n    vec4 w = texture(weightMap, uvw);\n  #endif\n  vec4 baseColor = vec4(0, 0, 0, 0);\n  #if LAYERS == 1\n    baseColor = texture(detailMap0, uv0);\n  #elif LAYERS == 2\n    baseColor += texture(detailMap0, uv0) * w.r;\n    baseColor += texture(detailMap1, uv1) * w.g;\n  #elif LAYERS == 3\n    baseColor += texture(detailMap0, uv0) * w.r;\n    baseColor += texture(detailMap1, uv1) * w.g;\n    baseColor += texture(detailMap2, uv2) * w.b;\n  #elif LAYERS == 4\n    baseColor += texture(detailMap0, uv0) * w.r;\n    baseColor += texture(detailMap1, uv1) * w.g;\n    baseColor += texture(detailMap2, uv2) * w.b;\n    baseColor += texture(detailMap3, uv3) * w.a;\n  #else\n    baseColor = texture(detailMap0, uv0);\n  #endif\n  s.position = v_position;\n  #if USE_NORMALMAP\n    vec4 baseNormal = vec4(0, 0, 0, 0);\n    #if LAYERS == 1\n      baseNormal = texture(normalMap0, uv0);\n    #elif LAYERS == 2\n      baseNormal += texture(normalMap0, uv0) * w.r;\n      baseNormal += texture(normalMap1, uv1) * w.g;\n    #elif LAYERS == 3\n      baseNormal += texture(normalMap0, uv0) * w.r;\n      baseNormal += texture(normalMap1, uv1) * w.g;\n      baseNormal += texture(normalMap2, uv2) * w.b;\n    #elif LAYERS == 4\n      baseNormal += texture(normalMap0, uv0) * w.r;\n      baseNormal += texture(normalMap1, uv1) * w.g;\n      baseNormal += texture(normalMap2, uv2) * w.b;\n      baseNormal += texture(normalMap3, uv3) * w.a;\n    #else\n      baseNormal = texture(normalMap0, uv0);\n    #endif\n    vec3 nmmp = baseNormal.xyz - vec3(0.5);\n    s.normal =\n      nmmp.x * normalize(v_tangent) +\n      nmmp.y * normalize(v_binormal) +\n      nmmp.z * normalize(v_normal);\n  #else\n    s.normal = v_normal;\n  #endif\n  s.albedo = vec4(SRGBToLinear(baseColor.rgb), 1.0);\n  s.occlusion = 1.0;\n  #if USE_PBR\n    s.roughness = 0.0;\n    #if LAYERS == 1\n      s.roughness = roughness.x;\n    #elif LAYERS == 2\n      s.roughness += roughness.x * w.r;\n      s.roughness += roughness.y * w.g;\n    #elif LAYERS == 3\n      s.roughness += roughness.x * w.r;\n      s.roughness += roughness.y * w.g;\n      s.roughness += roughness.z * w.b;\n    #elif LAYERS == 4\n      s.roughness += roughness.x * w.r;\n      s.roughness += roughness.y * w.g;\n      s.roughness += roughness.z * w.b;\n      s.roughness += roughness.w * w.a;\n    #else\n      s.roughness = 1.0;\n    #endif\n    s.metallic = 0.0;\n    #if LAYERS == 1\n      s.metallic = metallic.x;\n    #elif LAYERS == 2\n      s.metallic += metallic.x * w.r;\n      s.metallic += metallic.y * w.g;\n    #elif LAYERS == 3\n      s.metallic += metallic.x * w.r;\n      s.metallic += metallic.y * w.g;\n      s.metallic += metallic.z * w.b;\n    #elif LAYERS == 4\n      s.metallic += metallic.x * w.r;\n      s.metallic += metallic.y * w.g;\n      s.metallic += metallic.z * w.b;\n      s.metallic += metallic.w * w.a;\n    #else\n      s.metallic = 0.0;\n    #endif\n  #else\n    s.roughness = 1.0;\n    s.metallic = 0.0;\n  #endif\n  s.emissive = vec3(0.0, 0.0, 0.0);\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    s.lightmap = texture(lightMap, luv);\n  #else\n    s.lightmap = vec4(0.0, 0.0, 0.0, 0.0);\n  #endif\n}\nvec4 frag () {\n  StandardSurface s; surf(s);\n  vec4 color = CCStandardShading(s);\n  color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n  return CCFragOutput(color);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowColor;\n  lowp  vec4 cc_shadowInfo;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nout vec2 v_clip_depth;\nvec4 vert () {\n  vec4 worldPos;\n  worldPos.x = cc_matWorld[3][0] + a_position.x;\n  worldPos.y = cc_matWorld[3][1] + a_position.y;\n  worldPos.z = cc_matWorld[3][2] + a_position.z;\n  worldPos.w = 1.0;\n  vec4 clipPos = cc_matLightViewProj * worldPos;\n  v_clip_depth = clipPos.zw;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 160581375.0) * depth;\n  ret = fract(ret);\n  ret -= ret.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n  return ret;\n}\nin vec2 v_clip_depth;\nvec4 frag () {\n  return packDepthToRGBA(v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n        return int(a_vertexId);\n    }\nlayout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_SUPPORT_FLOAT_TEXTURE\n        vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n            ivec2 texSize = textureSize(tex, 0);\n            return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n        }\n#else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex * 4;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n        return vec4(\n            decode32(texture(tex, x)),\n            decode32(texture(tex, y)),\n            decode32(texture(tex, z)),\n            1.0\n        );\n    }\n#endif\nfloat getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n        return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n        return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n        return cc_displacementWeights[quot].z;\n    } else {\n        return cc_displacementWeights[quot].w;\n    }\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n        result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n  in vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n  #if USE_INSTANCING\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  layout(std140) uniform CCSkinningTexture {\n    highp vec4 cc_jointTextureInfo;\n  };\n  layout(std140) uniform CCSkinningAnimation {\n    highp vec4 cc_jointAnimInfo;\n  };\n  uniform highp sampler2D cc_jointTexture;\n  #else\n  layout(std140) uniform CCSkinning {\n    highp vec4 cc_joints[30 * 3];\n  };\n#endif\n#if CC_USE_BAKED_ANIMATION\n  #if CC_SUPPORT_FLOAT_TEXTURE\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n      vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n      vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #else\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = vec4(\n        decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n      );\n      vec4 v2 = vec4(\n        decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n      );\n      vec4 v3 = vec4(\n        decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n      );\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n#else\n  mat4 getJointMatrix (float i) {\n    int idx = int(i);\n    vec4 v1 = cc_joints[idx * 3];\n    vec4 v2 = cc_joints[idx * 3 + 1];\n    vec4 v3 = cc_joints[idx * 3 + 2];\n    return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n  }\n#endif\nmat4 skinMatrix () {\n  vec4 joints = vec4(a_joints);\n  return getJointMatrix(joints.x) * a_weights.x\n       + getJointMatrix(joints.y) * a_weights.y\n       + getJointMatrix(joints.z) * a_weights.z\n       + getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\n  mat4 m = skinMatrix();\n  position = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\n  mat4 m = skinMatrix();\n  attr.position = m * attr.position;\n  attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n  attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n  layout(std140) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\n#endif\nfloat LinearFog(vec4 pos) {\n    vec4 wPos = pos;\n    float cam_dis = distance(cc_cameraPos, wPos);\n    float fogStart = cc_fogBase.x;\n    float fogEnd = cc_fogBase.y;\n    return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float fogDensity = cc_fogBase.z;\n    float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n    float f = exp(-cam_dis * fogDensity);\n    return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float fogDensity = cc_fogBase.z;\n    float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n    float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n    return f;\n}\nfloat LayeredFog(vec4 pos) {\n    vec4 wPos = pos;\n    float fogAtten = cc_fogAdd.z;\n    float _FogTop = cc_fogAdd.x;\n    float _FogRange = cc_fogAdd.y;\n    vec3 camWorldProj = cc_cameraPos.xyz;\n    camWorldProj.y = 0.;\n    vec3 worldPosProj = wPos.xyz;\n    worldPosProj.y = 0.;\n    float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n    float fDeltaY, fDensityIntegral;\n    if (cc_cameraPos.y > _FogTop) {\n        if (wPos.y < _FogTop) {\n            fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n            fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n        } else {\n            fDeltaY = 0.;\n            fDensityIntegral = 0.;\n        }\n    } else {\n        if (wPos.y < _FogTop) {\n            float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n            float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n            fDeltaY = abs(fDeltaA - fDeltaB);\n            fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n        } else {\n            fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n            fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n        }\n    }\n    float fDensity;\n    if (fDeltaY != 0.) {\n        fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n    } else {\n        fDensity = 0.;\n    }\n    float f = exp(-fDensity);\n    return f;\n}\nfloat CC_TRANSFER_FOG(vec4 pos) {\n    #if CC_USE_FOG == 0\n        return LinearFog(pos);\n\t#elif CC_USE_FOG == 1\n        return ExpFog(pos);\n    #elif CC_USE_FOG == 2\n        return ExpSquaredFog(pos);\n    #elif CC_USE_FOG == 3\n        return LayeredFog(pos);\n    #endif\n    return 1.;\n}\n#if USE_VERTEX_COLOR\n  in lowp vec4 a_color;\n  out lowp vec4 v_color;\n#endif\n#if USE_TEXTURE\n  out vec2 v_uv;\n  layout(std140) uniform TexCoords {\n    vec4 tilingOffset;\n  };\n#endif\nout float factor_fog;\nvec4 vert () {\n  vec4 position;\n  position = vec4(a_position, 1.0);\n  #if CC_USE_MORPH\n    applyMorph(position);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(position);\n  #endif\n  mat4 matWorld;\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n  #elif USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n  #else\n    matWorld = cc_matWorld;\n  #endif\n  #if USE_TEXTURE\n    v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n  factor_fog = CC_TRANSFER_FOG(matWorld * position);\n  return cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n  #endif\n  return color;\n}\n#if USE_ALPHA_TEST\n#endif\n#if USE_TEXTURE\n  in vec2 v_uv;\n  uniform sampler2D mainTexture;\n#endif\nlayout(std140) uniform Constant {\n  vec4 mainColor;\n  vec4 colorScaleAndCutoff;\n};\n#if USE_VERTEX_COLOR\n  in lowp vec4 v_color;\n#endif\nin float factor_fog;\nvec4 frag () {\n  vec4 o = mainColor;\n  o.rgb *= colorScaleAndCutoff.xyz;\n  #if USE_VERTEX_COLOR\n    o *= v_color;\n  #endif\n  #if USE_TEXTURE\n    o *= texture(mainTexture, v_uv);\n  #endif\n  #if USE_ALPHA_TEST\n    if (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n  #endif\n  o = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, o.rgb, factor_fog), o.a);\n  return CCFragOutput(o);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n        return int(a_vertexId);\n    }\nlayout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_SUPPORT_FLOAT_TEXTURE\n        vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n            ivec2 texSize = textureSize(tex, 0);\n            return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n        }\n#else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex * 4;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n        return vec4(\n            decode32(texture(tex, x)),\n            decode32(texture(tex, y)),\n            decode32(texture(tex, z)),\n            1.0\n        );\n    }\n#endif\nfloat getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n        return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n        return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n        return cc_displacementWeights[quot].z;\n    } else {\n        return cc_displacementWeights[quot].w;\n    }\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n        result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n#endif\nvoid applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n  in vec4 a_joints;\nin vec4 a_weights;\n#if CC_USE_BAKED_ANIMATION\n  #if USE_INSTANCING\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  layout(std140) uniform CCSkinningTexture {\n    highp vec4 cc_jointTextureInfo;\n  };\n  layout(std140) uniform CCSkinningAnimation {\n    highp vec4 cc_jointAnimInfo;\n  };\n  uniform highp sampler2D cc_jointTexture;\n  #else\n  layout(std140) uniform CCSkinning {\n    highp vec4 cc_joints[30 * 3];\n  };\n#endif\n#if CC_USE_BAKED_ANIMATION\n  #if CC_SUPPORT_FLOAT_TEXTURE\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n      vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n      vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #else\n    mat4 getJointMatrix (float i) {\n    #if USE_INSTANCING\n      highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n    #else\n      highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n    #endif\n    highp float invSize = cc_jointTextureInfo.w;\n    highp float y = floor(j * invSize);\n    highp float x = j - y * cc_jointTextureInfo.x;\n    y = (y + 0.5) * invSize;\n      vec4 v1 = vec4(\n        decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n      );\n      vec4 v2 = vec4(\n        decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n      );\n      vec4 v3 = vec4(\n        decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n        decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n      );\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n#else\n  mat4 getJointMatrix (float i) {\n    int idx = int(i);\n    vec4 v1 = cc_joints[idx * 3];\n    vec4 v2 = cc_joints[idx * 3 + 1];\n    vec4 v3 = cc_joints[idx * 3 + 2];\n    return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n  }\n#endif\nmat4 skinMatrix () {\n  vec4 joints = vec4(a_joints);\n  return getJointMatrix(joints.x) * a_weights.x\n       + getJointMatrix(joints.y) * a_weights.y\n       + getJointMatrix(joints.z) * a_weights.z\n       + getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\n  mat4 m = skinMatrix();\n  position = m * position;\n}\nvoid CCSkin (inout StandardVertInput attr) {\n  mat4 m = skinMatrix();\n  attr.position = m * attr.position;\n  attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n  attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n}\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n  layout(std140) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\n#endif\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowColor;\n  lowp  vec4 cc_shadowInfo;\n};\nvec4 vert () {\n  vec4 position;\n  position = vec4(a_position, 1.0);\n  #if CC_USE_MORPH\n    applyMorph(position);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(position);\n  #endif\n  mat4 matWorld;\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n  #elif USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n  #else\n    matWorld = cc_matWorld;\n  #endif\n  position = cc_matProj * (cc_matView * cc_matLightPlaneProj * matWorld) * position;\n  position.z -= 0.0001;\n  return position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightViewProj;\n  lowp  vec4 cc_shadowColor;\n  lowp  vec4 cc_shadowInfo;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n  #endif\n  return color;\n}\nvec4 frag () {\n  return CCFragOutput(cc_shadowColor);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\nout mediump vec4 viewDir;\nvec4 vert () {\n  viewDir = vec4(a_position, 1.0);\n  mat4 matViewRotOnly = mat4(mat3(cc_matView));\n  mat4 matProj = cc_matProj;\n  if (matProj[3].w > 0.0) {\n    vec2 scale = vec2(48.0, 24.0);\n    matProj[0].xy *= scale;\n    matProj[1].xy *= scale;\n    matProj[2].zw = vec2(-1.0);\n    matProj[3].zw = vec2(0.0);\n  }\n  vec4 pos = matProj * matViewRotOnly * viewDir;\n  pos.z = 0.99999 * pos.w;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\n  return rgbe.rgb * pow(2.0, rgbe.a * 255.0 - 128.0);\n}\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if !CC_USE_HDR\n    color.rgb = sqrt(ACESToneMap(color.rgb));\n  #endif\n  return color;\n}\nin mediump vec4 viewDir;\nvec4 frag () {\n  #if USE_RGBE_CUBEMAP\n    vec3 c = unpackRGBE(texture(cc_environment, viewDir.xyz));\n  #else\n    vec3 c = SRGBToLinear(texture(cc_environment, viewDir.xyz).rgb);\n  #endif\n  return CCFragOutput(vec4(c * cc_ambientSky.w, 1.0));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec2 v_uv;\nlayout(std140) uniform Constants {\n  vec4 offset;\n};\nlayout(std140) uniform PerFrameInfo {\n  vec4 digits[8 * 10 / 4];\n};\nfloat getComponent(vec4 v, float i) {\n  if (i < 1.0) { return v.x; }\n  else if (i < 2.0) { return v.y; }\n  else if (i < 3.0) { return v.z; }\n  else { return v.w; }\n}\nvec4 vert () {\n  vec4 position = cc_matViewProj * vec4(a_position, 1.0);\n  position.xy += offset.xy;\n  v_uv = a_color.xy;\n  if (a_color.z >= 0.0) {\n    float n = getComponent(digits[int(a_color.z)], a_color.w);\n    v_uv += vec2(offset.z * n, 0.0);\n  }\n  return position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = mix(color.rgb, SRGBToLinear(color.rgb) * cc_exposure.w, vec3(cc_exposure.z));\n  #endif\n  return color;\n}\nin vec2 v_uv;\nuniform sampler2D mainTexture;\nvec4 frag () {\n  return CCFragOutput(texture(mainTexture, v_uv));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nin vec2 a_position;\nin vec2 a_texCoord;\nout vec2 v_uv;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 0, 1);\n  v_uv = a_texCoord;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nin vec2 v_uv;\nuniform sampler2D mainTexture;\nlayout(std140) uniform splashFrag {\n  float u_precent;\n};\nvec4 frag () {\n  vec4 color = texture(mainTexture, v_uv);\n  float precent = clamp(u_precent, 0.0, 1.0);\n  color.xyz *= precent;\n  return color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}]]},bu=function(){function e(){this._device=null,this._resources={}}var t=e.prototype;return t.initBuiltinRes=function(e){var t=this;this._device=e;var n=this._resources,i=document.createElement("canvas"),o=i.getContext("2d"),a=new vl(i),s=i.width=i.height=2;o.fillStyle="#000",o.fillRect(0,0,s,s);var c=new eu;c._uuid="black-texture",c.image=a,n[c._uuid]=c,o.fillStyle="rgba(0,0,0,0)",o.fillRect(0,0,s,s);for(var l=new Uint8Array(16),m=0;m<l.length;++m)l[m]=0;var u=new eu;u._uuid="empty-texture",u.image=a,u.uploadData(l),n[u._uuid]=u;var _=new tu;_._uuid="black-cube-texture",_.setMipFilter(tu.Filter.NEAREST),_.image={front:new vl(i),back:new vl(i),left:new vl(i),right:new vl(i),top:new vl(i),bottom:new vl(i)},n[_._uuid]=_,o.fillStyle="#777",o.fillRect(0,0,s,s);var f=new eu;f._uuid="grey-texture",f.image=a,n[f._uuid]=f,o.fillStyle="#fff",o.fillRect(0,0,s,s);var h=new eu;h._uuid="white-texture",h.image=a,n[h._uuid]=h;var d=new tu;d._uuid="white-cube-texture",d.setMipFilter(tu.Filter.NEAREST),d.image={front:new vl(i),back:new vl(i),left:new vl(i),right:new vl(i),top:new vl(i),bottom:new vl(i)},n[d._uuid]=d,o.fillStyle="#7f7fff",o.fillRect(0,0,s,s);var v=new eu;v._uuid="normal-texture",v.image=a,n[v._uuid]=v,i.width=i.height=16,o.fillStyle="#ddd",o.fillRect(0,0,16,16),o.fillStyle="#555",o.fillRect(0,0,8,8),o.fillStyle="#555",o.fillRect(8,8,8,8);var p=new eu;p._uuid="default-texture",p.image=a,n[p._uuid]=p;var g=new tu;if(g.setMipFilter(tu.Filter.NEAREST),g._uuid="default-cube-texture",g.image={front:new vl(i),back:new vl(i),left:new vl(i),right:new vl(i),top:new vl(i),bottom:new vl(i)},n[g._uuid]=g,r.SpriteFrame){var x=new r.SpriteFrame,y=a._texture;x.texture=y,x._uuid="default-spriteframe",n[x._uuid]=x}var A=Eu(e);if(!A)return Promise.reject(Error("Failed to initialize builtin shaders: unknown device."));var T=wu[A];return T?Promise.resolve().then((function(){ru.forEach((function(e,t){var n=Object.assign(new r.EffectAsset,e);n.shaders.forEach((function(e,n){var i=T[t][n];i&&(e[A]=i)})),n.hideInEditor=!0,n.onLoaded()})),t._initMaterials()})):Promise.reject(Error("Current device is requiring builtin shaders of version "+A+" but shaders of that version are not assembled in this build."))},t.get=function(e){return this._resources[e]},t._initMaterials=function(){var e=this._resources,t=[],n=new r.Material;n._uuid="standard-material",n.initialize({effectName:"standard"}),e[n._uuid]=n,t.push(n);var i=new r.Material;i._uuid="missing-effect-material",i.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),i.setProperty("mainColor",r.color("#ffff00")),e[i._uuid]=i,t.push(i);var o=new r.Material;o._uuid="missing-material",o.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),o.setProperty("mainColor",r.color("#ff00ff")),e[o._uuid]=o,t.push(o);var a=new r.Material;a._uuid="default-clear-stencil",a.initialize({defines:{USE_TEXTURE:!1},effectName:"clear-stencil"}),e[a._uuid]=a,t.push(a);var s=new r.Material;s._uuid="ui-base-material",s.initialize({defines:{USE_TEXTURE:!1},effectName:"sprite"}),e[s._uuid]=s,t.push(s);var c=new r.Material;c._uuid="ui-sprite-material",c.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"sprite"}),e[c._uuid]=c,t.push(c);var l=new r.Material;l._uuid="ui-alpha-test-material",l.initialize({defines:{USE_TEXTURE:!0,USE_ALPHA_TEST:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"sprite"}),e[l._uuid]=l,t.push(l);var m=new r.Material;m._uuid="ui-sprite-gray-material",m.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!0},effectName:"sprite"}),e[m._uuid]=m,t.push(m);var u=new r.Material;u._uuid="ui-sprite-alpha-sep-material",u.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!0,IS_GRAY:!1},effectName:"sprite"}),e[u._uuid]=u,t.push(u);var _=new r.Material;_._uuid="ui-sprite-gray-alpha-sep-material",_.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!0,IS_GRAY:!0},effectName:"sprite"}),e[_._uuid]=_,t.push(_);var f=new r.Material;f._uuid="ui-graphics-material",f.initialize({effectName:"graphics"}),e[f._uuid]=f,t.push(f);var h=new r.Material;h._uuid="default-particle-material",h.initialize({effectName:"particle"}),e[h._uuid]=h,t.push(h);var d=new r.Material;d._uuid="default-particle-gpu-material",d.initialize({effectName:"particle-gpu"}),e[d._uuid]=d,t.push(d);var v=new r.Material;v._uuid="default-trail-material",v.initialize({effectName:"particle-trail"}),e[v._uuid]=v,t.push(v);var p=new r.Material;p._uuid="default-billboard-material",p.initialize({effectName:"billboard"}),e[p._uuid]=p,t.push(p);var g=new r.Material;g._uuid="default-spine-material",g.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"spine"}),e[g._uuid]=g,t.push(g),r.game.on(r.Game.EVENT_RENDERER_INITED,(function(){for(var e=0;e<t.length;++e)for(var n=t[e],i=0;i<n.passes.length;++i)n.passes[i].tryCompile()}))},e}(),Ou=e("e0",r.builtinResMgr=new bu),Pu=e("dX",(Iu=new Map,Ru=0,function(e){return"number"==typeof e?e:(Iu.has(e)||(Iu.set(e,1<<Ru),Ru++),Iu.get(e))})),Mu=new Ca(Oo.UNIFORM|Oo.TRANSFER_DST,Po.HOST|Po.DEVICE),Du=new Ea(null),zu=new Tr(null);!function(e){e[e.INSTANCING=1]="INSTANCING",e[e.VB_MERGING=2]="VB_MERGING"}(Nu||(Nu=e("Q",{})));var Lu,Fu,Uu,Bu,Gu,Vu,Hu,ju,qu=e("S",function(){function e(e){this._rootBuffer=null,this._rootBufferDirty=!1,this._buffers=[],this._descriptorSet=null,this._passIndex=0,this._propertyIndex=0,this._programName="",this._dynamics={},this._propertyHandleMap={},this._rootBlock=null,this._blocks=[],this._shaderInfo=null,this._defines={},this._properties={},this._root=void 0,this._device=void 0,this._hShaderDefault=bi,this._handle=bi,this._bs=new Ja,this._dss=new Xa,this._rs=new Ya,this._root=e,this._device=e.device}e.fillPipelineInfo=function(e,t){var n=e.handle;void 0!==t.priority&&Li.set(n,wi.PRIORITY,t.priority),void 0!==t.primitive&&Li.set(n,wi.PRIMITIVE,t.primitive),void 0!==t.stage&&Li.set(n,wi.STAGE,t.stage),void 0!==t.dynamicStates&&Li.set(n,wi.DYNAMIC_STATES,t.dynamicStates),void 0!==t.phase&&Li.set(n,wi.PHASE,Pu(t.phase));var i=e._bs;if(t.blendState){var o=t.blendState,a=o.targets;a&&a.forEach((function(e,t){i.setTarget(t,e)})),void 0!==o.isA2C&&(i.isA2C=o.isA2C),void 0!==o.isIndepend&&(i.isIndepend=o.isIndepend),void 0!==o.blendColor&&(i.blendColor=o.blendColor)}e._rs.assign(t.rasterizerState),e._dss.assign(t.depthStencilState)},e.getPassHash=function(e,t){var n,i=e.handle,o=t+","+Li.get(i,wi.PRIMITIVE)+","+Li.get(i,wi.DYNAMIC_STATES);return o+=function(e){for(var t,n=",bs,"+e.isA2C,i=ne(e.targets);!(t=i()).done;){var o=t.value;n+=",bt,"+o.blend+","+o.blendEq+","+o.blendAlphaEq+","+o.blendColorMask,n+=","+o.blendSrc+","+o.blendDst+","+o.blendSrcAlpha+","+o.blendDstAlpha}return n}(e._bs),o+=function(e){var t=",dss,"+e.depthTest+","+e.depthWrite+","+e.depthFunc;return t+=","+e.stencilTestFront+","+e.stencilFuncFront+","+e.stencilRefFront+","+e.stencilReadMaskFront,t+=","+e.stencilFailOpFront+","+e.stencilZFailOpFront+","+e.stencilPassOpFront+","+e.stencilWriteMaskFront,(t+=","+e.stencilTestBack+","+e.stencilFuncBack+","+e.stencilRefBack+","+e.stencilReadMaskBack)+","+e.stencilFailOpBack+","+e.stencilZFailOpBack+","+e.stencilPassOpBack+","+e.stencilWriteMaskBack}(e._dss),za(o+=",rs,"+(n=e._rs).cullMode+","+n.depthBias+","+n.isFrontFaceCCW,666)};var t=e.prototype;return t.initialize=function(e){this._doInit(e),this.resetUBOs(),this.resetTextures(),this.tryCompile()},t.getHandle=function(e,t,n){void 0===t&&(t=0),void 0===n&&(n=wo.UNKNOWN);var i=this._propertyHandleMap[e];return i?(n?i=_u(i,n):t&&(i=_u(i,lu(i)-t)),i+t):0},t.getBinding=function(t){var n=this.getHandle(t);return n?e.getBindingFromHandle(n):-1},t.setUniform=function(t,n){var i=e.getBindingFromHandle(t),o=e.getTypeFromHandle(t),a=e.getOffsetFromHandle(t),r=this._blocks[i];hu[o](r,n,a),this._rootBufferDirty=!0},t.getUniform=function(t,n){var i=e.getBindingFromHandle(t),o=e.getTypeFromHandle(t),a=e.getOffsetFromHandle(t),r=this._blocks[i];return fu[o](r,n,a)},t.setUniformArray=function(t,n){for(var i=e.getBindingFromHandle(t),o=e.getTypeFromHandle(t),a=ga(o)>>2,r=this._blocks[i],s=e.getOffsetFromHandle(t),c=0;c<n.length;c++,s+=a)null!==n[c]&&hu[o](r,n[c],s);this._rootBufferDirty=!0},t.bindTexture=function(e,t,n){this._descriptorSet.bindTexture(e,t,n||0)},t.bindSampler=function(e,t,n){this._descriptorSet.bindSampler(e,t,n||0)},t.setDynamicState=function(e,t){var n=this._dynamics[e];n&&n.value===t||(n.value=t,n.dirty=!0)},t.overridePipelineStates=function(){console.warn("base pass cannot override states, please use pass instance instead.")},t.update=function(){this._rootBufferDirty&&this._rootBuffer&&(this._rootBuffer.update(this._rootBlock),this._rootBufferDirty=!1),this._descriptorSet.update()},t.destroy=function(){for(var e=0;e<this._shaderInfo.blocks.length;e++){var t=this._shaderInfo.blocks[e];this._buffers[t.binding].destroy()}this._buffers=[],this._rootBuffer&&(this._rootBuffer.destroy(),this._rootBlock=null),this._descriptorSet=null,this._rs.destroy(),this._dss.destroy(),this._bs.destroy(),this._handle&&(Pi.free(Li.get(this._handle,wi.DESCRIPTOR_SET)),Li.free(this._handle),this._handle=bi)},t.resetUniform=function(t){var n=this.getHandle(t);if(n){var i=e.getTypeFromHandle(n),o=e.getBindingFromHandle(n),a=e.getOffsetFromHandle(n),r=this._blocks[o],s=this._properties[t],c=s&&s.value||vu(i);hu[i](r,c,a),this._rootBufferDirty=!0}},t.resetTexture=function(t,n){var i=this.getHandle(t);if(i){var o=e.getTypeFromHandle(i),a=e.getBindingFromHandle(i),r=this._properties[t],s=r&&r.value,c=s?s+"-texture":vu(o),l=Ou.get(c),m=l&&l.getGFXTexture(),u=r&&void 0!==r.samplerHash?r.samplerHash:l&&l.getSamplerHash(),_=zl.getSampler(this._device,u);this._descriptorSet.bindSampler(a,_,n),this._descriptorSet.bindTexture(a,m,n)}},t.resetUBOs=function(){for(var e=0;e<this._shaderInfo.blocks.length;e++)for(var t=this._shaderInfo.blocks[e],n=this._blocks[t.binding],i=0,o=0;o<t.members.length;o++){for(var a=t.members[o],r=this._properties[a.name],s=r&&r.value||vu(a.type),c=(ga(a.type)>>2)*a.count,l=0;l+s.length<=c;l+=s.length)n.set(s,i+l);i+=c}this._rootBufferDirty=!0},t.resetTextures=function(){for(var e=0;e<this._shaderInfo.samplers.length;e++)for(var t=this._shaderInfo.samplers[e],n=0;n<t.count;n++)this.resetTexture(t.name,n)},t.tryCompile=function(){var t=this._root.pipeline;return!!t&&(this._syncBatchingScheme(),this._hShaderDefault=Su.getGFXShader(this._device,this._programName,this._defines,t),this._hShaderDefault?(Li.set(this._handle,wi.PIPELINE_LAYOUT,Su.getTemplateInfo(this._programName).hPipelineLayout),Li.set(this._handle,wi.HASH,e.getPassHash(this,this._hShaderDefault)),!0):(console.warn("create shader "+this._programName+" failed"),!1))},t.getShaderVariant=function(e){if(void 0===e&&(e=null),!this._hShaderDefault&&!this.tryCompile())return console.warn("pass resources incomplete"),bi;if(!e)return this._hShaderDefault;for(var t=this._root.pipeline,n=0;n<e.length;n++){var i=e[n];this._defines[i.name]=i.value}for(var o=Su.getGFXShader(this._device,this._programName,this._defines,t),a=0;a<e.length;a++){var r=e[a];delete this._defines[r.name]}return o},t.beginChangeStatesSilently=function(){},t.endChangeStatesSilently=function(){},t._doInit=function(t,n){void 0===n&&(n=!1);var i=this._handle=Li.alloc();Li.set(i,wi.PRIORITY,Ur.DEFAULT),Li.set(i,wi.STAGE,Fr.DEFAULT),Li.set(i,wi.PHASE,Pu("default")),Li.set(i,wi.PRIMITIVE,zo.TRIANGLE_LIST),Li.set(i,wi.RASTERIZER_STATE,this._rs.handle),Li.set(i,wi.DEPTH_STENCIL_STATE,this._dss.handle),Li.set(i,wi.BLEND_STATE,this._bs.handle),this._passIndex=t.passIndex,this._propertyIndex=void 0!==t.propertyIndex?t.propertyIndex:t.passIndex,this._programName=t.program,this._defines=n?K({},t.defines):t.defines,this._shaderInfo=Su.getTemplate(t.program),this._properties=t.properties||this._properties;var o=this._device;e.fillPipelineInfo(this,t),t.stateOverrides&&e.fillPipelineInfo(this,t.stateOverrides),zu.layout=Su.getDescriptorSetLayout(this._device,t.program);var a=Pi.alloc(this._device,zu);Li.set(this._handle,wi.DESCRIPTOR_SET,a),this._descriptorSet=Pi.get(a);for(var r=this._shaderInfo.blocks,s=Su.getTemplateInfo(t.program),c=s.blockSizes,l=s.handleMap,m=o.uboOffsetAlignment,u=[],_=0,f=0,h=0;h<r.length;h++){var d=c[h];u.push(f),f+=Math.ceil(d/m)*m,_=d}var v=u[u.length-1]+_;v&&(Mu.size=16*Math.ceil(v/16),this._rootBuffer=o.createBuffer(Mu),this._rootBlock=new ArrayBuffer(v));for(var p=0,g=0;p<r.length;p++){var x=r[p].binding,y=c[p];Du.buffer=this._rootBuffer,Du.offset=u[g++],Du.range=16*Math.ceil(y/16);var A=this._buffers[x]=o.createBuffer(Du);this._blocks[x]=new Float32Array(this._rootBlock,Du.offset,y/Float32Array.BYTES_PER_ELEMENT),this._descriptorSet.bindBuffer(x,A)}var T=this._propertyHandleMap=l,C={};for(var E in this._properties){var S=this._properties[E];S.handleInfo&&(C[E]=this.getHandle.apply(this,S.handleInfo))}Object.assign(T,C)},t._syncBatchingScheme=function(){this._defines.USE_INSTANCING?this._device.hasFeature(ma.INSTANCED_ARRAYS)?Li.set(this._handle,wi.BATCHING_SCHEME,Nu.INSTANCING):(this._defines.USE_INSTANCING=!1,Li.set(this._handle,wi.BATCHING_SCHEME,0)):this._defines.USE_BATCHING?Li.set(this._handle,wi.BATCHING_SCHEME,Nu.VB_MERGING):Li.set(this._handle,wi.BATCHING_SCHEME,0)},t._destroyHandle=function(){this._handle&&(Li.free(this._handle),this._handle=bi)},t._initPassFromTarget=function(e,t,n,i){Li.set(this.handle,wi.PRIORITY,e.priority),Li.set(this.handle,wi.STAGE,e.stage),Li.set(this.handle,wi.PHASE,e.phase),Li.set(this.handle,wi.BATCHING_SCHEME,e.batchingScheme),Li.set(this.handle,wi.PRIMITIVE,e.primitive),Li.set(this.handle,wi.DYNAMIC_STATES,e.dynamicStates),this._descriptorSet=e.descriptorSet,Li.set(this.handle,wi.DESCRIPTOR_SET,Li.get(e.handle,wi.DESCRIPTOR_SET)),this._bs=n,Li.set(this.handle,wi.BLEND_STATE,n.handle),this._rs=e.rasterizerState,Li.set(this.handle,wi.RASTERIZER_STATE,Li.get(e.handle,wi.RASTERIZER_STATE)),this._dss=t,Li.set(this.handle,wi.DEPTH_STENCIL_STATE,t.handle),this._passIndex=e.passIndex,this._propertyIndex=e.propertyIndex,this._programName=e.program,this._defines=e.defines,this._shaderInfo=e._shaderInfo,this._properties=e._properties,this._blocks=e._blocks,this._dynamics=e._dynamics,this._hShaderDefault=e._hShaderDefault,Li.set(this._handle,wi.PIPELINE_LAYOUT,Su.getTemplateInfo(this._programName).hPipelineLayout);var o=Li.get(e.handle,wi.HASH);Li.set(this._handle,wi.HASH,o^i)},X(e,[{key:"root",get:function(){return this._root}},{key:"device",get:function(){return this._device}},{key:"shaderInfo",get:function(){return this._shaderInfo}},{key:"localSetLayout",get:function(){return Su.getDescriptorSetLayout(this._device,this._programName,!0)}},{key:"program",get:function(){return this._programName}},{key:"properties",get:function(){return this._properties}},{key:"defines",get:function(){return this._defines}},{key:"passIndex",get:function(){return this._passIndex}},{key:"propertyIndex",get:function(){return this._propertyIndex}},{key:"dynamics",get:function(){return this._dynamics}},{key:"blocks",get:function(){return this._blocks}},{key:"handle",get:function(){return this._handle}},{key:"priority",get:function(){return Li.get(this._handle,wi.PRIORITY)}},{key:"primitive",get:function(){return Li.get(this._handle,wi.PRIMITIVE)}},{key:"stage",get:function(){return Li.get(this._handle,wi.STAGE)}},{key:"phase",get:function(){return Li.get(this._handle,wi.PHASE)}},{key:"rasterizerState",get:function(){return this._rs}},{key:"depthStencilState",get:function(){return this._dss}},{key:"blendState",get:function(){return this._bs}},{key:"dynamicStates",get:function(){return Li.get(this._handle,wi.DYNAMIC_STATES)}},{key:"batchingScheme",get:function(){return Li.get(this._handle,wi.BATCHING_SCHEME)}},{key:"descriptorSet",get:function(){return this._descriptorSet}},{key:"hash",get:function(){return Li.get(this._handle,wi.HASH)}},{key:"rootBufferDirty",get:function(){return this._rootBufferDirty}}]),e}());qu.PropertyType=au,qu.getPropertyTypeFromHandle=cu,qu.getTypeFromHandle=lu,qu.getBindingFromHandle=mu,qu.getOffsetFromHandle=uu;var ku,Wu,Yu,Xu,Ku,Ju,Qu,Zu,$u,e_,t_=e("ca",Ws("cc.EffectAsset")((ju=Hu=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"techniques",Uu,ee(t)),ie(t,"shaders",Bu,ee(t)),ie(t,"combinations",Gu,ee(t)),ie(t,"hideInEditor",Vu,ee(t)),t}J(t,e),t.register=function(e){t._effects[e.name]=e},t.remove=function(e){if(t._effects[e])delete t._effects[e];else for(var n in t._effects)if(t._effects[n]._uuid===e)return void delete t._effects[n]},t.get=function(e){if(t._effects[e])return t._effects[e];for(var n in t._effects)if(t._effects[n]._uuid===e)return t._effects[n];return null},t.getAll=function(){return t._effects};var n=t.prototype;return n.onLoaded=function(){Su.register(this),t.register(this),r.game.once(r.Game.EVENT_ENGINE_INITED,this._precompile,this)},n._precompile=function(){for(var e=this,t=r.director.root,n=function(n){var i=e.shaders[n],o=e.combinations[n];if(!o)return"continue";Object.keys(o).reduce((function(e,t){return e.reduce((function(e,n){var i=o[t],a=[n].concat([].concat(Array(i.length-1)).map((function(){return K({},n)})));return a.forEach((function(e,n){return e[t]=i[n]})),e.concat(a)}),[])}),[{}]).forEach((function(e){return Su.getGFXShader(t.device,i.name,e,t.pipeline)}))},i=0;i<this.shaders.length;i++)n(i)},n.destroy=function(){return t.remove(this.name),e.prototype.destroy.call(this)},t}(al),Hu._effects={},Uu=oe((Fu=ju).prototype,"techniques",[Qs,rc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Bu=oe(Fu.prototype,"shaders",[Qs,rc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Gu=oe(Fu.prototype,"combinations",[Qs,rc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Vu=oe(Fu.prototype,"hideInEditor",[Qs,Zs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Lu=Fu))||Lu);r.EffectAsset=t_;var n_=new Se("RenderTex"),i_=new nr;i_.endLayout=ta.SHADER_READONLY_OPTIMAL;var o_,a_,r_,s_,c_,l_,m_,u_,__,f_,h_=new ar([i_],new ir),d_={width:1,height:1,renderPassInfo:h_},v_=e("cc",(ku=Ws("cc.RenderTexture"),Wu=mc(),Yu=uc(),Xu=mc(),Ku=uc(),ku((e_=function(e){function t(){var t;return ie(t=e.call(this)||this,"_width",Zu,ee(t)),ie(t,"_height",$u,ee(t)),t._textureHash=0,t._id=void 0,t._window=null,t._id=n_.getNewId(),t._textureHash=za(t._id,666),t}J(t,e);var n=t.prototype;return n.getHash=function(){return this._textureHash},n.initialize=function(e){this._name=e.name||"",this._width=e.width,this._height=e.height,this._initWindow(e)},n.reset=function(e){this.initialize(e)},n.destroy=function(){return this._window&&(r.director.root.destroyWindow(this._window),this._window=null),e.prototype.destroy.call(this)},n.resize=function(e,t){this._width=e,this._height=t,this._window&&this._window.resize(e,t),this.emit("resize",this._window)},n.getGFXTexture=function(){return this._window&&this._window.framebuffer.colorTextures[0]},n.getGFXSampler=function(){var e=r.director.root;return zl.getSampler(e.device,gl)},n.getSamplerHash=function(){return gl},n.onLoaded=function(){this._initWindow(),this.loaded=!0,this.emit("load")},n._initWindow=function(e){var t=r.director.root;d_.title=this._name,d_.width=this._width,d_.height=this._height,d_.renderPassInfo=e&&e.passInfo?e.passInfo:h_,this._window?(this._window.destroy(),this._window.initialize(t.device,d_)):this._window=t.createWindow(d_)},X(t,[{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"window",get:function(){return this._window}}]),t}(al),Zu=oe((Qu=e_).prototype,"_width",[Qs,Wu,Yu],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),$u=oe(Qu.prototype,"_height",[Qs,Xu,Ku],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Ju=Qu))||Ju));r.RenderTexture=v_;var p_,g_=e("cb",(o_=Ws("cc.Material"),a_=pc(t_),o_((f_=function(e){function t(){var t;return ie(t=e.call(this)||this,"_effectAsset",c_,ee(t)),ie(t,"_techIdx",l_,ee(t)),ie(t,"_defines",m_,ee(t)),ie(t,"_states",u_,ee(t)),ie(t,"_props",__,ee(t)),t._passes=[],t._hash=0,t.loaded=!1,t}J(t,e),t.getHash=function(e){for(var t,n=0,i=ne(e.passes);!(t=i()).done;)n^=t.value.hash;return n};var n=t.prototype;return n.initialize=function(e){this._defines||(this._defines=[]),this._states||(this._states=[]),this._props||(this._props=[]),void 0!==e.technique&&(this._techIdx=e.technique),e.effectAsset?this._effectAsset=e.effectAsset:e.effectName&&(this._effectAsset=t_.get(e.effectName)),e.defines&&this._prepareInfo(e.defines,this._defines),e.states&&this._prepareInfo(e.states,this._states),this._update()},n.reset=function(e){this.initialize(e)},n.destroy=function(){return this._doDestroy(),e.prototype.destroy.call(this)},n.recompileShaders=function(){console.warn("Shaders in material asset '"+this.name+"' cannot be modified at runtime, please instantiate the material first.")},n.overridePipelineStates=function(){console.warn("Pipeline states in material asset '"+this.name+"' cannot be modified at runtime, please instantiate the material first.")},n.onLoaded=function(){this._update(),this.loaded=!0,this.emit("load")},n.resetUniforms=function(e){void 0===e&&(e=!0),this._props.length=this._passes.length;for(var t=0;t<this._props.length;t++)this._props[t]={};if(e)for(var n,i=ne(this._passes);!(n=i()).done;){var o=n.value;o.resetUBOs(),o.resetTextures()}},n.setProperty=function(e,t,n){var i=!1;if(void 0===n)for(var o=this._passes,a=o.length,r=0;r<a;r++){var s=o[r];this._uploadProperty(s,e,t)&&(this._props[s.propertyIndex][e]=t,i=!0)}else{if(n>=this._passes.length)return void console.warn("illegal pass index: "+n+".");var c=this._passes[n];this._uploadProperty(c,e,t)&&(this._props[c.propertyIndex][e]=t,i=!0)}i||console.warn("illegal property name: "+e+".")},n.getProperty=function(e,t){if(void 0===t)for(var n=this._props,i=n.length,o=0;o<i;o++){var a=n[o];if(e in a)return a[e]}else{if(t>=this._props.length)return console.warn("illegal pass index: "+t+"."),null;var r=this._props[this._passes[t].propertyIndex];if(e in r)return r[e]}return null},n.copy=function(e){this._techIdx=e._techIdx,this._props.length=e._props.length;for(var t=0;t<e._props.length;t++)this._props[t]=K({},e._props[t]);this._defines.length=e._defines.length;for(var n=0;n<e._defines.length;n++)this._defines[n]=K({},e._defines[n]);this._states.length=e._states.length;for(var i=0;i<e._states.length;i++)this._states[i]=K({},e._states[i]);this._effectAsset=e._effectAsset,this._update()},n._prepareInfo=function(e,t){var n=e;if(!Array.isArray(n)){var i=this._effectAsset?this._effectAsset.techniques[this._techIdx].passes.length:1;n=Array(i).fill(n)}for(var o=0;o<n.length;++o)Object.assign(t[o]||(t[o]={}),n[o])},n._createPasses=function(){var e=this._effectAsset.techniques[this._techIdx||0];if(!e)return[];for(var t=e.passes.length,n=[],i=0;i<t;++i){var o=e.passes[i],a=o.passIndex=i,s=o.defines=this._defines[a]||(this._defines[a]={}),c=o.stateOverrides=this._states[a]||(this._states[a]={});if(void 0!==o.propertyIndex&&(Object.assign(s,this._defines[o.propertyIndex]),Object.assign(c,this._states[o.propertyIndex])),void 0!==o.embeddedMacros&&Object.assign(s,o.embeddedMacros),!o.switch||s[o.switch]){var l=new qu(r.director.root);l.initialize(o),n.push(l)}}return n},n._update=function(e){var n=this;if(void 0===e&&(e=!0),this._effectAsset){if(this._passes&&this._passes.length)for(var i,o=ne(this._passes);!(i=o()).done;)i.value.destroy();this._passes=this._createPasses();var a=this._effectAsset.techniques[this._techIdx].passes.length;if(this._props.length=a,e)this._passes.forEach((function(e,t){var i=n._props[t];for(var o in i||(i=n._props[t]={}),void 0!==e.propertyIndex&&Object.assign(i,n._props[e.propertyIndex]),i)n._uploadProperty(e,o,i[o])}));else for(var r=0;r<this._props.length;r++)this._props[r]={}}else{var s=Ou.get("missing-effect-material");s&&(this._passes=s._passes.slice())}this._hash=t.getHash(this)},n._uploadProperty=function(e,t,n){var i=e.getHandle(t);if(!i)return!1;var o=qu.getPropertyTypeFromHandle(i);if(o===au.UBO)Array.isArray(n)?e.setUniformArray(i,n):null!==n?e.setUniform(i,n):e.resetUniform(t);else if(o===au.SAMPLER)if(Array.isArray(n))for(var a=0;a<n.length;a++)this._bindTexture(e,i,n[a],a);else n?this._bindTexture(e,i,n):e.resetTexture(t);return!0},n._bindTexture=function(e,t,n,i){var o=qu.getBindingFromHandle(t);if(n instanceof gr)e.bindTexture(o,n,i);else if(n instanceof Gl||n instanceof v_){var a=n.getGFXTexture();if(!a||!a.width||!a.height)return;e.bindTexture(o,a,i),e.bindSampler(o,n.getGFXSampler(),i)}},n._doDestroy=function(){if(this._passes&&this._passes.length)for(var e,t=ne(this._passes);!(e=t()).done;)e.value.destroy();this._effectAsset=null,this._passes.length=0,this._props.length=0,this._defines.length=0,this._states.length=0},X(t,[{key:"effectAsset",get:function(){return this._effectAsset}},{key:"effectName",get:function(){return this._effectAsset?this._effectAsset.name:""}},{key:"technique",get:function(){return this._techIdx}},{key:"passes",get:function(){return this._passes}},{key:"hash",get:function(){return this._hash}},{key:"parent",get:function(){return null}},{key:"owner",get:function(){return null}}]),t}(al),c_=oe((s_=f_).prototype,"_effectAsset",[a_],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),l_=oe(s_.prototype,"_techIdx",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),m_=oe(s_.prototype,"_defines",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),u_=oe(s_.prototype,"_states",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),__=oe(s_.prototype,"_props",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),r_=s_))||r_));r.Material=g_,function(e){e[e.NONE=0]="NONE",e[e.LAN=1]="LAN",e[e.WWAN=2]="WWAN"}(p_||(p_={}));var x_,y_=e("ck",{NetworkType:p_,LANGUAGE_ENGLISH:"en",LANGUAGE_CHINESE:"zh",LANGUAGE_FRENCH:"fr",LANGUAGE_ITALIAN:"it",LANGUAGE_GERMAN:"de",LANGUAGE_SPANISH:"es",LANGUAGE_DUTCH:"du",LANGUAGE_RUSSIAN:"ru",LANGUAGE_KOREAN:"ko",LANGUAGE_JAPANESE:"ja",LANGUAGE_HUNGARIAN:"hu",LANGUAGE_PORTUGUESE:"pt",LANGUAGE_ARABIC:"ar",LANGUAGE_NORWEGIAN:"no",LANGUAGE_POLISH:"pl",LANGUAGE_TURKISH:"tr",LANGUAGE_UKRAINIAN:"uk",LANGUAGE_ROMANIAN:"ro",LANGUAGE_BULGARIAN:"bg",LANGUAGE_UNKNOWN:"unknown",OS_IOS:"iOS",OS_ANDROID:"Android",OS_WINDOWS:"Windows",OS_LINUX:"Linux",OS_OSX:"OS X",OS_UNKNOWN:"Unknown",UNKNOWN:-1,WIN32:0,LINUX:1,MACOS:2,ANDROID:3,IPHONE:4,IPAD:5,BLACKBERRY:6,NACL:7,EMSCRIPTEN:8,TIZEN:9,WINRT:10,WP8:11,MOBILE_BROWSER:100,DESKTOP_BROWSER:101,EDITOR_PAGE:102,EDITOR_CORE:103,WECHAT_GAME:104,QQ_PLAY:105,FB_PLAYABLE_ADS:106,BAIDU_MINI_GAME:107,VIVO_MINI_GAME:108,OPPO_MINI_GAME:109,HUAWEI_QUICK_GAME:110,XIAOMI_QUICK_GAME:111,COCOSPLAY:112,ALIPAY_MINI_GAME:113,QTT_MINI_GAME:116,BYTEDANCE_MINI_GAME:117,LINKSURE_MINI_GAME:119,BROWSER_TYPE_WECHAT:"wechat",BROWSER_TYPE_ANDROID:"androidbrowser",BROWSER_TYPE_IE:"ie",BROWSER_TYPE_EDGE:"edge",BROWSER_TYPE_QQ:"qqbrowser",BROWSER_TYPE_MOBILE_QQ:"mqqbrowser",BROWSER_TYPE_UC:"ucbrowser",BROWSER_TYPE_UCBS:"ucbs",BROWSER_TYPE_360:"360browser",BROWSER_TYPE_BAIDU_APP:"baiduboxapp",BROWSER_TYPE_BAIDU:"baidubrowser",BROWSER_TYPE_MAXTHON:"maxthon",BROWSER_TYPE_OPERA:"opera",BROWSER_TYPE_OUPENG:"oupeng",BROWSER_TYPE_MIUI:"miuibrowser",BROWSER_TYPE_FIREFOX:"firefox",BROWSER_TYPE_SAFARI:"safari",BROWSER_TYPE_CHROME:"chrome",BROWSER_TYPE_LIEBAO:"liebao",BROWSER_TYPE_QZONE:"qzone",BROWSER_TYPE_SOUGOU:"sogou",BROWSER_TYPE_HUAWEI:"huawei",BROWSER_TYPE_UNKNOWN:"unknown",isNative:!1,isBrowser:"object"==typeof window&&"object"==typeof document,isMobile:!1,isLittleEndian:(x_=new ArrayBuffer(2),new DataView(x_).setInt16(0,256,!0),256===new Int16Array(x_)[0]),platform:-1,language:"unknown",languageCode:"unknown",os:"Unknown",osVersion:"",osMainVersion:0,browserType:"unknown",browserVersion:"",windowPixelResolution:null,capabilities:null,localStorage:null,__audioSupport:null,__videoSupport:null,getNetworkType:function(){return p_.LAN},getBatteryLevel:function(){return 1},garbageCollect:function(){},isObjectValid:function(e){return null!=e},dump:function(){var e="";e+="isMobile : "+this.isMobile+"\r\n",e+="language : "+this.language+"\r\n",e+="browserType : "+this.browserType+"\r\n",e+="browserVersion : "+this.browserVersion+"\r\n",e+="capabilities : "+JSON.stringify(this.capabilities)+"\r\n",e+="os : "+this.os+"\r\n",e+="osVersion : "+this.osVersion+"\r\n",e+="platform : "+this.platform+"\r\n",d(e+="Using "+(r.game.renderType===r.game.RENDER_TYPE_WEBGL?"WEBGL":"CANVAS")+" renderer.\r\n")},openURL:function(e){window.open(e)},now:function(){return Date.now?Date.now():+new Date},restartVM:function(){},getSafeAreaRect:function(){var e=r.view.getVisibleSize();return r.rect(0,0,e.width,e.height)},__init:function(){var e=window,t=e.navigator,n=document,i=n.documentElement,o=t.userAgent.toLowerCase();y_.isMobile=/mobile|android|iphone|ipad/.test(o),y_.platform=y_.isMobile?y_.MOBILE_BROWSER:y_.DESKTOP_BROWSER;var a=t.language;y_.languageCode=a.toLowerCase(),a=(a=a||t.browserLanguage)?a.split("-")[0]:y_.LANGUAGE_ENGLISH,y_.language=a;var r=!1,s=!1,c="",l=0,m=/android\s*(\d+(?:\.\d+)*)/i.exec(o)||/android\s*(\d+(?:\.\d+)*)/i.exec(t.platform);m&&(r=!0,c=m[1]||"",l=parseInt(c)||0),(m=/(iPad|iPhone|iPod).*OS ((\d+_?){2,3})/i.exec(o))?(s=!0,c=m[2]||"",l=parseInt(c)||0):(/(iPhone|iPad|iPod)/.exec(t.platform)||"MacIntel"===t.platform&&t.maxTouchPoints&&t.maxTouchPoints>1)&&(s=!0,c="",l=0);var u,_=y_.OS_UNKNOWN;-1!==t.appVersion.indexOf("Win")?_=y_.OS_WINDOWS:s?_=y_.OS_IOS:-1!==t.appVersion.indexOf("Mac")?_=y_.OS_OSX:-1!==t.appVersion.indexOf("X11")&&-1===t.appVersion.indexOf("Linux")?_=y_.OS_UNIX:r?_=y_.OS_ANDROID:-1===t.appVersion.indexOf("Linux")&&-1===o.indexOf("ubuntu")||(_=y_.OS_LINUX),y_.os=_,y_.osVersion=c,y_.osMainVersion=l,y_.browserType=y_.BROWSER_TYPE_UNKNOWN,function(){var e=/mqqbrowser|micromessenger|qqbrowser|sogou|qzone|liebao|maxthon|ucbs|360 aphone|360browser|baiduboxapp|baidubrowser|maxthon|mxbrowser|miuibrowser/i.exec(o)||/qq|qqbrowser|ucbrowser|ubrowser|edge|HuaweiBrowser/i.exec(o)||/chrome|safari|firefox|trident|opera|opr\/|oupeng/i.exec(o),t=e?e[0].toLowerCase():y_.BROWSER_TYPE_UNKNOWN;("safari"===t&&r||"qq"===t&&/android.*applewebkit/i.test(o))&&(t=y_.BROWSER_TYPE_ANDROID);var n={micromessenger:y_.BROWSER_TYPE_WECHAT,trident:y_.BROWSER_TYPE_IE,edge:y_.BROWSER_TYPE_EDGE,"360 aphone":y_.BROWSER_TYPE_360,mxbrowser:y_.BROWSER_TYPE_MAXTHON,"opr/":y_.BROWSER_TYPE_OPERA,ubrowser:y_.BROWSER_TYPE_UC,huaweibrowser:y_.BROWSER_TYPE_HUAWEI};y_.browserType=n[t]||t}(),y_.browserVersion="",(u=/(mqqbrowser|micromessenger|qqbrowser|sogou|qzone|liebao|maxthon|uc|ucbs|360 aphone|360|baiduboxapp|baidu|maxthon|mxbrowser|miui(?:.hybrid)?)(mobile)?(browser)?\/?([\d.]+)/i.exec(o))||(u=/(qq|chrome|safari|firefox|trident|opera|opr\/|oupeng)(mobile)?(browser)?\/?([\d.]+)/i.exec(o)),y_.browserVersion=u?u[4]:"";var f=window.innerWidth||document.documentElement.clientWidth,h=window.innerHeight||document.documentElement.clientHeight,d=window.devicePixelRatio||1;y_.windowPixelResolution={width:d*f,height:d*h};var v,p=document.createElement("canvas");try{var g=y_.localStorage=e.localStorage;g.setItem("storage",""),g.removeItem("storage"),g=null}catch(e){var x=function(){S(5200)};y_.localStorage={getItem:x,setItem:x,removeItem:x,clear:x}}try{v=p.toDataURL("image/webp").startsWith("data:image/webp")}catch(e){v=!1}var y=!!p.getContext("2d"),A=!1;e.WebGLRenderingContext&&(A=!0);var T,E=y_.capabilities={canvas:y,opengl:A,webp:v,imageBitmap:!1,touches:!1,mouse:!1,keyboard:!1,accelerometer:!1};"undefined"!=typeof createImageBitmap&&"undefined"!=typeof Blob&&(p.width=p.height=2,createImageBitmap(p,{}).then((function(e){E.imageBitmap=!0,e.close&&e.close()})).catch((function(){}))),(void 0!==i.ontouchstart||void 0!==n.ontouchstart||t.msPointerEnabled)&&(E.touches=!0),void 0!==i.onmouseup&&(E.mouse=!0),void 0!==i.onkeyup&&(E.keyboard=!0),(e.DeviceMotionEvent||e.DeviceOrientationEvent)&&(E.accelerometer=!0),T={ONLY_ONE:!1,WEB_AUDIO:!!(window.AudioContext||window.webkitAudioContext||window.mozAudioContext),DELAY_CREATE_CTX:!1},y_.os===y_.OS_IOS&&(T.USE_LOADER_EVENT="loadedmetadata"),y_.browserType===y_.BROWSER_TYPE_FIREFOX&&(T.DELAY_CREATE_CTX=!0,T.USE_LOADER_EVENT="canplay"),y_.os===y_.OS_ANDROID&&y_.browserType===y_.BROWSER_TYPE_UC&&(T.ONE_SOURCE=!0);try{T.WEB_AUDIO&&(T._context=null,Object.defineProperty(T,"context",{get:function(){return this._context?this._context:this._context=new(window.AudioContext||window.webkitAudioContext||window.mozAudioContext)}}))}catch(e){T.WEB_AUDIO=!1,C(5201)}var I,R=[];(I=document.createElement("audio")).canPlayType&&(I.canPlayType('audio/ogg; codecs="vorbis"')&&R.push(".ogg"),I.canPlayType("audio/mpeg")&&R.push(".mp3"),I.canPlayType('audio/wav; codecs="1"')&&R.push(".wav"),I.canPlayType("audio/mp4")&&R.push(".mp4"),I.canPlayType("audio/x-m4a")&&R.push(".m4a")),T.format=R,y_.__audioSupport=T,y_.__videoSupport={format:[]},function(){var e=document.createElement("video");if(e.canPlayType){var t=y_.__videoSupport.format;["mp4","webm"].forEach((function(n){e.canPlayType("video/"+n)&&t.push("."+n)})),y_.__videoSupport.format=t}}(),y_.__isWebIOS14OrIPadOS14Env=(y_.os===y_.OS_IOS||y_.os===y_.MACOS)&&y_.isBrowser&&/(OS 1[4-9])|(Version\/1[4-9])/.test(window.navigator.userAgent)}});"object"!=typeof window||"object"!=typeof document||i||o||n||y_.__init(),r.sys=y_;var A_=Hc.Flags.Destroyed,T_=Hc.Flags.PersistentMask,C_=rn.IDENTIFIER_RE,E_={"cc.ClickEvent":!1,"cc.PrefabInfo":!1},S_=rn.escapeForJS,I_=function(){function e(e,t){this.varName=void 0,this.expression=void 0,this.varName=e,this.expression=t}return e.prototype.toString=function(){return"var "+this.varName+"="+this.expression+";"},e}();function R_(e,t){return t instanceof I_?new I_(t.varName,e+t.expression):e+t}function N_(e,t,n){Array.isArray(n)?(n[0]=R_(t,n[0]),e.push(n)):e.push(R_(t,n)+";")}var w_=function(){function e(e){this._exps=void 0,this._targetExp=void 0,this._exps=[],this._targetExp=e}var t=e.prototype;return t.append=function(e,t){this._exps.push([e,t])},t.writeCode=function(e){var t;if(this._exps.length>1)e.push("t="+this._targetExp+";"),t="t";else{if(1!==this._exps.length)return;t=this._targetExp}for(var n=0;n<this._exps.length;n++){var i=this._exps[n];N_(e,t+b_(i[0])+"=",i[1])}},e}();function b_(e){return C_.test(e)?"."+e:"["+S_(e)+"]"}w_.pool=void 0,w_.pool=new mt((function(e){e._exps.length=0,e._targetExp=null}),1),w_.pool.get=function(e){var t=this._get()||new w_;return t._targetExp=e,t};var O_=function(){function e(e,t){var n;this.parent=void 0,this.objsToClear_iN$t=void 0,this.codeArray=void 0,this.objs=void 0,this.funcs=void 0,this.funcModuleCache=void 0,this.globalVariables=void 0,this.globalVariableId=void 0,this.localVariableId=void 0,this.result=void 0,this.parent=t,this.objsToClear_iN$t=[],this.codeArray=[],this.objs=[],this.funcs=[],this.funcModuleCache=Le(),Ye(this.funcModuleCache,E_),this.globalVariables=[],this.globalVariableId=0,this.localVariableId=0,this.codeArray.push("var o,t;","if(R){","o=R;","}else{","o=R=new "+this.getFuncModule(e.constructor,!0)+"();","}"),e._iN$t={globalVar:"R"},this.objsToClear_iN$t.push(e),this.enumerateObject(this.codeArray,e),this.globalVariables.length>0&&(n="var "+this.globalVariables.join(",")+";");var i=function(e){var t=[];return function e(t,n){for(var i,o=ne(n);!(i=o()).done;){var a=i.value;Array.isArray(a)?e(t,a):t.push(a)}}(t,e),t.join("")}(["return (function(R){",n||[],this.codeArray,"return o;","})"]);this.result=Function("O","F",i)(this.objs,this.funcs);for(var o=0,a=this.objsToClear_iN$t.length;o<a;++o)this.objsToClear_iN$t[o]._iN$t=null;this.objsToClear_iN$t.length=0}var t=e.prototype;return t.getFuncModule=function(e,t){var n=Fe(e);if(n){var i=this.funcModuleCache[n];if(i)return i;if(void 0===i){var o=-1!==n.indexOf(".");if(o)try{if(o=e===Function("return "+n)())return this.funcModuleCache[n]=n,n}catch(e){}}}var a=this.funcs.indexOf(e);a<0&&(a=this.funcs.length,this.funcs.push(e));var r="F["+a+"]";return t&&(r="("+r+")"),this.funcModuleCache[n]=r,r},t.getObjRef=function(e){var t=this.objs.indexOf(e);return t<0&&(t=this.objs.length,this.objs.push(e)),"O["+t+"]"},t.setValueType=function(e,t,n,i){var o=w_.pool.get(i),a=t.constructor.__props__;a||(a=Object.keys(t));for(var r=0;r<a.length;r++){var s=a[r],c=n[s];if(t[s]!==c){var l=this.enumerateField(n,s,c);o.append(s,l)}}o.writeCode(e),w_.pool.put(o)},t.enumerateCCClass=function(e,t,n){for(var i=n.__values__,o=Ft(n),a=0;a<i.length;a++){var s=i[a],c=t[s],l=o[s+"$_$default"];if(!P_(l,c))if("object"==typeof c&&c instanceof r.ValueType&&(l=rn.getDefault(l))&&l.constructor===c.constructor){var m="o"+b_(s);this.setValueType(e,l,c,m)}else this.setObjProp(e,t,s,c)}},t.instantiateArray=function(e){if(0===e.length)return"[]";var t="a"+ ++this.localVariableId,n=[new I_(t,"new Array("+e.length+")")];e._iN$t={globalVar:"",source:n},this.objsToClear_iN$t.push(e);for(var i=0;i<e.length;++i)N_(n,t+"["+i+"]=",this.enumerateField(e,i,e[i]));return n},t.instantiateTypedArray=function(e){var t=e.constructor.name;if(0===e.length)return"new "+t;var n="a"+ ++this.localVariableId,i=[new I_(n,"new "+t+"("+e.length+")")];e._iN$t={globalVar:"",source:i},this.objsToClear_iN$t.push(e);for(var o=0;o<e.length;++o)0!==e[o]&&N_(i,n+"["+o+"]=",e[o]);return i},t.enumerateField=function(e,t,n){if("object"==typeof n&&n){var i=n._iN$t;if(i){var o=i.globalVar;if(!o){o=i.globalVar="v"+ ++this.globalVariableId,this.globalVariables.push(o);var a=i.source[0];i.source[0]=R_(o+"=",a)}return o}return ArrayBuffer.isView(n)?this.instantiateTypedArray(n):Array.isArray(n)?this.instantiateArray(n):this.instantiateObj(n)}return"function"==typeof n?this.getFuncModule(n):"string"==typeof n?S_(n):("_objFlags"===t&&e instanceof Hc&&(n&=T_),n)},t.setObjProp=function(e,t,n,i){N_(e,"o"+b_(n)+"=",this.enumerateField(t,n,i))},t.enumerateObject=function(e,t){var n=t.constructor;if(r.Class._isCCClass(n))this.enumerateCCClass(e,t,n);else for(var i in t)if(t.hasOwnProperty(i)&&(95!==i.charCodeAt(0)||95!==i.charCodeAt(1)||"__type__"===i)){var o=t[i];"object"==typeof o&&o&&o===t._iN$t||this.setObjProp(e,t,i,o)}},t.instantiateObj=function(e){if(e instanceof r.ValueType)return rn.getNewValueTypeCode(e);if(e instanceof r.Asset)return this.getObjRef(e);if(e._objFlags&A_)return null;var t,n=e.constructor;if(r.Class._isCCClass(n)){if(this.parent)if(this.parent instanceof r.Component){if(e instanceof r._BaseNode||e instanceof r.Component)return this.getObjRef(e)}else if(this.parent instanceof r._BaseNode)if(e instanceof r._BaseNode){if(!e.isChildOf(this.parent))return this.getObjRef(e)}else if(e instanceof r.Component&&!e.node.isChildOf(this.parent))return this.getObjRef(e);t=new I_("o","new "+this.getFuncModule(n,!0)+"()")}else if(n===Object)t=new I_("o","{}");else{if(n)return this.getObjRef(e);t=new I_("o","Object.create(null)")}var i=[t];return e._iN$t={globalVar:"",source:i},this.objsToClear_iN$t.push(e),this.enumerateObject(i,e),["(function(){",i,"return o;})();"]},e}();function P_(e,t){if("function"==typeof e)try{e=e()}catch(e){return!1}if(e===t)return!0;if(e&&t&&"object"==typeof e&&"object"==typeof t&&e.constructor===t.constructor)if(e instanceof r.ValueType){if(e.equals(t))return!0}else{if(Array.isArray(e))return 0===e.length&&0===t.length;if(e.constructor===Object)return be(e)&&be(t)}return!1}var M_=Object.freeze({__proto__:null,ccclass:Ws,property:Js,requireComponent:Ys,executionOrder:Xs,disallowMultiple:Ks,executeInEditMode:ec,menu:tc,playOnFocus:nc,inspector:ic,icon:oc,help:ac,type:pc,integer:fc,float:hc,boolean:dc,string:vc});e("bS",M_);var D_,z_,L_,F_,U_,B_,G_,V_,H_,j_,q_,k_=Hc.Flags.Destroyed,W_=Hc.Flags.PersistentMask,Y_=[];function X_(e){var t;if(e instanceof Hc){if(e._instantiate)return r.game._isCloning=!0,t=e._instantiate(null,!0),r.game._isCloning=!1,t;if(e instanceof r.Asset)throw new TypeError(O(6903))}return r.game._isCloning=!0,t=K_(e),r.game._isCloning=!1,t}function K_(e,t){var n;J_(e,n=e._iN$t?e._iN$t:e.constructor?new(0,e.constructor):Object.create(null),t);for(var i=0,o=Y_.length;i<o;++i)Y_[i]._iN$t=null;return Y_.length=0,n}function J_(e,t,n){_t.value(e,"_iN$t",t,!0),Y_.push(e);var i=e.constructor;if(r.Class._isCCClass(i))!function(e,t,n,i){for(var o=e.__values__,a=0;a<o.length;a++){var r=o[a],s=t[r];if("object"==typeof s&&s){var c=n[r];c instanceof gt&&c.constructor===s.constructor?c.set(s):n[r]=s._iN$t||Q_(s,i)}else n[r]=s}}(i,e,t,n);else for(var o in e)if(e.hasOwnProperty(o)&&(95!==o.charCodeAt(0)||95!==o.charCodeAt(1)||"__type__"===o)){var a=e[o];if("object"==typeof a&&a){if(a===t)continue;t[o]=a._iN$t||Q_(a,n)}else t[o]=a}e instanceof Hc&&(t._objFlags&=W_)}function Q_(e,t){if(e instanceof gt)return e.clone();if(e instanceof r.Asset)return e;var n;if(ArrayBuffer.isView(e)){var i=e.length;n=new e.constructor(i),e._iN$t=n,Y_.push(e);for(var o=0;o<i;++o)n[o]=e[o];return n}if(Array.isArray(e)){var a=e.length;n=new Array(a),e._iN$t=n,Y_.push(e);for(var s=0;s<a;++s){var c=e[s];n[s]="object"==typeof c&&c?c._iN$t||Q_(c,t):c}return n}if(e._objFlags&k_)return null;var l=e.constructor;if(r.Class._isCCClass(l)){if(t)if(t instanceof r.Component){if(e instanceof r._BaseNode||e instanceof r.Component)return e}else if(t instanceof r._BaseNode)if(e instanceof r._BaseNode){if(!e.isChildOf(t))return e}else if(e instanceof r.Component&&!e.node.isChildOf(t))return e;n=new l}else if(l===Object)n={};else{if(l)return e;n=Object.create(null)}return J_(e,n,t),n}function Z_(e,t){return(t<<3)+e}function $_(e){return oh[e]}function ef(e){switch(e){case j_.Uint8:return Uint8Array;case j_.Uint16:return Uint16Array;case j_.Uint32:return Uint32Array;case j_.Int8:return Int8Array;case j_.Int16:return Int16Array;case j_.Int32:return Int32Array;case j_.Float32:return Float32Array;case j_.Float64:return Float64Array}}X_._clone=K_,r.instantiate=X_,function(e){e[e.Uint8=0]="Uint8",e[e.Uint16=1]="Uint16",e[e.Uint32=2]="Uint32",e[e.Int8=3]="Int8",e[e.Int16=4]="Int16",e[e.Int32=5]="Int32",e[e.Float32=6]="Float32",e[e.Float64=7]="Float64"}(j_||(j_={})),function(e){e[e.Scalar=0]="Scalar",e[e.Vec2=1]="Vec2",e[e.Vec3=2]="Vec3",e[e.Vec4=3]="Vec4",e[e.Quat=4]="Quat",e[e.Mat4=5]="Mat4"}(q_||(q_={})),e("c1",Ws("cc.CompactValueTypeArray")((V_=G_=function(){function e(){ie(this,"_byteOffset",L_,this),ie(this,"_unitCount",F_,this),ie(this,"_unitElement",U_,this),ie(this,"_length",B_,this)}return e.lengthFor=function(e,t,n){return $_(t).requiredUnits*e.length*ef(n).BYTES_PER_ELEMENT},e.compress=function(t,n,i,o,a,r){for(var s=$_(n),c=ef(i),l=s.requiredUnits*t.length,m=new c(o,a,l),u=0;u<t.length;++u)s.compress(m,u,t[u]);var _=new e;return _._unitElement=Z_(i,n),_._byteOffset=r,_._unitCount=l,_._length=t.length,_},e.prototype.decompress=function(e){for(var t,n={storageUnit:7&(t=this._unitElement),elementType:t>>3},i=n.storageUnit,o=$_(n.elementType),a=new(ef(i))(e,this._byteOffset,this._unitCount),r=new Array(this._length),s=0;s<this._length;++s)r[s]=o.decompress(a,s);return r},e}(),G_.StorageUnit=j_,G_.ElementType=q_,L_=oe((z_=V_).prototype,"_byteOffset",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),F_=oe(z_.prototype,"_unitCount",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),U_=oe(z_.prototype,"_unitElement",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Z_(j_.Uint8,q_.Scalar)}}),B_=oe(z_.prototype,"_length",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),D_=z_))||D_);var tf,nf,of,af,rf,sf,cf,lf,mf,uf,_f,ff,hf,df,vf,pf,gf,xf,yf,Af,Tf,Cf,Ef,Sf,If,Rf,Nf,wf,bf,Of,Pf,Mf,Df,zf,Lf,Ff,Uf,Bf,Gf,Vf,Hf,jf,qf,kf,Wf,Yf,Xf,Kf,Jf,Qf,Zf,$f,eh,th,nh,ih,oh=((H_={})[q_.Scalar]={requiredUnits:1,compress:function(e,t,n){e[t]=n},decompress:function(e,t){return e[t]}},H_[q_.Vec2]={requiredUnits:2,compress:function(e,t,n){e[2*t]=n.x,e[2*t+1]=n.y},decompress:function(e,t){return new An(e[2*t],e[2*t+1])}},H_[q_.Vec3]={requiredUnits:3,compress:function(e,t,n){e[3*t]=n.x,e[3*t+1]=n.y,e[3*t+2]=n.z},decompress:function(e,t){return new An(e[3*t],e[3*t+1],e[3*t+2])}},H_[q_.Vec4]={requiredUnits:4,compress:function(e,t,n){e[4*t]=n.x,e[4*t+1]=n.y,e[4*t+2]=n.z,e[4*t+3]=n.w},decompress:function(e,t){return new qn(e[4*t],e[4*t+1],e[4*t+2],e[4*t+3])}},H_[q_.Quat]={requiredUnits:4,compress:function(e,t,n){e[4*t]=n.x,e[4*t+1]=n.y,e[4*t+2]=n.z,e[4*t+3]=n.w},decompress:function(e,t){return new Nn(e[4*t],e[4*t+1],e[4*t+2],e[4*t+3])}},H_[q_.Mat4]={requiredUnits:16,compress:function(e,t,n){Ln.toArray(e,n,16*t)},decompress:function(e,t){return Ln.fromArray(new Ln,e,16*t)}},H_);r._decorator=M_;var ah=Ws("cc.TargetInfo")((of=oe((nf=function(){ie(this,"localID",of,this)}).prototype,"localID",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),tf=nf))||tf,rh=(af=Ws("cc.TargetOverrideInfo"),rf=pc(Hc),sf=pc(ah),cf=pc(r.Node),lf=pc(ah),af((_f=oe((uf=function(){ie(this,"source",_f,this),ie(this,"sourceInfo",ff,this),ie(this,"propertyPath",hf,this),ie(this,"target",df,this),ie(this,"targetInfo",vf,this)}).prototype,"source",[Qs,rf],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ff=oe(uf.prototype,"sourceInfo",[Qs,sf],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),hf=oe(uf.prototype,"propertyPath",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),df=oe(uf.prototype,"target",[Qs,cf],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),vf=oe(uf.prototype,"targetInfo",[Qs,lf],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),mf=uf))||mf),sh=(pf=Ws("cc.PrefabInfo"),gf=pc([rh]),pf((Af=oe((yf=function(){ie(this,"root",Af,this),ie(this,"asset",Tf,this),ie(this,"fileId",Cf,this),ie(this,"instance",Ef,this),ie(this,"targetOverrides",Sf,this)}).prototype,"root",[Qs,rc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Tf=oe(yf.prototype,"asset",[Qs,rc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Cf=oe(yf.prototype,"fileId",[Qs,rc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),Ef=oe(yf.prototype,"instance",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Sf=oe(yf.prototype,"targetOverrides",[Qs,gf],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),xf=yf))||xf);r._PrefabInfo=sh;var ch=Ws("cc.CompPrefabInfo")((Nf=oe((Rf=function(){ie(this,"fileId",Nf,this)}).prototype,"fileId",[Qs,rc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),If=Rf))||If,lh=(wf=Ws("CCPropertyOverrideInfo"),bf=pc(ah),wf((Lf=function(){function e(){ie(this,"targetInfo",Mf,this),ie(this,"propertyPath",Df,this),ie(this,"value",zf,this)}return e.prototype.isTarget=function(){},e}(),Mf=oe((Pf=Lf).prototype,"targetInfo",[Qs,bf],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Df=oe(Pf.prototype,"propertyPath",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),zf=oe(Pf.prototype,"value",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Of=Pf))||Of),mh=(Ff=Ws("cc.MountedChildrenInfo"),Uf=pc(ah),Bf=pc([r.Node]),Ff((qf=function(){function e(){ie(this,"targetInfo",Hf,this),ie(this,"nodes",jf,this)}return e.prototype.isTarget=function(){},e}(),Hf=oe((Vf=qf).prototype,"targetInfo",[Qs,Uf],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),jf=oe(Vf.prototype,"nodes",[Qs,Bf],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Gf=Vf))||Gf),uh=(kf=Ws("cc.PrefabInstance"),Wf=pc(r.Node),Yf=pc([mh]),Xf=pc([lh]),Kf=pc([ah]),kf((ih=function(){function e(){ie(this,"fileId",Zf,this),ie(this,"prefabRootNode",$f,this),ie(this,"mountedChildren",eh,this),ie(this,"propertyOverrides",th,this),ie(this,"removedComponents",nh,this),this.targetMap={}}var t=e.prototype;return t.findPropertyOverride=function(){},t.removePropertyOverride=function(){},e}(),Zf=oe((Qf=ih).prototype,"fileId",[Qs],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),$f=oe(Qf.prototype,"prefabRootNode",[Qs,Wf],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),eh=oe(Qf.prototype,"mountedChildren",[Qs,Yf],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),th=oe(Qf.prototype,"propertyOverrides",[Qs,Xf],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),nh=oe(Qf.prototype,"removedComponents",[Qs,Kf],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Jf=Qf))||Jf);function _h(e){var t=e._prefab;if(t&&t.instance){if(!t.asset)return R(3701,e.name),void(t.instance=null);var n=e._objFlags,i=e._parent,o=e._id,a=e._prefab;r.game._isCloning=!0;var s=t.asset.data;s._iN$t=e,r.instantiate._clone(s,s),r.game._isCloning=!1,e._objFlags=n,e._parent=i,e._id=o,e._prefab&&(e._prefab.instance=null==a?void 0:a.instance)}}function fh(e,t,n){var i,o=t,a=null===(i=e._prefab)||void 0===i?void 0:i.instance;!n&&a&&(t[a.fileId]={},o=t[a.fileId]);var r=e._prefab;r&&(o[r.fileId]=e);for(var s=e.components,c=0;c<s.length;c++){var l=s[c];l.__prefab&&(o[l.__prefab.fileId]=l)}for(var m=0;m<e.children.length;m++)fh(e.children[m],o,!1)}function hh(e,t){if(!e)return null;for(var n=t,i=0;i<e.length;i++){if(!n)return null;n=n[e[i]]}return n}function dh(e,t,n){if(t)for(var i=0;i<t.length;i++){var o=t[i];if(o&&o.targetInfo){var a=hh(o.targetInfo.localID,n);if(!a)continue;if(o.nodes)for(var r=0;r<o.nodes.length;r++){var s=o.nodes[r];a._children.push(s),s._parent=a,s._onBatchCreated(!1)}}}}function vh(e,t,n){if(!(t.length<=0))for(var i=null,o=0;o<t.length;o++){var a=t[o];if(a&&a.targetInfo){if(!(i=hh(a.targetInfo.localID,n)))continue;var r=i,s=a.propertyPath.slice();if(s.length>0){var c=s.pop();if(!c)continue;for(var l=0;l<s.length&&(r=r[s[l]]);l++);if(!r)continue;if(Array.isArray(r))if("length"===c)r[c]=a.value;else{var m=Number.parseInt(c);Number.isInteger(m)&&m<r.length&&(r[c]=a.value)}else r[c]=a.value}}}}function ph(e){var t,n=null===(t=e._prefab)||void 0===t?void 0:t.targetOverrides;if(n)for(var i=0;i<n.length;i++){var o,a,r=n[i],s=r.source,c=r.sourceInfo;if(c){var l,m,u=null===(l=r.source)||void 0===l||null===(m=l._prefab)||void 0===m?void 0:m.instance;if(u&&u.targetMap&&(s=hh(c.localID,u.targetMap)),!s)continue}var _,f=r.targetInfo;if(f){var h=null===(o=r.target)||void 0===o||null===(a=o._prefab)||void 0===a?void 0:a.instance;if(h&&h.targetMap&&(_=hh(f.localID,h.targetMap))){var d=r.propertyPath.slice(),v=s;if(d.length>0){var p=d.pop();if(!p)return;for(var g=0;g<d.length;g++)v=v[d[g]];v[p]=_}}}}}var gh,xh,yh,Ah,Th,Ch,Eh,Sh,Ih,Rh,Nh,wh,bh,Oh,Ph=Object.freeze({__proto__:null,TargetInfo:ah,TargetOverrideInfo:rh,PrefabInfo:sh,CompPrefabInfo:ch,PropertyOverrideInfo:lh,MountedChildrenInfo:mh,PrefabInstance:uh,createNodeWithPrefab:_h,generateTargetMap:fh,getTarget:hh,applyMountedChildren:dh,applyPropertyOverrides:vh,applyTargetOverrides:ph}),Mh=ht({AUTO:0,SINGLE_INSTANCE:1,MULTI_INSTANCE:2}),Dh=e("c6",Ws("cc.Prefab")((Eh=Ch=function(e){function t(){var t;return ie(t=e.call(this)||this,"data",yh,ee(t)),ie(t,"optimizationPolicy",Ah,ee(t)),ie(t,"asyncLoadAssets",Th,ee(t)),t._createFunction=void 0,t._instantiatedTimes=void 0,t._createFunction=null,t._instantiatedTimes=0,t}J(t,e);var n=t.prototype;return n.createNode=function(e){var t=r.instantiate(this);t.name=this.name,e(null,t)},n.compileCreateFunction=function(){var e,t;this._createFunction=(t=(e=this.data)instanceof r._BaseNode&&e,new O_(e,t).result)},n._doInstantiate=function(e){return this.data._prefab||S(3700),this._createFunction||this.compileCreateFunction(),this._createFunction(e)},n._instantiate=function(){var e;return e=this.data._instantiate(),++this._instantiatedTimes,e},t}(al),Ch.OptimizationPolicy=Mh,Ch.OptimizationPolicyThreshold=3,yh=oe((xh=Eh).prototype,"data",[Qs,rc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Ah=oe(xh.prototype,"optimizationPolicy",[Qs,rc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Mh.AUTO}}),Th=oe(xh.prototype,"asyncLoadAssets",[Qs,rc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),gh=xh))||gh);_t.value(Dh,"_utils",Ph),r.Prefab=Dh,Ue(r,"cc._Prefab","Prefab"),e("bJ",(Sh=Ws("cc.PrefabLink"),Ih=pc(Dh),Rh=sc(),Sh((Oh=function(e){function t(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return ie(t=e.call.apply(e,[this].concat(i))||this,"prefab",bh,ee(t)),t}return J(t,e),t}(sm),bh=oe((wh=Oh).prototype,"prefab",[Ih,Qs,Rh],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Nh=wh))||Nh));var zh=new An;function Lh(e,t,n,i){i||(i=new An),e.convertToUINode(t,n,i);var o=n.position;return i.add(o),i}function Fh(e,t,n){return n||(n=new An),e.worldToScreen(t,n),n.x/=r.view.getScaleX(),n.y/=r.view.getScaleY(),n}var Uh=e("bR",{WorldNode3DToLocalNodeUI:Lh,WorldNode3DToWorldNodeUI:Fh});r.pipelineUtils=Uh,ue(r.pipelineUtils,"cc.pipelineUtils",[{name:"WorldNode3DToLocalNodeUI",newName:"convertToUINode",targetName:"cc.Camera.prototype",customFunction:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var i=t[0],o=t[3]||zh;return i.convertToUINode(t[1],t[2],o),o.add(t[2].position),t[3]||o.clone()}}])}}}));
